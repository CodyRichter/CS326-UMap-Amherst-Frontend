{"version":3,"sources":["components/MapComponent.js","pages/Home.js","pages/Classes.js","pages/Stops.js","pages/Login.js","App.js","index.js"],"names":["MapComponent","mapStyle","require","defaultCenter","lat","lng","defaultZoom","yesIWantToUseGoogleMapApiInternals","bootstrapURLKeys","key","options","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","scrollwheel","styles","draggableCursor","draggingCursor","Home","useState","name","startTime","endTime","location","upcomingClasses","pitstops","Grid","container","spacing","item","xs","Card","CardContent","Typography","variant","direction","justify","alignItems","Person","fontSize","justifyContent","to","component","IconButton","size","Edit","map","classInfo","idx","stop","className","Classes","classList","days","building","time","room","listDOM","i","length","classDOM","style","float","push","Stops","props","getData","state","columns","field","headerName","description","sortable","width","renderCell","params","LocalizationProvider","dateAdapter","AdapterDateFns","renderInput","TextField","helperText","inputFormat","openTo","value","rows","row","id","disabled","selected","onChange","newValue","rs","setState","Date","autoHeight","density","this","column","disableClickEventBubbling","pageSize","checkboxSelection","onRowSelected","data","isSelected","textAlign","Button","endIcon","onClick","saveData","React","Component","Login","label","href","App","basename","AppBar","position","Toolbar","edge","color","aria-label","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yyBAIe,SAASA,IACpB,IAAMC,EAAWC,EAAQ,KACzB,OAEQ,aADJ,CACK,IAAD,CACIC,cAAe,CAACC,IAAK,UAAWC,KAAM,WACtCC,YAAa,GACbC,oCAAkC,EAClCC,iBAAkB,CAACC,IAAK,2CACxBC,QAAS,CACLC,kBAAkB,EAClBC,WAAW,EACXC,mBAAmB,EACnBC,cAAc,EACdC,aAAa,EACbC,OAAQf,EACRgB,gBAAiB,OACjBC,eAAgB,cCZrB,SAASC,IAAQ,IAAD,EAEiBC,mBAAS,CACjD,CACIC,KAAM,cACNC,UAAW,WACXC,QAAS,WACTC,SAAU,WAEd,CACIH,KAAM,cACNC,UAAW,WACXC,QAAS,UACTC,SAAU,gBAbS,mBAEtBC,EAFsB,aAiBGL,mBAAS,CACnC,CACIC,KAAM,qBACNC,UAAW,UACXC,QAAS,UACTC,SAAU,WAEd,CACIH,KAAM,mBACNC,UAAW,UACXC,QAAS,UACTC,SAAU,6BA5BS,mBAiBtBE,EAjBsB,UAiC3B,OACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UAGI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UAGI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAS,KAArB,iCAEA,eAACR,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMC,QAAQ,aAAaC,WAAW,SAAhE,UACI,cAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACQ,EAAA,EAAD,CAAQC,SAAU,YAEtB,eAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,cAACG,EAAA,EAAD,CAAYC,QAAS,QAArB,sBACA,cAACD,EAAA,EAAD,CAAYC,QAAS,YAArB,2CASpB,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WAEI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMK,eAAe,gBAAgBH,WAAW,SAA1E,UACI,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACI,EAAA,EAAD,CAAYC,QAAS,KAArB,gCAEJ,cAACR,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC,IAAD,CAAMY,GAAG,WAAWC,UAAWC,IAAYC,KAAK,QAAQV,QAAQ,WAAhE,SACI,cAACW,EAAA,EAAD,WAIXrB,EAAgBsB,KAAI,SAACC,EAAWC,GAAZ,OACjB,eAACf,EAAA,EAAD,CAAsBC,QAAS,QAA/B,UAAyCa,EAAU3B,KAAnD,IAA0D2B,EAAU1B,YAAnD2B,aAOjC,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WAEI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMK,eAAe,gBAAgBH,WAAW,SAA1E,UACI,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACI,EAAA,EAAD,CAAYC,QAAS,KAArB,mCAEJ,cAACR,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC,IAAD,CAAMY,GAAG,SAASC,UAAWC,IAAYC,KAAK,QAAQV,QAAQ,WAA9D,SACI,cAACW,EAAA,EAAD,WAIXpB,EAASqB,KAAI,SAACG,EAAMD,GAAP,OACV,eAACf,EAAA,EAAD,CAAsBC,QAAS,QAA/B,UAAyCe,EAAK7B,KAA9C,IAAqD6B,EAAK5B,YAAzC2B,aAOjC,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAS,KAArB,mCACA,cAACD,EAAA,EAAD,CAAYC,QAAS,QAArB,wBAEA,uBAEA,cAACD,EAAA,EAAD,CAAYC,QAAS,KAArB,uCACA,cAACD,EAAA,EAAD,CAAYC,QAAS,QAArB,mCAWpB,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGoB,UAAW,eAA7B,SACI,cAACnD,EAAD,SCrID,SAASoD,IA4BtB,IA1BA,IAAIC,EAAY,CACd,CACEhC,KAAM,gBACNiC,KAAM,oBACNC,SAAU,gBACVC,KAAM,uBACNC,KAAM,OAER,CACEpC,KAAM,gBACNiC,KAAM,oBACNC,SAAU,MACVC,KAAM,uBACNC,KAAM,SAER,CACEpC,KAAM,gBACNiC,KAAM,2BACNC,SAAU,gBACVC,KAAM,qBACNC,KAAM,OAINC,EAAU,GAELC,EAAI,EAAGA,EAAIN,EAAUO,OAAQD,IAAK,CACzC,IAAIE,EACF,sBAAKV,UAAU,oBAAf,UACE,gCACGE,EAAUM,GAAGtC,KAAM,IACpB,sBAAMyC,MAAO,CAAEC,MAAO,SAAtB,SAAkCV,EAAUM,GAAGL,UAEjD,gCACGD,EAAUM,GAAGJ,SAAU,IACxB,sBAAMO,MAAO,CAAEC,MAAO,SAAtB,SAAkCV,EAAUM,GAAGH,UAEjD,wCAAWH,EAAUM,GAAGF,QACxB,wBAAQN,UAAU,iBAAlB,uBAGJO,EAAQM,KAAKH,GAYf,OARuB,IAAnBH,EAAQE,SACVF,EACE,qBAAKP,UAAU,oBAAf,SACE,6DAMJ,8BACE,sBAAKA,UAAU,oBAAf,UACE,gCACE,sBAAMA,UAAU,gBAAhB,4BACA,wBAAQA,UAAU,iBAAlB,0BAEF,qBAAKA,UAAU,eAAf,SAA+BO,IAC/B,wBAAQP,UAAU,iBAAlB,0BACA,wBAAQA,UAAU,iBAAlB,gC,qICnDac,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,UAEL,EAAKC,MAAQ,CACTC,QACI,CACA,CACIC,MAAO,WACPC,WAAY,WACZC,YAAa,4CACbC,UAAU,EACVC,MAAO,KAEX,CACIJ,MAAO,OACPC,WAAY,OACZC,YAAa,oCACbC,UAAU,EACVC,MAAO,IACPC,WAAY,SAACC,GAAD,OACR,cAACC,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACI,cAAC,IAAD,CACIC,YAAa,SAACJ,GAAD,OAAY,cAACK,EAAA,EAAD,2BAAeL,GAAf,IAAuBM,WAAY,SAC5DC,YAAY,iBACZC,OAAQ,OACRC,MAAO,EAAKjB,MAAMkB,KAAKV,EAAOW,IAAIC,IAAIhC,KACtCiC,UAAW,EAAKrB,MAAMkB,KAAKV,EAAOW,IAAIC,IAAIE,SAC1CC,SAAU,SAACC,GACP,IAAIC,EAAK,EAAKzB,MAAMkB,KACpBO,EAAGjB,EAAOW,IAAIC,IAAIhC,KAAOoC,EACzB,EAAKE,SAAS,CAACR,KAAMO,YAQ7CP,KAAM,CACF,CAAEE,GAAI,EAAGhE,SAAU,2BAA4BgC,KAAM,IAAIuC,KAAQL,UAAU,GAC3E,CAAEF,GAAI,EAAGhE,SAAU,0BAA2BgC,KAAM,IAAIuC,KAAQL,UAAU,GAC1E,CAAEF,GAAI,EAAGhE,SAAU,2BAA4BgC,KAAM,IAAIuC,KAAQL,UAAU,GAC3E,CAAEF,GAAI,EAAGhE,SAAU,2BAA4BgC,KAAM,IAAIuC,KAAQL,UAAU,GAC3E,CAAEF,GAAI,EAAGhE,SAAU,YAAagC,KAAM,IAAIuC,KAAQL,UAAU,GAC5D,CAAEF,GAAI,EAAGhE,SAAU,0BAA2BgC,KAAM,IAAIuC,KAAQL,UAAU,GAC1E,CAAEF,GAAI,EAAGhE,SAAU,aAAcgC,KAAM,IAAIuC,KAAQL,UAAU,GAC7D,CAAEF,GAAI,EAAGhE,SAAU,gBAAiBgC,KAAM,IAAIuC,KAAQL,UAAU,GAChE,CAAEF,GAAI,EAAGhE,SAAU,yBAA0BgC,KAAM,IAAIuC,KAAQL,UAAU,KAjDlE,E,2CAsDnB,c,sBAMA,c,oBAKA,WAAU,IAAD,OACL,OACI,8BACI,eAAC/D,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMK,eAAe,SAASH,WAAW,SAAST,QAAS,EAArF,UAEI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACG,EAAA,EAAD,CAAYC,QAAS,KAArB,kCAGJ,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAU+D,YAAU,EAACC,QAAQ,eAAeX,KAAMY,KAAK9B,MAAMkB,KAAMjB,QAAS6B,KAAK9B,MAAMC,QAAQtB,KAAI,SAACoD,GAAD,mBAAC,eAC7FA,GAD4F,IAE/FC,2BAA2B,OAC1BC,SAAU,EACLC,mBAAiB,EACjBC,cAAe,SAAC3B,GACZ,IAAIiB,EAAK,EAAKzB,MAAMkB,KACpBO,EAAGjB,EAAO4B,KAAKhB,IAAIE,SAAWd,EAAO6B,WACrC,EAAKX,SAAS,CAACR,KAAMO,aAM/C,cAAClE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMK,eAAe,WAAWH,WAAW,SAArE,SACI,eAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI+B,MAAO,CAAC4C,UAAW,SAAtC,UACI,cAAC,IAAD,CAAMhE,GAAG,IAAT,SACI,cAACiE,EAAA,EAAD,CAAQxE,QAAQ,YAAYyE,QAAS,cAAC,IAAD,IAArC,6BAFR,OAOI,cAAC,IAAD,CAAMlE,GAAG,IAAT,SACI,cAACiE,EAAA,EAAD,CAAQxE,QAAQ,YAAYyE,QAAS,cAAC,IAAD,IAAcC,QAASX,KAAKY,WAAjE,8C,GAvGDC,IAAMC,W,oCCR1B,SAASC,IAEpB,OACE,sBAAK9D,UAAY,OAAjB,UAEI,qBAAKA,UAAY,QAAjB,0BAIA,qBAAKA,UAAY,aAAjB,mBAIA,sBAAKA,UAAY,gBAAjB,UACE,cAACxB,EAAA,EAAD,CAAMwB,UAAY,eAAlB,SACE,cAAC,IAAD,MAEF,cAAC8B,EAAA,EAAD,CAAWiC,MAAQ,WAAW/E,QAAU,gBAG1C,sBAAKgB,UAAY,gBAAjB,UACE,cAACxB,EAAA,EAAD,CAAMwB,UAAY,eAAlB,SACE,cAAC,IAAD,MAEF,cAAC8B,EAAA,EAAD,CAAWiC,MAAQ,WAAW/E,QAAU,gBAG1C,qBAAKgB,UAAY,cAAjB,SACE,cAACwD,EAAA,EAAD,CAAQxE,QAAU,YAAYgF,KAAO,IAArC,qBAKF,qBAAKhE,UAAY,gBAAjB,SACE,cAACwD,EAAA,EAAD,+BAKF,qBAAKxD,UAAY,QAAjB,SACE,cAACwD,EAAA,EAAD,CAAQQ,KAAO,IAAf,+B,+BChCG,SAASC,IACtB,OAEI,eAAC,IAAD,CAAYC,SAAU,IAAtB,UAEE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CAASrF,QAAQ,QAAjB,UACE,cAAC,IAAD,CAAMO,GAAG,IAAIC,UAAWC,IAAY6E,KAAK,QAAQC,MAAM,UAAUC,aAAW,OAA5E,SACE,cAAC,IAAD,MAEF,cAACzF,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BAGE,cAAC,IAAD,CAAMO,GAAG,IAAIC,UAAWgE,IAAQe,MAAO,UAAvC,kBACA,cAAC,IAAD,CAAMhF,GAAG,WAAWC,UAAWgE,IAAQe,MAAO,UAA9C,qBACA,cAAC,IAAD,CAAMhF,GAAG,SAASC,UAAWgE,IAAQe,MAAO,UAA5C,sBACA,cAAC,IAAD,CAAMhF,GAAG,SAASC,UAAWgE,IAAQe,MAAO,UAA5C,wBAIN,cAAC,IAAD,UACE,eAAC/F,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMK,eAAe,SAASH,WAAW,SAASa,UAAW,gBAAvF,UACE,cAAC,IAAD,CAAOyE,KAAK,IAAIC,OAAK,EAArB,SACE,cAAClG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIoB,UAAW,YAA9B,SACE,cAAChC,EAAD,QAGJ,cAAC,IAAD,CAAOyG,KAAK,WAAZ,SACE,cAACjG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGoB,UAAW,YAA7B,SACE,cAACC,EAAD,QAGJ,cAAC,IAAD,CAAOwE,KAAK,SAASC,OAAK,EAA1B,SACE,cAAClG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGoB,UAAW,YAA7B,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAOyE,KAAK,SAAZ,SACE,cAACjG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGoB,UAAW,YAA7B,SACE,cAAC8D,EAAD,gB,qBC/ChBa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,W","file":"static/js/main.691dd2d4.chunk.js","sourcesContent":["import GoogleMapReact from 'google-map-react';\nimport React from 'react';\n\n\nexport default function MapComponent() {\n    const mapStyle = require('../mapstyle.json');\n    return (\n        // Important! Always set the container height explicitly\n            <GoogleMapReact\n                defaultCenter={{lat: 42.389564, lng: -72.526512}}\n                defaultZoom={16}\n                yesIWantToUseGoogleMapApiInternals\n                bootstrapURLKeys={{key: \"AIzaSyAz2oL1-IeVDxCY7lWV2ivTZ3LIpEkrWEE\"}}\n                options={{\n                    disableDefaultUI: true, // disable default map UI\n                    draggable: true, // make map draggable\n                    keyboardShortcuts: false, // disable keyboard shortcuts\n                    scaleControl: true, // allow scale control\n                    scrollwheel: true, // allow scroll wheel\n                    styles: mapStyle, // change default map styles\n                    draggableCursor: 'grab',\n                    draggingCursor: 'grabbing',\n                }}\n            >\n            </GoogleMapReact>\n    );\n}","import React, {useState} from \"react\";\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Edit, Person} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MapComponent from \"../components/MapComponent\";\nimport {Link} from \"react-router-dom\";\n\n\nexport default function Home() {\n\n    let [upcomingClasses, setUpcomingClasses] = useState([\n        {\n            name: 'Compsci 121',\n            startTime: '11:15 AM',\n            endTime: '12:05 PM',\n            location: 'ILC 151'\n        },\n        {\n            name: 'History 115',\n            startTime: '12:20 PM',\n            endTime: '1:10 PM',\n            location: 'Herter 212'\n        }\n    ]);\n\n    let [pitstops, setPitstops] = useState([\n        {\n            name: 'Lunch at Blue Wall',\n            startTime: '1:30 PM',\n            endTime: '2:30 PM',\n            location: 'ILC 151'\n        },\n        {\n            name: 'Study at Library',\n            startTime: '4:00 PM',\n            endTime: '6:00 PM',\n            location: 'W.E.B. Du Bois Library'\n        }\n    ]);\n\n\n    return (\n        <Grid container spacing={3}>\n\n            {/*Sidebar*/}\n            <Grid item xs={4}>\n                <Grid container spacing={2}>\n\n                    {/*Student Information*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Student Information</Typography>\n\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n                                    <Grid item xs={2}>\n                                        <Person fontSize={'large'} />\n                                    </Grid>\n                                    <Grid item xs={10}>\n                                        <Typography variant={'body1'}>John Doe</Typography>\n                                        <Typography variant={'subtitle1'}>Computer Science</Typography>\n                                    </Grid>\n                                </Grid>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Upcoming Classes*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Upcoming Classes</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/classes\" component={IconButton} size=\"small\" variant=\"outlined\">\n                                            <Edit />\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {upcomingClasses.map((classInfo, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{classInfo.name} {classInfo.startTime}</Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Pit stops*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Scheduled Pit Stops</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/stops\" component={IconButton} size=\"small\" variant=\"outlined\">\n                                            <Edit />\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {pitstops.map((stop, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{stop.name} {stop.startTime}</Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Class Info*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Time Until Next Class</Typography>\n                                <Typography variant={'body1'}>10 Minutes</Typography>\n\n                                <br />\n\n                                <Typography variant={'h6'}>Travel Time to Next Class</Typography>\n                                <Typography variant={'body1'}>6 Minutes</Typography>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n\n\n            {/*Map*/}\n            <Grid item xs={8} className={'mapContainer'}>\n                <MapComponent />\n            </Grid>\n\n        </Grid>\n    );\n}\n","import React from \"react\";\n\nexport default function Classes() {\n  // Array of class objects to load from backend\n  let classList = [\n    {\n      name: \"COMPSCI - 121\",\n      days: \"Monday, Wednesday\",\n      building: \"Thompson Hall\",\n      time: \"11:15 AM to 12:05 PM\",\n      room: \"104\",\n    },\n    {\n      name: \"COMPSCI - 220\",\n      days: \"Tuesday, Thursday\",\n      building: \"ILC\",\n      time: \"10:00 AM to 11:15 AM\",\n      room: \"N 151\",\n    },\n    {\n      name: \"COMPSCI - 311\",\n      days: \"Friday, Saturday, Sunday\",\n      building: \"Goessmann Lab\",\n      time: \"2:50 AM to 3:11 PM\",\n      room: \"20\",\n    },\n  ];\n\n  let listDOM = []; // stores class list dom\n  // Loading all of the classes\n  for (let i = 0; i < classList.length; i++) {\n    let classDOM = (\n      <div className=\"classes-list-item\">\n        <div>\n          {classList[i].name}{\" \"}\n          <span style={{ float: \"right\" }}>{classList[i].days}</span>\n        </div>\n        <div>\n          {classList[i].building}{\" \"}\n          <span style={{ float: \"right\" }}>{classList[i].time}</span>\n        </div>\n        <div>Room {classList[i].room}</div>\n        <button className=\"classes-button\">Remove</button>\n      </div>\n    );\n    listDOM.push(classDOM);\n  }\n\n  // No classes loaded check\n  if (listDOM.length === 0) {\n    listDOM = (\n      <div className=\"classes-list-item\">\n        <div>No classes scheduled :(</div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"classes-dashboard\">\n        <div>\n          <span className=\"classes-title\">Class Schedule</span>\n          <button className=\"classes-button\">Add Class</button>\n        </div>\n        <div className=\"classes-list\">{listDOM}</div>\n        <button className=\"classes-button\">Save Classes</button>\n        <button className=\"classes-button\">Return to Map</button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {DataGrid} from \"@material-ui/data-grid\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport MapIcon from '@material-ui/icons/Map';\nimport SaveIcon from '@material-ui/icons/Save';\nimport KeyboardTimePicker from '@material-ui/lab/DateTimePicker';\nimport {CardContent, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\n\n\nexport default class Stops extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.getData();\n\n        this.state = {\n            columns:\n                [\n                {\n                    field: 'location',\n                    headerName: 'Location',\n                    description: 'This column has the location of pit stops',\n                    sortable: true,\n                    width: 300\n                },\n                {\n                    field: 'time',\n                    headerName: 'Time',\n                    description: 'This column has the time selector',\n                    sortable: false,\n                    width: 300,\n                    renderCell: (params) => (\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <KeyboardTimePicker\n                                renderInput={(params) => <TextField {...params} helperText={null}/>}\n                                inputFormat=\"EEEE - hh:mm a\"\n                                openTo={\"date\"}\n                                value={this.state.rows[params.row.id].time}\n                                disabled={!this.state.rows[params.row.id].selected}\n                                onChange={(newValue) => {\n                                    let rs = this.state.rows;\n                                    rs[params.row.id].time = newValue;\n                                    this.setState({rows: rs});\n\n                                }}\n                            />\n                        </LocalizationProvider>\n                    )\n                }\n                ],\n            rows: [\n                { id: 0, location: 'Worcester Dining Commons', time: new Date(), selected: false},\n                { id: 1, location: 'Franklin Dining Commons', time: new Date(), selected: false},\n                { id: 2, location: 'Hampshire Dining Commons', time: new Date(), selected: false},\n                { id: 3, location: 'Berkshire Dining Commons', time: new Date(), selected: false},\n                { id: 4, location: 'Blue Wall', time: new Date(), selected: false},\n                { id: 5, location: 'Procrastination Station', time: new Date(), selected: false},\n                { id: 6, location: 'Roots Cafe', time: new Date(), selected: false},\n                { id: 7, location: 'Campus Center', time: new Date(), selected: false},\n                { id: 8, location: 'W.E.B. Du Bois Library', time: new Date(), selected: false}\n            ]\n        }\n    }\n\n    getData() {\n        // Once backend is hooked up\n        // Retrieve user selected data and fill this.state.rows\n    }\n\n\n    saveData() {\n        // Once the backend is hooked up\n        // Send this.state.selected to it for database storage\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n\n                    <Grid item xs={12}>\n                        <Typography variant={'h4'}>Schedule Pit Stops</Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <DataGrid autoHeight density=\"headerHeight\" rows={this.state.rows} columns={this.state.columns.map((column) => ({\n                                    ...column,\n                                    disableClickEventBubbling: true,\n                                }))} pageSize={5}\n                                          checkboxSelection\n                                          onRowSelected={(params) => {\n                                              let rs = this.state.rows;\n                                              rs[params.data.id].selected = params.isSelected;\n                                              this.setState({rows: rs});\n                                          }}/>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n                            <Grid item xs={12} style={{textAlign: \"right\"}}>\n                                <Link to=\"/\">\n                                    <Button variant=\"contained\" endIcon={<MapIcon />}>\n                                        Return to Map\n                                    </Button>\n                                </Link>\n                                &nbsp;\n                                <Link to=\"/\">\n                                    <Button variant=\"contained\" endIcon={<SaveIcon />} onClick={this.saveData()}>\n                                        Save Pit Stops\n                                    </Button>\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Button from '@material-ui/core/Button';\n\nexport default function Login() \n{\n    return (\n      <div className = \"page\">\n\n          <div className = \"title\">\n              UMap Amherst\n          </div>\n\n          <div className = \"loginTitle\">\n              Login\n          </div>\n\n          <div className = \"usernameField\">\n            <Grid className = \"usernameIcon\">\n              <PersonIcon/>\n            </Grid>\n            <TextField label = \"Username\" variant = \"outlined\"/>\n          </div>\n\n          <div className = \"passwordField\">\n            <Grid className = \"passwordIcon\">\n              <LockIcon/>\n            </Grid>\n            <TextField label = \"Password\" variant = \"outlined\"/>\n          </div>\n\n          <div className = \"loginButton\">\n            <Button variant = \"contained\" href = \"/\">\n              Login\n            </Button>\n          </div>\n\n          <div className = \"createAccount\">\n            <Button>\n              Create Account \n            </Button>\n          </div>\n\n          <div className = \"guest\">\n            <Button href = \"/\">\n              Use as Guest\n            </Button>\n          </div>\n\n      </div>\n    );\n}","import React from \"react\";\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Classes from \"./pages/Classes\";\nimport Stops from \"./pages/Stops\";\nimport Login from \"./pages/Login\";\nimport {AppBar, Button, Grid, IconButton, Toolbar, Typography} from \"@material-ui/core\";\nimport {Map as MapIcon, } from \"@material-ui/icons\";\n\n\nexport default function App() {\n  return (\n\n      <HashRouter basename={'/'}>\n\n        <AppBar position=\"sticky\">\n          <Toolbar variant=\"dense\">\n            <Link to=\"/\" component={IconButton} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <MapIcon />\n            </Link>\n            <Typography variant=\"h6\">\n              UMap Amherst\n            </Typography>\n              <Link to=\"/\" component={Button} color={'inherit'}>Home</Link>\n              <Link to=\"/classes\" component={Button} color={'inherit'}>Classes</Link>\n              <Link to=\"/stops\" component={Button} color={'inherit'}>Pitstops</Link>\n              <Link to=\"/login\" component={Button} color={'inherit'}>Login</Link>\n          </Toolbar>\n        </AppBar>\n\n        <Switch>\n          <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" className={'pageContainer'}>\n            <Route path=\"/\" exact>\n              <Grid item xs={10} className={'innerPage'}>\n                <Home />\n              </Grid>\n            </Route>\n            <Route path=\"/classes\">\n              <Grid item xs={8} className={'innerPage'}>\n                <Classes />\n              </Grid>\n            </Route>\n            <Route path=\"/stops\" exact>\n              <Grid item xs={8} className={'innerPage'}>\n                <Stops />\n              </Grid>\n            </Route>\n            <Route path=\"/login\">\n              <Grid item xs={4} className={'innerPage'}>\n                <Login />\n              </Grid>\n            </Route>\n\n          </Grid>\n\n        </Switch>\n\n      </HashRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./main.css\";\nimport \"./classes.css\";\nimport \"./login.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}