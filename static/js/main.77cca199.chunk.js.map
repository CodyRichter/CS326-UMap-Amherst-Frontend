{"version":3,"sources":["components/MapComponent.js","pages/Home.js","pages/Classes.js","pages/Stops.js","pages/Login.js","App.js","index.js"],"names":["MapComponent","props","mapStyle","require","useState","map","setMap","maps","setMaps","useEffect","route","directions","api_result","routes","legs","steps","forEach","leg","idx","push","lat","start_location","lng","end_location","mapResultToCoords","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","handleLoadGoogleMapsAPI","defaultCenter","defaultZoom","onGoogleApiLoaded","yesIWantToUseGoogleMapApiInternals","bootstrapURLKeys","key","options","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","styles","draggableCursor","draggingCursor","Home","classname","time","buildingname","room","upcomingClasses","setUpcomingClasses","location","pitstops","setPitstops","timeUntilNextClass","setTimeUntilNextClass","setRoute","userData","localStorage","getItem","JSON","parse","userID","id","axios","request","method","url","then","res","data","catch","err","console","log","Grid","container","spacing","item","xs","Card","CardContent","Typography","variant","direction","justify","alignItems","Person","fontSize","justifyContent","to","IconButton","size","Edit","length","classInfo","stop","className","Classes","classes","useStyles","a","userJSON","get","params","email","password","user","results","setItem","state","split","availableClasses","availableBuildings","currentClasses","classIDs","obj","class","classData","i","newClassData","buildingNames","building","newData","name","newClassList","days","monday","tuesday","wednesday","thursday","friday","newClass","setState","loaded","classList","fetchData","hour","minute","classSelectDOM","buildingSelectDOM","keyVal","handleChange","event","target","value","selectClass","MenuItem","selectBuilding","listDOM","classDOM","style","float","onClick","newList","splice","removeClass","Button","endIcon","toggleAddMenu","textAlign","FormControl","formControl","InputLabel","Select","labelId","onChange","margin","htmlFor","BootstrapInput","document","getElementById","display","addClass","update","fetch","headers","json","ids","body","stringify","error","save","href","innerHTML","makeStyles","theme","minWidth","selectEmpty","marginTop","withStyles","root","input","borderRadius","position","backgroundColor","palette","background","paper","border","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","Stops","getData","selectedStops","selectedRows","selectedRowIds","newRows","Date","filter","b","rows","selected","search","columns","field","headerName","description","sortable","width","renderCell","LocalizationProvider","dateAdapter","AdapterDateFns","renderInput","TextField","helperText","inputFormat","openTo","row","disabled","newValue","rs","searchFilter","bind","saveData","this","post","response","stringSearch","trim","toLowerCase","includes","timeSearch","toLocaleDateString","weekday","FilledInput","autoHeight","disableColumnFilter","density","column","disableClickEventBubbling","pageSize","checkboxSelection","selectionModel","onRowSelected","isSelected","textDecoration","React","Component","Login","open","isOpen","closeForm","firstName","lastName","major","emailAddress","users","loginEmail","setLoginEmail","loginPassword","setLoginPassword","loginUser","setId","setFirstName","setLastName","setMajor","setEmailAddress","setPassword","label","type","window","Dialog","DialogTitle","DialogContent","DialogContentText","fullWidth","DialogActions","classesPageComponent","homePageComponent","stopsPageComponent","loginPageComponent","App","basename","AppBar","Toolbar","edge","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77cca199.chunk.js","sourcesContent":["import GoogleMapReact from 'google-map-react';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\n\r\nexport default function MapComponent(props) {\r\n    const mapStyle = require('../mapstyle.json');\r\n\r\n    let [map, setMap] = useState(null);\r\n    let [maps, setMaps] = useState(null);\r\n\r\n    useEffect( () => {\r\n        handleLoadGoogleMapsAPI(map, maps);\r\n    }, [props.route]);\r\n\r\n    function mapResultToCoords(api_result) {\r\n        let directions = [];\r\n        api_result.routes[0].legs[0].steps.forEach((leg, idx) => {\r\n            directions.push({lat: leg.start_location.lat, lng: leg.start_location.lng})\r\n            directions.push({lat: leg.end_location.lat, lng: leg.end_location.lng})\r\n        });\r\n        return directions;\r\n    }\r\n\r\n    function handleLoadGoogleMapsAPI() {\r\n        if (map && maps && props.route) {\r\n\r\n            if (!props.route) {\r\n                return;\r\n            }\r\n\r\n            let directions = mapResultToCoords(props.route);\r\n\r\n            const directionPath = new maps.Polyline({\r\n                path: directions,\r\n                geodesic: true,\r\n                strokeColor: \"#389C29\",\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 3,\r\n            });\r\n            directionPath.setMap(map);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        // Important! Always set the container height explicitly\r\n        <GoogleMapReact\r\n            defaultCenter={{lat: 42.389564, lng: -72.526512}}\r\n            defaultZoom={16}\r\n            onGoogleApiLoaded={({map, maps}) => {setMap(map); setMaps(maps);}}\r\n            yesIWantToUseGoogleMapApiInternals\r\n            bootstrapURLKeys={{key: \"AIzaSyAz2oL1-IeVDxCY7lWV2ivTZ3LIpEkrWEE\"}}\r\n            options={{\r\n                disableDefaultUI: true, // disable default map UI\r\n                draggable: true, // make map draggable\r\n                keyboardShortcuts: false, // disable keyboard shortcuts\r\n                scaleControl: true, // allow scale control\r\n                styles: mapStyle, // change default map styles\r\n                draggableCursor: 'grab',\r\n                draggingCursor: 'grabbing',\r\n            }}\r\n        >\r\n        </GoogleMapReact>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {Edit, Person} from \"@material-ui/icons\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MapComponent from \"../components/MapComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Home() {\r\n\r\n    let [upcomingClasses, setUpcomingClasses] = useState([\r\n        {\r\n            classname: 'Today',\r\n            time: 'No Upcoming Classes',\r\n            buildingname: '',\r\n            room: '',\r\n        }\r\n    ]);\r\n\r\n    let [pitstops, setPitstops] = useState([\r\n        {\r\n            time: '',\r\n            location: 'No Pitstops'\r\n        }\r\n    ]);\r\n\r\n    let [timeUntilNextClass, setTimeUntilNextClass] = useState('No more classes today.');\r\n\r\n    let [route, setRoute] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let userData = localStorage.getItem('user') && localStorage.getItem('user')[0] ? JSON.parse(localStorage.getItem('user'))[0] : {};\r\n        let userID = userData ? userData.id : -1;\r\n        if (userID !== -1) {\r\n            axios.request({\r\n                method: 'get',\r\n                url: 'https://cs326-umap-amherst.herokuapp.com/home?userID=' + userID\r\n            }).then((res) => {\r\n                setUpcomingClasses(res.data['classes']);\r\n                setPitstops(res.data['stops']);\r\n                setTimeUntilNextClass(res.data['timeUntilNextClass']);\r\n                setRoute(res.data['route']);\r\n            }).catch((err) => {\r\n                console.log('Unable to connect to backend to load data.')\r\n            });\r\n        } else {\r\n            console.log('No user found. Current user data' + localStorage.getItem('user'))\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n\r\n            {/*Sidebar*/}\r\n            <Grid item xs={4}>\r\n                <Grid container spacing={2}>\r\n\r\n                    {/*Student Information*/}\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={'h6'}>Student Information</Typography>\r\n\r\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                                    <Grid item xs={2}>\r\n                                        <Person fontSize={'large'} />\r\n                                    </Grid>\r\n                                    <Grid item xs={10}>\r\n                                        <Typography variant={'body1'}>John Doe</Typography>\r\n                                        <Typography variant={'subtitle1'}>Computer Science</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    {/*Upcoming Classes*/}\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n\r\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography variant={'h6'}>Upcoming Classes</Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Link to=\"/classes\">\r\n                                            <IconButton size=\"small\" variant=\"outlined\">\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {upcomingClasses.length === 0 &&\r\n                                    <Typography variant={'body1'}>No more classes today.</Typography>\r\n                                }\r\n                                {upcomingClasses.map((classInfo, idx) =>\r\n                                    <Typography key={idx} variant={'body1'}>{classInfo.classname}: {classInfo.buildingname} {classInfo.room}  <b>{classInfo.time}</b></Typography>\r\n                                )}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    {/*Pit stops*/}\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n\r\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography variant={'h6'}>Scheduled Pit Stops</Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Link to=\"/stops\">\r\n                                            <IconButton size=\"small\" variant=\"outlined\">\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {pitstops.length === 0 &&\r\n                                <Typography variant={'body1'}>No more pitstops today.</Typography>\r\n                                }\r\n                                {pitstops.map((stop, idx) =>\r\n                                    <Typography key={idx} variant={'body1'}>{stop.location}  <b>{stop.time}</b></Typography>\r\n                                )}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    {/*Class Info*/}\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={'h6'}>Time Until Next Class</Typography>\r\n                                <Typography variant={'body1'}>{timeUntilNextClass}</Typography>\r\n\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            {/*Map*/}\r\n            <Grid item xs={8} className={'mapContainer'}>\r\n                <MapComponent route={route} />\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MapIcon from \"@material-ui/icons/Map\";\r\nimport axios from 'axios'\r\n\r\nexport default function Classes() {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let userJSON = JSON.parse(localStorage.getItem(\"user\"));\r\n      let user = (await axios.get('https://cs326-umap-amherst.herokuapp.com/userid',{params:{email:userJSON[0].email, password:userJSON[0].password}})).data.results[0].id;\r\n      localStorage.setItem(\"userid\", user);\r\n      state.userID = user;\r\n      state.email = userJSON[0].email.split(\"@\")[0];\r\n      \r\n      // Loads available classes to select from SQL\r\n      let availableClasses = await axios.get('https://cs326-umap-amherst.herokuapp.com/classOptions');\r\n\r\n      // Loads available buildings to select from SQL\r\n      let availableBuildings = await axios.get('https://cs326-umap-amherst.herokuapp.com/buildings');\r\n\r\n      // Loads current classes from database\r\n      let currentClasses = await axios.get('https://cs326-umap-amherst.herokuapp.com/userclasses', {params:{userID:state.userID}});\r\n      \r\n      let classIDs = [];\r\n      currentClasses.data.results.map((obj) => classIDs.push(obj.class));\r\n\r\n      let classData = [];\r\n      for (let i = 0; i < classIDs.length; i++) {\r\n        let newClassData = await axios.get('https://cs326-umap-amherst.herokuapp.com/classes', {params:{id:classIDs[i]}});\r\n        classData.push(newClassData.data.results[0]);\r\n      }\r\n\r\n      let buildingNames = [];\r\n      for (let i = 0; i < classData.length; i++) {\r\n        let newData = await axios.get('https://cs326-umap-amherst.herokuapp.com/buildings', {params:{id:classData[i].building}});\r\n        buildingNames.push(newData.data.results[0].name);\r\n      }\r\n\r\n      let newClassList = [];\r\n      for (let i = 0; i < classData.length; i++) {\r\n        let days = \"\";\r\n        if (classData[i].monday === true) days += \"Mon \";\r\n        if (classData[i].tuesday === true) days += \"Tues \";\r\n        if (classData[i].wednesday === true) days += \"Wed \";\r\n        if (classData[i].thursday === true) days += \"Thurs \";\r\n        if (classData[i].friday === true) days += \"Fri \";\r\n        let newClass = {\r\n          name: classData[i].name,\r\n          room: classData[i].room,\r\n          time: classData[i].time,\r\n          building: buildingNames[i],\r\n          days: days,\r\n        };\r\n        newClassList.push(newClass);\r\n      }\r\n\r\n      setState({\r\n        ...state,\r\n        loaded: true,\r\n        availableClasses: availableClasses.data.results,\r\n        availableBuildings: availableBuildings.data.results,\r\n        currentClasses: currentClasses.results,\r\n        classList: newClassList,\r\n      });\r\n    }\r\n    if (state.loaded === false) {\r\n      fetchData();\r\n    }\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    days: \"\",\r\n    building: \"\",\r\n    hour: \"\",\r\n    minute: \"\",\r\n    time: \"\",\r\n    room: \"001\",\r\n    classList: [],\r\n    classSelectDOM: [],\r\n    buildingSelectDOM: [],\r\n    availableClasses: [],\r\n    availableBuildings: [],\r\n    currentClasses: [],\r\n    keyVal: 0,\r\n    loaded: false,\r\n    userID: 0,\r\n    email: \"\",\r\n  });\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // Loading all selectable class that are available to add\r\n  state.classSelectDOM = [];\r\n  for (let i = 0; i < state.availableClasses.length; i++) {\r\n    let selectClass = (\r\n      <MenuItem value={state.availableClasses[i].name} key={state.keyVal++}>\r\n        {state.availableClasses[i].name}\r\n      </MenuItem>\r\n    );\r\n    state.classSelectDOM.push(selectClass);\r\n  }\r\n  // Loading all selectable buildings that are available to add\r\n  state.buildingSelectDOM = [];\r\n  for (let i = 0; i < state.availableBuildings.length; i++) {\r\n    let selectBuilding = (\r\n      <MenuItem value={state.availableBuildings[i].name} key={state.keyVal++}>\r\n        {state.availableBuildings[i].name}\r\n      </MenuItem>\r\n    );\r\n    state.buildingSelectDOM.push(selectBuilding);\r\n  }\r\n\r\n  let listDOM = []; // stores class list dom\r\n  // Loading all of the classes\r\n  for (let i = 0; i < state.classList.length; i++) {\r\n    let classDOM = (\r\n      <div className=\"classes-list-item\" key={state.keyVal++}>\r\n        <div>\r\n          {state.classList[i].name}{\" \"}\r\n          <span style={{ float: \"right\" }}>{state.classList[i].days}</span>\r\n        </div>\r\n        <div>\r\n          {state.classList[i].building}{\" \"}\r\n          <span style={{ float: \"right\" }}>{state.classList[i].time}</span>\r\n        </div>\r\n        <div>Room {state.classList[i].room}</div>\r\n        <button\r\n          className=\"classes-button\"\r\n          onClick={() => setState(removeClass(state, i))}\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    );\r\n    listDOM.push(classDOM);\r\n  }\r\n\r\n  // No classes loaded check\r\n  if (listDOM.length === 0) {\r\n    listDOM = (\r\n      <div className=\"classes-list-item\">\r\n        <div>No classes scheduled :(</div>\r\n        <br />\r\n        <br />\r\n        <div>Try refreshing the page? Or add class through the add button!</div>\r\n          <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-return\" onClick={()=>setState({...state, loaded:false})}>\r\n            Refresh\r\n          </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (state.loaded === false) {\r\n    return (\r\n      <div>\r\n        <div className=\"classes-dashboard\">\r\n          <span className=\"classes-title\">Class Schedule</span>\r\n          <div className=\"classes-list\" id=\"classes-list\">\r\n            <div className=\"classes-list-item\">\r\n              <div>LOADING DATA...</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"classes-dashboard\">\r\n        <div>\r\n          <span className=\"classes-title\">Class Schedule</span>\r\n          <button\r\n            className=\"classes-button\"\r\n            id=\"classes-add\"\r\n            onClick={toggleAddMenu}\r\n          >\r\n            Add Class\r\n          </button>\r\n        </div>\r\n        <div className=\"classes-list\" id=\"classes-list\">\r\n          <div className=\"classes-list-item\">\r\n            <div style={{ textAlign: \"center\" }}>\r\n              Welcome {state.email} (#{state.userID})\r\n            </div>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              Showing {state.classList.length} Selected Classes\r\n            </div>\r\n          </div>\r\n          {listDOM}\r\n        </div>\r\n        <div className=\"classes-menu\" id=\"classes-menu\">\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Class</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"classes-menu-name\"\r\n              value={state.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            >\r\n              {state.classSelectDOM}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Days</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"classes-menu-days\"\r\n              value={state.days}\r\n              name=\"days\"\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"Mon Wed Fri\">Mon Wed Fri</MenuItem>\r\n              <MenuItem value=\"Mon Wed\">Mon Wed</MenuItem>\r\n              <MenuItem value=\"Tues Thurs\">Tues Thurs</MenuItem>\r\n              <MenuItem value=\"Mon\">Mon</MenuItem>\r\n              <MenuItem value=\"Tues\">Tues</MenuItem>\r\n              <MenuItem value=\"Wed\">Wed</MenuItem>\r\n              <MenuItem value=\"Thurs\">Thurs</MenuItem>\r\n              <MenuItem value=\"Fri\">Fri</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Building</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"classes-menu-building\"\r\n              value={state.building}\r\n              name=\"building\"\r\n              onChange={handleChange}\r\n            >\r\n              {state.buildingSelectDOM}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Hour</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"classes-menu-hour\"\r\n              value={state.hour}\r\n              name=\"hour\"\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"1\">1</MenuItem>\r\n              <MenuItem value=\"2\">2</MenuItem>\r\n              <MenuItem value=\"3\">3</MenuItem>\r\n              <MenuItem value=\"4\">4</MenuItem>\r\n              <MenuItem value=\"5\">5</MenuItem>\r\n              <MenuItem value=\"6\">6</MenuItem>\r\n              <MenuItem value=\"7\">7</MenuItem>\r\n              <MenuItem value=\"8\">8</MenuItem>\r\n              <MenuItem value=\"9\">9</MenuItem>\r\n              <MenuItem value=\"10\">10</MenuItem>\r\n              <MenuItem value=\"11\">11</MenuItem>\r\n              <MenuItem value=\"12\">12</MenuItem>\r\n              <MenuItem value=\"13\">13</MenuItem>\r\n              <MenuItem value=\"14\">14</MenuItem>\r\n              <MenuItem value=\"15\">15</MenuItem>\r\n              <MenuItem value=\"16\">16</MenuItem>\r\n              <MenuItem value=\"17\">17</MenuItem>\r\n              <MenuItem value=\"18\">18</MenuItem>\r\n              <MenuItem value=\"19\">19</MenuItem>\r\n              <MenuItem value=\"20\">20</MenuItem>\r\n              <MenuItem value=\"21\">21</MenuItem>\r\n              <MenuItem value=\"22\">22</MenuItem>\r\n              <MenuItem value=\"23\">23</MenuItem>\r\n              <MenuItem value=\"24\">24</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Minute</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"classes-menu-minute\"\r\n              value={state.minute}\r\n              name=\"minute\"\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"00\">00</MenuItem>\r\n              <MenuItem value=\"05\">05</MenuItem>\r\n              <MenuItem value=\"10\">10</MenuItem>\r\n              <MenuItem value=\"15\">15</MenuItem>\r\n              <MenuItem value=\"20\">20</MenuItem>\r\n              <MenuItem value=\"25\">25</MenuItem>\r\n              <MenuItem value=\"30\">30</MenuItem>\r\n              <MenuItem value=\"35\">35</MenuItem>\r\n              <MenuItem value=\"40\">40</MenuItem>\r\n              <MenuItem value=\"45\">45</MenuItem>\r\n              <MenuItem value=\"50\">50</MenuItem>\r\n              <MenuItem value=\"55\">55</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <FormControl className={classes.margin}>\r\n            <InputLabel htmlFor=\"classes-menu-roomNum\">Room</InputLabel>\r\n            <BootstrapInput\r\n              id=\"classes-menu-roomNum\"\r\n              value={state.room}\r\n              name=\"room\"\r\n              onChange={handleChange}\r\n            />\r\n          </FormControl>\r\n          <div className=\"classes-add-error\" id=\"classes-add-error\">\r\n            Please make sure that all items have been selected.\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"classes-button\"\r\n          id=\"classes-create\"\r\n          onClick={() => setState(addClass(state))}\r\n        >\r\n          Add New Class\r\n        </button>\r\n        <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-save\" onClick={() => save(state, setState)}>\r\n          Save Classes\r\n        </Button>\r\n        <a href=\"#/\">\r\n          <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-return\">\r\n            Return to Map\r\n          </Button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction save(state, setState) {\r\n  let newList = state.classList;\r\n  async function update() {\r\n    for (let i=0; i < newList.length; i++) {\r\n      let ids = await fetch(\r\n      \"https://cs326-umap-amherst.herokuapp.com/buildings?name='\"+newList[i].building+\"'\",\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      }\r\n      ).then((res) => res.json());\r\n      newList[i].building = ids.results[0].id;\r\n    }\r\n    console.log(newList);\r\n    fetch(\r\n      \"https://cs326-umap-amherst.herokuapp.com/saveclasses\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({userID: state.userID, classList: newList}),\r\n      }\r\n      ).then(setState({...state, loaded: false}))\r\n      .catch(error => {\r\n        console.log(error);\r\n    });\r\n  }\r\n  update();\r\n}\r\n\r\n/**\r\n * Adds a class\r\n * @param state - current component state\r\n */\r\nfunction addClass(state) {\r\n  let validClass =\r\n    state.name !== \"\" &&\r\n    state.days !== \"\" &&\r\n    state.building !== \"\" &&\r\n    state.hour !== \"\" &&\r\n    state.minute !== \"\" &&\r\n    state.room !== \"room\";\r\n\r\n  if (!validClass) {\r\n    document.getElementById(\"classes-add-error\").style.display = \"block\";\r\n    return state;\r\n  } else {\r\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\r\n  }\r\n\r\n  let newClass = {\r\n    name: state.name,\r\n    days: state.days,\r\n    building: state.building,\r\n    time: state.hour + \":\" + state.minute + \":00\",\r\n    room: state.room,\r\n  };\r\n  let newList = state.classList;\r\n  newList.push(newClass);\r\n  toggleAddMenu();\r\n\r\n  return {\r\n    ...state,\r\n    classList: newList,\r\n  };\r\n}\r\n\r\n/**\r\n * Removes a class\r\n * @param state - current component state\r\n * @param i - index in classList array to reomve\r\n */\r\nfunction removeClass(state, i) {\r\n  let newList = state.classList;\r\n  newList.splice(i, 1);\r\n\r\n  return {\r\n    ...state,\r\n    classList: newList,\r\n  };\r\n}\r\n\r\n/**\r\n *  Toggles Adding New Class Menu\r\n */\r\nfunction toggleAddMenu() {\r\n  if (document.getElementById(\"classes-list\").style.display !== \"none\") {\r\n    document.getElementById(\"classes-list\").style.display = \"none\";\r\n    document.getElementById(\"classes-save\").style.display = \"none\";\r\n    document.getElementById(\"classes-return\").style.display = \"none\";\r\n    document.getElementById(\"classes-add\").innerHTML = \"Go Back\";\r\n    document.getElementById(\"classes-menu\").style.display = \"block\";\r\n    document.getElementById(\"classes-create\").style.display = \"block\";\r\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\r\n  } else {\r\n    document.getElementById(\"classes-list\").style.display = \"block\";\r\n    document.getElementById(\"classes-save\").style.display = \"flex\";\r\n    document.getElementById(\"classes-return\").style.display = \"flex\";\r\n    document.getElementById(\"classes-menu\").style.display = \"none\";\r\n    document.getElementById(\"classes-add\").innerHTML = \"Add Class\";\r\n    document.getElementById(\"classes-create\").style.display = \"none\";\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n","import React from \"react\";\r\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {DataGrid} from \"@material-ui/data-grid\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport KeyboardTimePicker from '@material-ui/lab/DateTimePicker';\r\nimport {CardContent, Typography} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport axios from 'axios'\r\n\r\nexport default class Stops extends React.Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            search:\"\",\r\n            columns:\r\n                [\r\n                {\r\n                    field: 'location',\r\n                    headerName: 'Location',\r\n                    description: 'This column has the location of pit stops',\r\n                    sortable: true,\r\n                    width: 300\r\n                },\r\n                {\r\n                    field: 'time',\r\n                    headerName: 'Time',\r\n                    description: 'This column has the time selector',\r\n                    sortable: false,\r\n                    width: 300,\r\n                    renderCell: (params) => (\r\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                            <KeyboardTimePicker\r\n                                renderInput={(params) => <TextField {...params} helperText={null}/>}\r\n                                inputFormat=\"EEEE - hh:mm a\"\r\n                                openTo={\"date\"}\r\n                                value={this.state.rows[params.row.id].time}\r\n                                disabled={!this.state.rows[params.row.id].selected}\r\n                                onChange={(newValue) => {\r\n                                    let rs = this.state.rows;\r\n                                    rs[params.row.id].time = newValue;\r\n                                    this.setState({rows: rs});\r\n\r\n                                }}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    )\r\n                }\r\n                ],\r\n            rows: [\r\n                { id: 0, location: 'Worcester Dining Commons', time: new Date(), selected: false},\r\n                { id: 1, location: 'Franklin Dining Commons', time: new Date(), selected: false},\r\n                { id: 2, location: 'Hampshire Dining Commons', time: new Date(), selected: false},\r\n                { id: 3, location: 'Berkshire Dining Commons', time: new Date(), selected: false},\r\n                { id: 4, location: 'Blue Wall', time: new Date(), selected: false},\r\n                { id: 5, location: 'Procrastination Station', time: new Date(), selected: false},\r\n                { id: 6, location: 'Roots Cafe', time: new Date(), selected: false},\r\n                { id: 7, location: 'Campus Center', time: new Date(), selected: false},\r\n                { id: 8, location: 'W.E.B. Du Bois Library', time: new Date(), selected: false}\r\n            ],\r\n            selected: []\r\n        };\r\n        this.searchFilter = this.searchFilter.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n        this.saveData = this.saveData.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n\r\n    getData = async () => {\r\n        // Once backend is hooked up\r\n        // Retrieve user selected data and fill this.state.rows\r\n        let userJSON = JSON.parse(localStorage.getItem(\"user\"));\r\n        let user = (await axios.get('https://cs326-umap-amherst.herokuapp.com/userid',{params:{email:userJSON[0].email, password:userJSON[0].password}})).data.results[0].id;\r\n\r\n        localStorage.setItem(\"userid\", user);\r\n        console.log(\"ID\", user);\r\n\r\n        let pitstops = await axios.get('https://cs326-umap-amherst.herokuapp.com/pitstops');\r\n        let selectedStops = await axios.get('https://cs326-umap-amherst.herokuapp.com/userpitstops',{params:{userID:user}});\r\n\r\n        let data = pitstops.data;\r\n        let selectedRows = selectedStops.data.results;\r\n\r\n        let selectedRowIds = selectedStops.data.results.map(a => {\r\n            return a[\"stopid\"];\r\n        });\r\n        let newRows = data.results.map(a => {\r\n            a[\"time\"] = new Date();\r\n            a[\"selected\"] = selectedRows.filter(b => {\r\n                return b[\"stopid\"] === a[\"id\"];\r\n            }).length !== 0;\r\n            if (a[\"selected\"] === true) {\r\n                a[\"time\"] = new Date(selectedRows.filter(b => {\r\n                    return b[\"stopid\"] === a[\"id\"];\r\n                })[0][\"stoptime\"]);\r\n            }\r\n            return a;\r\n        });\r\n        this.setState({rows: newRows, selected: selectedRowIds});\r\n\r\n    };\r\n\r\n\r\n    saveData() {\r\n        // Once the backend is hooked up\r\n        // Send this.state.selected to it for database storage\r\n\r\n        axios.post('https://cs326-umap-amherst.herokuapp.com/savepitstops', {\r\n            userID: localStorage.getItem(\"userid\"),\r\n            rows: this.state.rows.filter(a => {\r\n                return a[\"selected\"] === true\r\n            })\r\n        })\r\n        .then(function (response) {\r\n            console.log(response);\r\n        })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    handleChange (event) {\r\n        this.setState({search:event.target.value});\r\n    };\r\n\r\n    searchFilter(row) {\r\n        let stringSearch = this.state.search.trim() === \"\" || row.location.toLowerCase().includes(this.state.search.toLowerCase());\r\n        let options = { weekday: 'long', hour: 'numeric', minute: 'numeric' };\r\n        let timeSearch = row.selected && row.time.toLocaleDateString(\"en-US\", options).toLowerCase().includes(this.state.search.toLowerCase());\r\n        return stringSearch || timeSearch;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const classes = makeStyles((theme) => ({\r\n            margin: {\r\n                margin: theme.spacing(1),\r\n            },\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant={'h4'}>Schedule Pit Stops</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n\r\n                        <Card>\r\n                            <CardContent>\r\n                                <div className={classes.margin}>\r\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n\r\n                                        <Grid item>\r\n                                            <FormControl variant=\"filled\">\r\n                                                <InputLabel htmlFor=\"component-filled\">Search</InputLabel>\r\n                                                <FilledInput id=\"component-filled\" value={this.state.search} onChange={this.handleChange} />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                                <DataGrid autoHeight disableColumnFilter={true} density=\"headerHeight\" rows={this.state.rows.filter(this.searchFilter)} columns={this.state.columns.map((column) => ({\r\n                                    ...column,\r\n                                    disableClickEventBubbling: true,\r\n                                }))} pageSize={5}\r\n                                          checkboxSelection\r\n                                          selectionModel={this.state.selected}\r\n                                          onRowSelected={(params) => {\r\n                                              let rs = this.state.rows;\r\n                                              rs[params.data.id].selected = params.isSelected;\r\n                                              this.setState({rows: rs});\r\n                                          }}\r\n\r\n                                />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n                            <Grid item xs={12} style={{textAlign: \"right\"}}>\r\n                                <Link to=\"/\" style={{textDecoration:\"none\"}}>\r\n                                    <Button variant=\"contained\" endIcon={<MapIcon />}>\r\n                                        Return to Map\r\n                                    </Button>\r\n                                </Link>\r\n\r\n                                    <Button variant=\"contained\" endIcon={<SaveIcon />} onClick={this.saveData}>\r\n                                        Save Pit Stops\r\n                                    </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport default function Login() \r\n{\r\n    const [open, isOpen] = useState(false);\r\n\r\n    const openForm = () => \r\n    {\r\n      isOpen(true);\r\n    };\r\n\r\n    const closeForm = () =>\r\n    {\r\n      isOpen(false);\r\n    }\r\n\r\n    const [field, setField] = useState\r\n    ({\r\n        id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        major: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\",\r\n        users: []\r\n    });\r\n\r\n    const [loginEmail, setLoginEmail] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n\r\n    const loginUser = \r\n    [{\r\n      email: loginEmail,\r\n      password: loginPassword\r\n    }];\r\n\r\n    const login = () => \r\n    {\r\n      axios.post('https://cs326-umap-amherst.herokuapp.com/savelogin', \r\n      {\r\n        email: loginEmail,\r\n        password: loginPassword\r\n      })\r\n      .then(function (response) \r\n      {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) \r\n      {\r\n        console.log(error);\r\n      });\r\n\r\n      if (typeof window !== \"undefined\")\r\n      {\r\n        localStorage.setItem(\"user\", JSON.stringify(loginUser));\r\n        console.log(localStorage.getItem(\"user\"));\r\n      }\r\n    };\r\n\r\n    const [id, setId] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [major, setMajor] = useState(\"\");\r\n    const [emailAddress, setEmailAddress] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const signup = () =>\r\n    {\r\n      axios.post('https://cs326-umap-amherst.herokuapp.com/savesignup', \r\n      {\r\n        id: id,\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        major: major,\r\n        emailAddress: emailAddress,\r\n        password: password\r\n      })\r\n      .then(function (response) \r\n      {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) \r\n      {\r\n        console.log(error);\r\n      });\r\n\r\n      closeForm();\r\n    };\r\n\r\n    return (\r\n      <div className = \"page\">\r\n\r\n          <div className = \"title\">\r\n              UMap Amherst\r\n          </div>\r\n\r\n          <div className = \"loginTitle\">\r\n              Login\r\n          </div>\r\n\r\n          <div className = \"emailField\">\r\n            <Grid className = \"emailIcon\">\r\n              <PersonIcon/>\r\n            </Grid>\r\n            <TextField label = \"Email Address\" variant = \"outlined\" error = {loginEmail === \"\"} onChange = {event => setLoginEmail(event.target.value)}/>\r\n          </div>\r\n\r\n          <div className = \"passwordField\">\r\n            <Grid className = \"passwordIcon\">\r\n              <LockIcon/>\r\n            </Grid>\r\n            <TextField label = \"Password\" type = \"Password\" variant = \"outlined\" error = {loginPassword === \"\"} onChange = {event => setLoginPassword(event.target.value)}/>\r\n          </div>\r\n\r\n          <div className = \"loginButton\">\r\n            <Link to = \"/\" className = \"loginLink\">\r\n              <Button variant = \"contained\" onClick = {login} disabled = {loginEmail === \"\" || loginPassword === \"\"}>\r\n                Login\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className = \"createAccount\">\r\n            <Button onClick = {openForm}>\r\n              Create Account \r\n            </Button>\r\n            <Dialog open = {open} className = \"form\">  \r\n              <DialogTitle className = \"formTitle\"> Create Account </DialogTitle>\r\n                <Grid className = \"contactIcon\">\r\n                  <AccountBoxIcon style = {{fontSize: 45}}/>\r\n                </Grid>\r\n              <DialogContent>\r\n                <DialogContentText className = \"formHeader\">\r\n                  Please fill in each of the fields below.\r\n                </DialogContentText>\r\n                  <TextField label = \"ID\" variant = \"outlined\" margin = \"dense\" error = {id === \"\"} onChange = {event => setId(event.target.value)} fullWidth/>\r\n                  <TextField label = \"First Name\" variant = \"outlined\" margin = \"dense\" error = {firstName === \"\"}  onChange = {event => setFirstName(event.target.value)} fullWidth/>\r\n                  <TextField label = \"Last Name\" variant = \"outlined\" margin = \"dense\" error = {lastName === \"\"} onChange = {event => setLastName(event.target.value)} fullWidth/>\r\n                  <TextField label = \"Major\" variant = \"outlined\" margin = \"dense\" error = {major === \"\"} onChange = {event => setMajor(event.target.value)} fullWidth/>\r\n                  <TextField label = \"Email Address\" variant = \"outlined\" margin = \"dense\" error = {emailAddress === \"\"} onChange = {event => setEmailAddress(event.target.value)} fullWidth/>\r\n                  <TextField label = \"Password\" type = \"Password\" variant = \"outlined\" margin = \"dense\" error = {password === \"\"} onChange = {event => setPassword(event.target.value)} fullWidth/>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick = {closeForm}>\r\n                  Close\r\n                </Button>\r\n                <Button onClick = {signup} disabled = {id === \"\" || firstName === \"\" || lastName === \"\" || major === \"\" || emailAddress === \"\" || password === \"\"}>\r\n                  Sign Up\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          <div className = \"guest\">\r\n            <Link to = \"/\" className = \"guestLink\">\r\n              <Button>\r\n                Use as Guest\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n\r\n      </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Classes from \"./pages/Classes\";\r\nimport Stops from \"./pages/Stops\";\r\nimport Login from \"./pages/Login\";\r\nimport {\r\n  AppBar,\r\n  Grid,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Map as MapIcon } from \"@material-ui/icons\";\r\n\r\nfunction classesPageComponent() {\r\n  return (\r\n    <Grid item xs={8} className={\"innerPage\"}>\r\n      <Classes />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction homePageComponent() {\r\n  return (\r\n    <Grid item xs={10} className={\"innerPage\"}>\r\n      <Home />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction stopsPageComponent() {\r\n  return (\r\n    <Grid item xs={8} className={\"innerPage\"}>\r\n      <Stops />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction loginPageComponent() {\r\n  return (\r\n    <Grid item xs={4} className={\"innerPage\"}>\r\n      <Login />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <HashRouter basename={\"/\"}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar variant=\"dense\">\r\n          <Link to=\"/\" edge=\"start\">\r\n            <IconButton>\r\n              <MapIcon />\r\n            </IconButton>\r\n          </Link>\r\n          <Typography variant=\"h6\">UMap Amherst</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        className={\"pageContainer\"}\r\n      >\r\n        <Switch>\r\n          <Route path=\"/\" exact component={homePageComponent} />\r\n          <Route path=\"/classes\" component={classesPageComponent} />\r\n          <Route path=\"/stops\" component={stopsPageComponent} />\r\n          <Route path=\"/login\" component={loginPageComponent} />\r\n        </Switch>\r\n      </Grid>\r\n    </HashRouter>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./main.css\";\r\nimport \"./classes.css\";\r\nimport \"./login.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}