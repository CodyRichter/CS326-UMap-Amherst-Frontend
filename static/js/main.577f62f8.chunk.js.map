{"version":3,"sources":["components/MapComponent.js","pages/Home.js","pages/Classes.js","pages/Stops.js","pages/Login.js","App.js","index.js"],"names":["MapComponent","mapStyle","require","defaultCenter","lat","lng","defaultZoom","yesIWantToUseGoogleMapApiInternals","bootstrapURLKeys","key","options","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","scrollwheel","styles","draggableCursor","draggingCursor","Home","useState","name","startTime","endTime","location","upcomingClasses","pitstops","Grid","container","spacing","item","xs","Card","CardContent","Typography","variant","direction","justify","alignItems","Person","fontSize","to","component","IconButton","size","Edit","map","classInfo","idx","stop","className","Classes","Stops","Login","App","basename","AppBar","position","Toolbar","edge","color","aria-label","Map","Button","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.577f62f8.chunk.js","sourcesContent":["import GoogleMapReact from 'google-map-react';\nimport React from 'react';\n\n\nexport default function MapComponent() {\n    const mapStyle = require('../mapstyle.json');\n    return (\n        // Important! Always set the container height explicitly\n            <GoogleMapReact\n                defaultCenter={{lat: 42.389564, lng: -72.526512}}\n                defaultZoom={16}\n                yesIWantToUseGoogleMapApiInternals\n                bootstrapURLKeys={{key: \"AIzaSyAz2oL1-IeVDxCY7lWV2ivTZ3LIpEkrWEE\"}}\n                options={{\n                    disableDefaultUI: true, // disable default map UI\n                    draggable: true, // make map draggable\n                    keyboardShortcuts: false, // disable keyboard shortcuts\n                    scaleControl: true, // allow scale controle\n                    scrollwheel: true, // allow scroll wheel\n                    styles: mapStyle, // change default map styles\n                    draggableCursor: 'grab',\n                    draggingCursor: 'grabbing',\n                }}\n            >\n            </GoogleMapReact>\n    );\n}","import React, {useState} from \"react\";\nimport {CardContent, Grid, Toolbar, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Edit, Map as MapIcon, Person} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MapComponent from \"../components/MapComponent\";\nimport {Link} from \"react-router-dom\";\n\n\nexport default function Home() {\n\n    let [upcomingClasses, setUpcomingClasses] = useState([\n        {\n            name: 'Compsci 121',\n            startTime: '11:15 AM',\n            endTime: '12:05 PM',\n            location: 'ILC 151'\n        },\n        {\n            name: 'History 115',\n            startTime: '12:20 PM',\n            endTime: '1:10 PM',\n            location: 'Herter 212'\n        }\n    ]);\n\n    let [pitstops, setPitstops] = useState([\n        {\n            name: 'Lunch at Blue Wall',\n            startTime: '1:30 PM',\n            endTime: '2:30 PM',\n            location: 'ILC 151'\n        },\n        {\n            name: 'Study at Library',\n            startTime: '4:00 PM',\n            endTime: '6:00 PM',\n            location: 'W.E.B. Du Bois Library'\n        }\n    ]);\n\n\n    return (\n        <Grid container spacing={3}>\n\n            {/*Sidebar*/}\n            <Grid item xs={4}>\n                <Grid container spacing={2}>\n\n                    {/*Student Information*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Student Information</Typography>\n\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n                                    <Grid item xs={2}>\n                                        <Person fontSize={'large'} />\n                                    </Grid>\n                                    <Grid item xs={10}>\n                                        <Typography variant={'body1'}>John Doe</Typography>\n                                        <Typography variant={'subtitle1'}>Computer Science</Typography>\n                                    </Grid>\n                                </Grid>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Upcoming Classes*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid justify=\"space-between\" container>\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Upcoming Classes</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/classes\" component={IconButton} size=\"small\" variant=\"outlined\">\n                                            <Edit />\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {upcomingClasses.map((classInfo, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{classInfo.name} {classInfo.startTime}</Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Pit stops*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid justify=\"space-between\" container>\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Scheduled Pit Stops</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/stops\" component={IconButton} size=\"small\" variant=\"outlined\">\n                                            <Edit />\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {pitstops.map((stop, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{stop.name} {stop.startTime}</Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Class Info*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Time Until Next Class</Typography>\n                                <Typography variant={'body1'}>10 Minutes</Typography>\n\n                                <br />\n\n                                <Typography variant={'h6'}>Travel Time to Next Class</Typography>\n                                <Typography variant={'body1'}>6 Minutes</Typography>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n\n\n            {/*Map*/}\n            <Grid item xs={8} className={'mapContainer'}>\n                <MapComponent />\n            </Grid>\n\n        </Grid>\n    );\n}\n","import React from \"react\";\n\n\nexport default function Classes() {\n    return (\n      <div>\n          Classes page\n      </div>\n    );\n}\n","import React from \"react\";\n\n\nexport default function Stops() {\n    return (\n      <div>\n          Pitstops page\n      </div>\n    );\n}\n","import React from \"react\";\n\n\nexport default function Login() {\n    return (\n      <div>\n          Login page\n      </div>\n    );\n}\n","import React from \"react\";\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Classes from \"./pages/Classes\";\nimport Stops from \"./pages/Stops\";\nimport Login from \"./pages/Login\";\nimport {AppBar, Button, Grid, IconButton, Toolbar, Typography} from \"@material-ui/core\";\nimport {Map as MapIcon, } from \"@material-ui/icons\";\n\n\nexport default function App() {\n  return (\n\n      <HashRouter basename={'/'}>\n\n        <AppBar position=\"sticky\">\n          <Toolbar variant=\"dense\">\n            <Link to=\"/\" component={IconButton} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <MapIcon />\n            </Link>\n            <Typography variant=\"h6\">\n              UMap Amherst\n            </Typography>\n              <Link to=\"/\" component={Button} color={'inherit'}>Home</Link>\n              <Link to=\"/classes\" component={Button} color={'inherit'}>Classes</Link>\n              <Link to=\"/stops\" component={Button} color={'inherit'}>Pitstops</Link>\n              <Link to=\"/login\" component={Button} color={'inherit'}>Login</Link>\n          </Toolbar>\n        </AppBar>\n\n        <Switch>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={'pageContainer'}>\n            <Route path=\"/\" exact>\n              <Grid item xs={10} className={'innerPage'}>\n                <Home />\n              </Grid>\n            </Route>\n            <Route path=\"/classes\">\n              <Grid item xs={8} className={'innerPage'}>\n                <Classes />\n              </Grid>\n            </Route>\n            <Route path=\"/stops\" exact>\n              <Grid item xs={8} className={'innerPage'}>\n                <Stops />\n              </Grid>\n            </Route>\n            <Route path=\"/login\">\n              <Grid item xs={8} className={'innerPage'}>\n                <Login />\n              </Grid>\n            </Route>\n\n          </Grid>\n\n        </Switch>\n\n      </HashRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}