{"version":3,"sources":["components/MapComponent.js","pages/Home.js","pages/Classes.js","pages/Stops.js","pages/Login.js","App.js","index.js"],"names":["MapComponent","props","mapStyle","require","useState","map","setMap","maps","setMaps","useEffect","route","directions","api_result","routes","legs","steps","forEach","leg","idx","push","lat","start_location","lng","end_location","mapResultToCoords","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","handleLoadGoogleMapsAPI","defaultCenter","defaultZoom","onGoogleApiLoaded","yesIWantToUseGoogleMapApiInternals","bootstrapURLKeys","key","options","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","styles","draggableCursor","draggingCursor","Home","classname","time","buildingname","room","upcomingClasses","setUpcomingClasses","location","pitstops","setPitstops","timeUntilNextClass","setTimeUntilNextClass","setRoute","axios","request","method","url","then","res","data","catch","err","console","log","Grid","container","spacing","item","xs","Card","CardContent","Typography","variant","direction","justify","alignItems","Person","fontSize","justifyContent","to","IconButton","size","Edit","length","classInfo","stop","className","Classes","classes","useStyles","a","fetch","headers","json","availableClasses","availableBuildings","state","userID","currentClasses","classIDs","results","obj","class","classData","i","newClassData","buildingNames","building","newData","name","newClassList","days","monday","tuesday","wednesday","thursday","friday","newClass","setState","loaded","classList","fetchData","hour","minute","classSelectDOM","buildingSelectDOM","keyVal","handleChange","event","target","value","selectClass","MenuItem","selectBuilding","listDOM","classDOM","style","float","onClick","newList","splice","removeClass","id","toggleAddMenu","textAlign","FormControl","formControl","InputLabel","Select","labelId","onChange","margin","htmlFor","BootstrapInput","document","getElementById","display","addClass","Button","endIcon","href","innerHTML","makeStyles","theme","minWidth","selectEmpty","marginTop","withStyles","root","input","borderRadius","position","backgroundColor","palette","background","paper","border","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","Stops","getData","get","params","selectedStops","selectedRows","selectedRowIds","newRows","Date","filter","b","rows","selected","search","columns","field","headerName","description","sortable","width","renderCell","LocalizationProvider","dateAdapter","AdapterDateFns","renderInput","TextField","helperText","inputFormat","openTo","row","disabled","newValue","rs","searchFilter","bind","saveData","this","post","response","error","stringSearch","trim","toLowerCase","includes","timeSearch","toLocaleDateString","weekday","FilledInput","autoHeight","disableColumnFilter","density","column","disableClickEventBubbling","pageSize","checkboxSelection","selectionModel","onRowSelected","isSelected","textDecoration","React","Component","Login","open","isOpen","firstName","lastName","major","emailAddress","password","users","isEmpty","fieldValue","loginUsername","setLoginUsername","loginPassword","setLoginPassword","setFirstName","setLastName","setMajor","setEmailAddress","setPassword","label","username","Dialog","DialogTitle","DialogContent","DialogContentText","Object","values","fullWidth","DialogActions","classesPageComponent","homePageComponent","stopsPageComponent","loginPageComponent","App","basename","AppBar","Toolbar","edge","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.532d73b3.chunk.js","sourcesContent":["import GoogleMapReact from 'google-map-react';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\n\r\nexport default function MapComponent(props) {\r\n    const mapStyle = require('../mapstyle.json');\r\n\r\n    let [map, setMap] = useState(null);\r\n    let [maps, setMaps] = useState(null);\r\n\r\n    useEffect( () => {\r\n        handleLoadGoogleMapsAPI(map, maps);\r\n    }, [props.route]);\r\n\r\n    function mapResultToCoords(api_result) {\r\n        let directions = [];\r\n        api_result.routes[0].legs[0].steps.forEach((leg, idx) => {\r\n            directions.push({lat: leg.start_location.lat, lng: leg.start_location.lng})\r\n            directions.push({lat: leg.end_location.lat, lng: leg.end_location.lng})\r\n        });\r\n        return directions;\r\n    }\r\n\r\n    function handleLoadGoogleMapsAPI() {\r\n        if (map && maps && props.route) {\r\n\r\n            if (!props.route) {\r\n                return;\r\n            }\r\n\r\n            let directions = mapResultToCoords(props.route);\r\n\r\n            const directionPath = new maps.Polyline({\r\n                path: directions,\r\n                geodesic: true,\r\n                strokeColor: \"#389C29\",\r\n                strokeOpacity: 1.0,\r\n                strokeWeight: 3,\r\n            });\r\n            directionPath.setMap(map);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        // Important! Always set the container height explicitly\r\n        <GoogleMapReact\r\n            defaultCenter={{lat: 42.389564, lng: -72.526512}}\r\n            defaultZoom={16}\r\n            onGoogleApiLoaded={({map, maps}) => {setMap(map); setMaps(maps);}}\r\n            yesIWantToUseGoogleMapApiInternals\r\n            bootstrapURLKeys={{key: \"AIzaSyAz2oL1-IeVDxCY7lWV2ivTZ3LIpEkrWEE\"}}\r\n            options={{\r\n                disableDefaultUI: true, // disable default map UI\r\n                draggable: true, // make map draggable\r\n                keyboardShortcuts: false, // disable keyboard shortcuts\r\n                scaleControl: true, // allow scale control\r\n                styles: mapStyle, // change default map styles\r\n                draggableCursor: 'grab',\r\n                draggingCursor: 'grabbing',\r\n            }}\r\n        >\r\n        </GoogleMapReact>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {Edit, Person} from \"@material-ui/icons\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MapComponent from \"../components/MapComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Home() {\r\n\r\n    let [upcomingClasses, setUpcomingClasses] = useState([\r\n        {\r\n            classname: 'Compsci 121',\r\n            time: '11:15 AM',\r\n            buildingname: 'ILC',\r\n            room: 'N151',\r\n        }\r\n    ]);\r\n\r\n    let [pitstops, setPitstops] = useState([\r\n        {\r\n            time: '12:05PM',\r\n            location: 'Blue Wall'\r\n        }\r\n    ]);\r\n\r\n    let [timeUntilNextClass, setTimeUntilNextClass] = useState('No more classes today.');\r\n\r\n    let [route, setRoute] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.request({\r\n            method: 'get',\r\n            url: 'https://cs326-umap-amherst.herokuapp.com/home?userID=0'\r\n        }).then((res) => {\r\n            setUpcomingClasses(res.data['classes']);\r\n            setPitstops(res.data['stops']);\r\n            setTimeUntilNextClass(res.data['timeUntilNextClass']);\r\n            setRoute(res.data['route']);\r\n        }).catch((err) => {\r\n            console.log('Unable to connect to backend to load data.')\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n\r\n            {/*Sidebar*/}\r\n            <Grid item xs={4}>\r\n                <Grid container spacing={2}>\r\n\r\n                    {/*Student Information*/}\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={'h6'}>Student Information</Typography>\r\n\r\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                                    <Grid item xs={2}>\r\n                                        <Person fontSize={'large'} />\r\n                                    </Grid>\r\n                                    <Grid item xs={10}>\r\n                                        <Typography variant={'body1'}>John Doe</Typography>\r\n                                        <Typography variant={'subtitle1'}>Computer Science</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    {/*Upcoming Classes*/}\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n\r\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography variant={'h6'}>Upcoming Classes</Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Link to=\"/classes\">\r\n                                            <IconButton size=\"small\" variant=\"outlined\">\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {upcomingClasses.length === 0 &&\r\n                                    <Typography variant={'body1'}>No more classes today.</Typography>\r\n                                }\r\n                                {upcomingClasses.map((classInfo, idx) =>\r\n                                    <Typography key={idx} variant={'body1'}>{classInfo.classname}: {classInfo.buildingname} {classInfo.room}  <b>{classInfo.time}</b></Typography>\r\n                                )}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    {/*Pit stops*/}\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n\r\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography variant={'h6'}>Scheduled Pit Stops</Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Link to=\"/stops\">\r\n                                            <IconButton size=\"small\" variant=\"outlined\">\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {pitstops.length === 0 &&\r\n                                <Typography variant={'body1'}>No more pitstops today.</Typography>\r\n                                }\r\n                                {pitstops.map((stop, idx) =>\r\n                                    <Typography key={idx} variant={'body1'}>{stop.location}  <b>{stop.time}</b></Typography>\r\n                                )}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    {/*Class Info*/}\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={'h6'}>Time Until Next Class</Typography>\r\n                                <Typography variant={'body1'}>{timeUntilNextClass}</Typography>\r\n\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            {/*Map*/}\r\n            <Grid item xs={8} className={'mapContainer'}>\r\n                <MapComponent route={route} />\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MapIcon from \"@material-ui/icons/Map\";\r\n\r\nexport default function Classes() {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // Loads available classes to select from SQL\r\n      let availableClasses = await fetch(\r\n        \"https://cs326-umap-amherst.herokuapp.com/classOptions\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      ).then((res) => res.json());\r\n      // Loads available buildings to select from SQL\r\n      let availableBuildings = await fetch(\r\n        \"https://cs326-umap-amherst.herokuapp.com/buildings\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      ).then((res) => res.json());\r\n      // Loads current classes from database\r\n      let currentClasses = await fetch(\r\n        \"https://cs326-umap-amherst.herokuapp.com/userclasses?userID=\" +\r\n          state.userID,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      ).then((res) => res.json());\r\n\r\n      let classIDs = [];\r\n      currentClasses.results.map((obj) => classIDs.push(obj.class));\r\n\r\n      let classData = [];\r\n      for (let i = 0; i < classIDs.length; i++) {\r\n        let newClassData = await fetch(\r\n          \"https://cs326-umap-amherst.herokuapp.com/classes?id=\" + classIDs[i],\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n            },\r\n          }\r\n        ).then((res) => res.json());\r\n\r\n        classData.push(newClassData.results[0]);\r\n      }\r\n\r\n      let buildingNames = [];\r\n      for (let i = 0; i < classData.length; i++) {\r\n        let newData = await fetch(\r\n          \"https://cs326-umap-amherst.herokuapp.com/buildings?id=\" +\r\n            classData[i].building,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n            },\r\n          }\r\n        ).then((res) => res.json());\r\n        buildingNames.push(newData.results[0].name);\r\n      }\r\n\r\n      let newClassList = [];\r\n      for (let i = 0; i < classData.length; i++) {\r\n        let days = \"\";\r\n        if (classData[i].monday === true) days += \"Mon \";\r\n        if (classData[i].tuesday === true) days += \"Tues \";\r\n        if (classData[i].wednesday === true) days += \"Wed \";\r\n        if (classData[i].thursday === true) days += \"Thurs \";\r\n        if (classData[i].friday === true) days += \"Fri \";\r\n        let newClass = {\r\n          name: classData[i].name,\r\n          room: classData[i].room,\r\n          time: classData[i].time,\r\n          building: buildingNames[i],\r\n          days: days,\r\n        };\r\n        newClassList.push(newClass);\r\n      }\r\n\r\n      setState({\r\n        ...state,\r\n        loaded: true,\r\n        availableClasses: availableClasses.results,\r\n        availableBuildings: availableBuildings.results,\r\n        currentClasses: currentClasses.results,\r\n        classList: newClassList,\r\n      });\r\n    }\r\n    if (state.loaded === false) {\r\n      fetchData();\r\n    }\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    days: \"\",\r\n    building: \"\",\r\n    hour: \"\",\r\n    minute: \"\",\r\n    time: \"\",\r\n    room: \"001\",\r\n    classList: [],\r\n    classSelectDOM: [],\r\n    buildingSelectDOM: [],\r\n    availableClasses: [],\r\n    availableBuildings: [],\r\n    currentClasses: [],\r\n    keyVal: 0,\r\n    loaded: false,\r\n    userID: 0,\r\n  });\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // Loading all selectable class that are available to add\r\n  state.classSelectDOM = [];\r\n  for (let i = 0; i < state.availableClasses.length; i++) {\r\n    let selectClass = (\r\n      <MenuItem value={state.availableClasses[i].name} key={state.keyVal++}>\r\n        {state.availableClasses[i].name}\r\n      </MenuItem>\r\n    );\r\n    state.classSelectDOM.push(selectClass);\r\n  }\r\n  // Loading all selectable buildings that are available to add\r\n  state.buildingSelectDOM = [];\r\n  for (let i = 0; i < state.availableBuildings.length; i++) {\r\n    let selectBuilding = (\r\n      <MenuItem value={state.availableBuildings[i].name} key={state.keyVal++}>\r\n        {state.availableBuildings[i].name}\r\n      </MenuItem>\r\n    );\r\n    state.buildingSelectDOM.push(selectBuilding);\r\n  }\r\n\r\n  let listDOM = []; // stores class list dom\r\n  // Loading all of the classes\r\n  for (let i = 0; i < state.classList.length; i++) {\r\n    let classDOM = (\r\n      <div className=\"classes-list-item\" key={state.keyVal++}>\r\n        <div>\r\n          {state.classList[i].name}{\" \"}\r\n          <span style={{ float: \"right\" }}>{state.classList[i].days}</span>\r\n        </div>\r\n        <div>\r\n          {state.classList[i].building}{\" \"}\r\n          <span style={{ float: \"right\" }}>{state.classList[i].time}</span>\r\n        </div>\r\n        <div>Room {state.classList[i].room}</div>\r\n        <button\r\n          className=\"classes-button\"\r\n          onClick={() => setState(removeClass(state, i))}\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    );\r\n    listDOM.push(classDOM);\r\n  }\r\n\r\n  // No classes loaded check\r\n  if (listDOM.length === 0) {\r\n    listDOM = (\r\n      <div className=\"classes-list-item\">\r\n        <div>No classes scheduled :(</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (state.loaded === false) {\r\n    return (\r\n      <div>\r\n        <div className=\"classes-dashboard\">\r\n          <span className=\"classes-title\">Class Schedule</span>\r\n          <div className=\"classes-list\" id=\"classes-list\">\r\n            <div className=\"classes-list-item\">\r\n              <div>LOADING DATA...</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"classes-dashboard\">\r\n        <div>\r\n          <span className=\"classes-title\">Class Schedule</span>\r\n          <button\r\n            className=\"classes-button\"\r\n            id=\"classes-add\"\r\n            onClick={toggleAddMenu}\r\n          >\r\n            Add Class\r\n          </button>\r\n        </div>\r\n        <div className=\"classes-list\" id=\"classes-list\">\r\n          <div className=\"classes-list-item\">\r\n            <div style={{ textAlign: \"center\" }}>\r\n              User ID: {state.userID} &nbsp;&nbsp;&nbsp; Showing{\" \"}\r\n              {state.classList.length} Classes\r\n            </div>\r\n          </div>\r\n          {listDOM}\r\n        </div>\r\n        <div className=\"classes-menu\" id=\"classes-menu\">\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Class</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"classes-menu-name\"\r\n              value={state.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            >\r\n              {state.classSelectDOM}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Days</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"classes-menu-days\"\r\n              value={state.days}\r\n              name=\"days\"\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"Mon Wed Fri\">Mon Wed Fri</MenuItem>\r\n              <MenuItem value=\"Mon Wed\">Mon Wed</MenuItem>\r\n              <MenuItem value=\"Tues Thurs\">Tues Thurs</MenuItem>\r\n              <MenuItem value=\"Mon\">Mon</MenuItem>\r\n              <MenuItem value=\"Tues\">Tues</MenuItem>\r\n              <MenuItem value=\"Wed\">Wed</MenuItem>\r\n              <MenuItem value=\"Thurs\">Thurs</MenuItem>\r\n              <MenuItem value=\"Fri\">Fri</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Building</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"classes-menu-building\"\r\n              value={state.building}\r\n              name=\"building\"\r\n              onChange={handleChange}\r\n            >\r\n              {state.buildingSelectDOM}\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Hour</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"classes-menu-hour\"\r\n              value={state.hour}\r\n              name=\"hour\"\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"1\">1</MenuItem>\r\n              <MenuItem value=\"2\">2</MenuItem>\r\n              <MenuItem value=\"3\">3</MenuItem>\r\n              <MenuItem value=\"4\">4</MenuItem>\r\n              <MenuItem value=\"5\">5</MenuItem>\r\n              <MenuItem value=\"6\">6</MenuItem>\r\n              <MenuItem value=\"7\">7</MenuItem>\r\n              <MenuItem value=\"8\">8</MenuItem>\r\n              <MenuItem value=\"9\">9</MenuItem>\r\n              <MenuItem value=\"10\">10</MenuItem>\r\n              <MenuItem value=\"11\">11</MenuItem>\r\n              <MenuItem value=\"12\">12</MenuItem>\r\n              <MenuItem value=\"13\">13</MenuItem>\r\n              <MenuItem value=\"14\">14</MenuItem>\r\n              <MenuItem value=\"15\">15</MenuItem>\r\n              <MenuItem value=\"16\">16</MenuItem>\r\n              <MenuItem value=\"17\">17</MenuItem>\r\n              <MenuItem value=\"18\">18</MenuItem>\r\n              <MenuItem value=\"19\">19</MenuItem>\r\n              <MenuItem value=\"20\">20</MenuItem>\r\n              <MenuItem value=\"21\">21</MenuItem>\r\n              <MenuItem value=\"22\">22</MenuItem>\r\n              <MenuItem value=\"23\">23</MenuItem>\r\n              <MenuItem value=\"24\">24</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Minute</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"classes-menu-minute\"\r\n              value={state.minute}\r\n              name=\"minute\"\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"00\">00</MenuItem>\r\n              <MenuItem value=\"05\">05</MenuItem>\r\n              <MenuItem value=\"10\">10</MenuItem>\r\n              <MenuItem value=\"15\">15</MenuItem>\r\n              <MenuItem value=\"20\">20</MenuItem>\r\n              <MenuItem value=\"25\">25</MenuItem>\r\n              <MenuItem value=\"30\">30</MenuItem>\r\n              <MenuItem value=\"35\">35</MenuItem>\r\n              <MenuItem value=\"40\">40</MenuItem>\r\n              <MenuItem value=\"45\">45</MenuItem>\r\n              <MenuItem value=\"50\">50</MenuItem>\r\n              <MenuItem value=\"55\">55</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <FormControl className={classes.margin}>\r\n            <InputLabel htmlFor=\"classes-menu-roomNum\">Room</InputLabel>\r\n            <BootstrapInput\r\n              id=\"classes-menu-roomNum\"\r\n              value={state.room}\r\n              name=\"room\"\r\n              onChange={handleChange}\r\n            />\r\n          </FormControl>\r\n          <div className=\"classes-add-error\" id=\"classes-add-error\">\r\n            Please make sure that all items have been selected.\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"classes-button\"\r\n          id=\"classes-create\"\r\n          onClick={() => setState(addClass(state))}\r\n        >\r\n          Add New Class\r\n        </button>\r\n        <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-save\">\r\n          Save Classes\r\n        </Button>\r\n        <a href=\"#/\">\r\n          <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-return\">\r\n            Return to Map\r\n          </Button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * Adds a class\r\n * @param state - current component state\r\n */\r\nfunction addClass(state) {\r\n  let validClass =\r\n    state.name !== \"\" &&\r\n    state.days !== \"\" &&\r\n    state.building !== \"\" &&\r\n    state.hour !== \"\" &&\r\n    state.minute !== \"\" &&\r\n    state.room !== \"room\";\r\n\r\n  if (!validClass) {\r\n    document.getElementById(\"classes-add-error\").style.display = \"block\";\r\n    return state;\r\n  } else {\r\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\r\n  }\r\n\r\n  let newClass = {\r\n    name: state.name,\r\n    days: state.days,\r\n    building: state.building,\r\n    time: state.hour + \":\" + state.minute + \":00\",\r\n    room: state.room,\r\n  };\r\n  let newList = state.classList;\r\n  newList.push(newClass);\r\n  toggleAddMenu();\r\n\r\n  return {\r\n    ...state,\r\n    classList: newList,\r\n  };\r\n}\r\n\r\n/**\r\n * Removes a class\r\n * @param state - current component state\r\n * @param i - index in classList array to reomve\r\n */\r\nfunction removeClass(state, i) {\r\n  let newList = state.classList;\r\n  newList.splice(i, 1);\r\n\r\n  return {\r\n    ...state,\r\n    classList: newList,\r\n  };\r\n}\r\n\r\n/**\r\n *  Toggles Adding New Class Menu\r\n */\r\nfunction toggleAddMenu() {\r\n  if (document.getElementById(\"classes-list\").style.display !== \"none\") {\r\n    document.getElementById(\"classes-list\").style.display = \"none\";\r\n    document.getElementById(\"classes-save\").style.display = \"none\";\r\n    document.getElementById(\"classes-return\").style.display = \"none\";\r\n    document.getElementById(\"classes-add\").innerHTML = \"Go Back\";\r\n    document.getElementById(\"classes-menu\").style.display = \"block\";\r\n    document.getElementById(\"classes-create\").style.display = \"block\";\r\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\r\n  } else {\r\n    document.getElementById(\"classes-list\").style.display = \"block\";\r\n    document.getElementById(\"classes-save\").style.display = \"flex\";\r\n    document.getElementById(\"classes-return\").style.display = \"flex\";\r\n    document.getElementById(\"classes-menu\").style.display = \"none\";\r\n    document.getElementById(\"classes-add\").innerHTML = \"Add Class\";\r\n    document.getElementById(\"classes-create\").style.display = \"none\";\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n","import React from \"react\";\r\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {DataGrid} from \"@material-ui/data-grid\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport KeyboardTimePicker from '@material-ui/lab/DateTimePicker';\r\nimport {CardContent, Typography} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport axios from 'axios'\r\n\r\nexport default class Stops extends React.Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            search:\"\",\r\n            columns:\r\n                [\r\n                {\r\n                    field: 'location',\r\n                    headerName: 'Location',\r\n                    description: 'This column has the location of pit stops',\r\n                    sortable: true,\r\n                    width: 300\r\n                },\r\n                {\r\n                    field: 'time',\r\n                    headerName: 'Time',\r\n                    description: 'This column has the time selector',\r\n                    sortable: false,\r\n                    width: 300,\r\n                    renderCell: (params) => (\r\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                            <KeyboardTimePicker\r\n                                renderInput={(params) => <TextField {...params} helperText={null}/>}\r\n                                inputFormat=\"EEEE - hh:mm a\"\r\n                                openTo={\"date\"}\r\n                                value={this.state.rows[params.row.id].time}\r\n                                disabled={!this.state.rows[params.row.id].selected}\r\n                                onChange={(newValue) => {\r\n                                    let rs = this.state.rows;\r\n                                    rs[params.row.id].time = newValue;\r\n                                    this.setState({rows: rs});\r\n\r\n                                }}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    )\r\n                }\r\n                ],\r\n            rows: [\r\n                { id: 0, location: 'Worcester Dining Commons', time: new Date(), selected: false},\r\n                { id: 1, location: 'Franklin Dining Commons', time: new Date(), selected: false},\r\n                { id: 2, location: 'Hampshire Dining Commons', time: new Date(), selected: false},\r\n                { id: 3, location: 'Berkshire Dining Commons', time: new Date(), selected: false},\r\n                { id: 4, location: 'Blue Wall', time: new Date(), selected: false},\r\n                { id: 5, location: 'Procrastination Station', time: new Date(), selected: false},\r\n                { id: 6, location: 'Roots Cafe', time: new Date(), selected: false},\r\n                { id: 7, location: 'Campus Center', time: new Date(), selected: false},\r\n                { id: 8, location: 'W.E.B. Du Bois Library', time: new Date(), selected: false}\r\n            ],\r\n            selected: []\r\n        };\r\n        this.searchFilter = this.searchFilter.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n        this.saveData = this.saveData.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n\r\n    getData = async () => {\r\n        // Once backend is hooked up\r\n        // Retrieve user selected data and fill this.state.rows\r\n\r\n        let pitstops = await axios.get('https://cs326-umap-amherst.herokuapp.com/pitstops');\r\n        let selectedStops = await axios.get('https://cs326-umap-amherst.herokuapp.com/userpitstops',{params:{userID:0}});\r\n\r\n        let data = pitstops.data;\r\n        let selectedRows = selectedStops.data.results;\r\n\r\n        let selectedRowIds = selectedStops.data.results.map(a => {\r\n            return a[\"stopid\"];\r\n        });\r\n        let newRows = data.results.map(a => {\r\n            a[\"time\"] = new Date();\r\n            a[\"selected\"] = selectedRows.filter(b => {\r\n                return b[\"stopid\"] === a[\"id\"];\r\n            }).length !== 0;\r\n            if (a[\"selected\"] === true) {\r\n                a[\"time\"] = new Date(selectedRows.filter(b => {\r\n                    return b[\"stopid\"] === a[\"id\"];\r\n                })[0][\"stoptime\"]);\r\n            }\r\n            return a;\r\n        });\r\n        this.setState({rows: newRows, selected: selectedRowIds});\r\n\r\n    };\r\n\r\n\r\n    saveData() {\r\n        // Once the backend is hooked up\r\n        // Send this.state.selected to it for database storage\r\n\r\n        axios.post('https://cs326-umap-amherst.herokuapp.com/savepitstops', {\r\n            userID: 0,\r\n            rows: this.state.rows.filter(a => {\r\n                return a[\"selected\"] === true\r\n            })\r\n        })\r\n        .then(function (response) {\r\n            console.log(response);\r\n        })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    handleChange (event) {\r\n        this.setState({search:event.target.value});\r\n    };\r\n\r\n    searchFilter(row) {\r\n        let stringSearch = this.state.search.trim() === \"\" || row.location.toLowerCase().includes(this.state.search.toLowerCase());\r\n        let options = { weekday: 'long', hour: 'numeric', minute: 'numeric' };\r\n        let timeSearch = row.selected && row.time.toLocaleDateString(\"en-US\", options).toLowerCase().includes(this.state.search.toLowerCase());\r\n        return stringSearch || timeSearch;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const classes = makeStyles((theme) => ({\r\n            margin: {\r\n                margin: theme.spacing(1),\r\n            },\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant={'h4'}>Schedule Pit Stops</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n\r\n                        <Card>\r\n                            <CardContent>\r\n                                <div className={classes.margin}>\r\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n\r\n                                        <Grid item>\r\n                                            <FormControl variant=\"filled\">\r\n                                                <InputLabel htmlFor=\"component-filled\">Search</InputLabel>\r\n                                                <FilledInput id=\"component-filled\" value={this.state.search} onChange={this.handleChange} />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                                <DataGrid autoHeight disableColumnFilter={true} density=\"headerHeight\" rows={this.state.rows.filter(this.searchFilter)} columns={this.state.columns.map((column) => ({\r\n                                    ...column,\r\n                                    disableClickEventBubbling: true,\r\n                                }))} pageSize={5}\r\n                                          checkboxSelection\r\n                                          selectionModel={this.state.selected}\r\n                                          onRowSelected={(params) => {\r\n                                              let rs = this.state.rows;\r\n                                              rs[params.data.id].selected = params.isSelected;\r\n                                              this.setState({rows: rs});\r\n                                          }}\r\n\r\n                                />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n                            <Grid item xs={12} style={{textAlign: \"right\"}}>\r\n                                <Link to=\"/\" style={{textDecoration:\"none\"}}>\r\n                                    <Button variant=\"contained\" endIcon={<MapIcon />}>\r\n                                        Return to Map\r\n                                    </Button>\r\n                                </Link>\r\n\r\n                                    <Button variant=\"contained\" endIcon={<SaveIcon />} onClick={this.saveData}>\r\n                                        Save Pit Stops\r\n                                    </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport default function Login() \r\n{\r\n    const [open, isOpen] = useState(false);\r\n\r\n    const openForm = () => \r\n    {\r\n      isOpen(true);\r\n    };\r\n\r\n    const closeForm = () =>\r\n    {\r\n      isOpen(false);\r\n    }\r\n\r\n    const [field, setField] = useState\r\n    ({\r\n        id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        major: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\",\r\n        users: []\r\n    });\r\n\r\n    const isEmpty = (fieldValue) =>\r\n    {\r\n      if (fieldValue === \"\") \r\n      {\r\n        return true;\r\n      }\r\n      else if (fieldValue !== \"\")\r\n      {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    const handleChange = (event) =>\r\n    {\r\n      const fieldName = event.target.name;\r\n      const fieldValue = event.target.value;\r\n\r\n      setField\r\n      (\r\n        { \r\n          [fieldName]: fieldValue\r\n        }\r\n      );\r\n    };\r\n\r\n    const [loginUsername, setLoginUsername] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n\r\n    const login = () => \r\n    {\r\n      axios.post('https://cs326-umap-amherst.herokuapp.com/saveusers', \r\n      {\r\n        username: loginUsername,\r\n        password: loginPassword\r\n      })\r\n      .then(function (response) \r\n      {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) \r\n      {\r\n        console.log(error);\r\n      });\r\n    };\r\n\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [major, setMajor] = useState(\"\");\r\n    const [emailAddress, setEmailAddress] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const signup = () =>\r\n    {\r\n      axios.post('https://cs326-umap-amherst.herokuapp.com/saveusers', \r\n      {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        major: major,\r\n        emailAddress: emailAddress,\r\n        password: password\r\n      })\r\n      .then(function (response) \r\n      {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) \r\n      {\r\n        console.log(error);\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div className = \"page\">\r\n\r\n          <div className = \"title\">\r\n              UMap Amherst\r\n          </div>\r\n\r\n          <div className = \"loginTitle\">\r\n              Login\r\n          </div>\r\n\r\n          <div className = \"usernameField\">\r\n            <Grid className = \"usernameIcon\">\r\n              <PersonIcon/>\r\n            </Grid>\r\n            <TextField label = \"Username\" variant = \"outlined\" onChange = {event => setLoginUsername(event.target.value)}/>\r\n          </div>\r\n\r\n          <div className = \"passwordField\">\r\n            <Grid className = \"passwordIcon\">\r\n              <LockIcon/>\r\n            </Grid>\r\n            <TextField label = \"Password\" variant = \"outlined\" onChange = {event => setLoginPassword(event.target.value)}/>\r\n          </div>\r\n\r\n          <div className = \"loginButton\">\r\n            <Link to = \"/\" className = \"loginLink\">\r\n              <Button variant = \"contained\" onClick = {login}>\r\n                Login\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className = \"createAccount\">\r\n            <Button onClick = {openForm}>\r\n              Create Account \r\n            </Button>\r\n            <Dialog open = {open} className = \"form\">  \r\n              <DialogTitle className = \"formTitle\"> Create Account </DialogTitle>\r\n                <Grid className = \"contactIcon\">\r\n                  <AccountBoxIcon style = {{fontSize: 45}}/>\r\n                </Grid>\r\n              <DialogContent>\r\n                <DialogContentText className = \"formHeader\">\r\n                  Please fill in at least one field.\r\n                </DialogContentText>\r\n                  <TextField label = \"First Name\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {event => setFirstName(event.target.value)} fullWidth/>\r\n                  <TextField label = \"Last Name\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {event => setLastName(event.target.value)} fullWidth/>\r\n                  <TextField label = \"Major\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {event => setMajor(event.target.value)}  fullWidth/>\r\n                  <TextField label = \"Email Address\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {event => setEmailAddress(event.target.value)}  fullWidth/>\r\n                  <TextField label = \"Password\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {event => setPassword(event.target.value)}  fullWidth/>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick = {closeForm}>\r\n                  Close\r\n                </Button>\r\n                <Button onClick = {signup}>\r\n                  Sign Up\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          <div className = \"guest\">\r\n            <Link to = \"/\" className = \"guestLink\">\r\n              <Button>\r\n                Use as Guest\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n\r\n      </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Classes from \"./pages/Classes\";\r\nimport Stops from \"./pages/Stops\";\r\nimport Login from \"./pages/Login\";\r\nimport {\r\n  AppBar,\r\n  Grid,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Map as MapIcon } from \"@material-ui/icons\";\r\n\r\nfunction classesPageComponent() {\r\n  return (\r\n    <Grid item xs={8} className={\"innerPage\"}>\r\n      <Classes />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction homePageComponent() {\r\n  return (\r\n    <Grid item xs={10} className={\"innerPage\"}>\r\n      <Home />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction stopsPageComponent() {\r\n  return (\r\n    <Grid item xs={8} className={\"innerPage\"}>\r\n      <Stops />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction loginPageComponent() {\r\n  return (\r\n    <Grid item xs={4} className={\"innerPage\"}>\r\n      <Login />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <HashRouter basename={\"/\"}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar variant=\"dense\">\r\n          <Link to=\"/\" edge=\"start\">\r\n            <IconButton>\r\n              <MapIcon />\r\n            </IconButton>\r\n          </Link>\r\n          <Typography variant=\"h6\">UMap Amherst</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        className={\"pageContainer\"}\r\n      >\r\n        <Switch>\r\n          <Route path=\"/\" exact component={homePageComponent} />\r\n          <Route path=\"/classes\" component={classesPageComponent} />\r\n          <Route path=\"/stops\" component={stopsPageComponent} />\r\n          <Route path=\"/login\" component={loginPageComponent} />\r\n        </Switch>\r\n      </Grid>\r\n    </HashRouter>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./main.css\";\r\nimport \"./classes.css\";\r\nimport \"./login.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}