{"version":3,"sources":["components/MapComponent.js","pages/Home.js","pages/Classes.js","pages/Stops.js","pages/Login.js","App.js","index.js"],"names":["MapComponent","props","mapStyle","require","useState","map","setMap","maps","setMaps","useEffect","console","log","route","directions","api_result","routes","legs","steps","forEach","leg","idx","push","lat","start_location","lng","end_location","mapResultToCoords","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","handleLoadGoogleMapsAPI","defaultCenter","defaultZoom","onGoogleApiLoaded","yesIWantToUseGoogleMapApiInternals","bootstrapURLKeys","key","options","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","styles","draggableCursor","draggingCursor","Home","classname","time","buildingname","room","upcomingClasses","setUpcomingClasses","location","pitstops","setPitstops","timeUntilNextClass","setTimeUntilNextClass","setRoute","axios","request","method","url","then","res","data","catch","err","Grid","container","spacing","item","xs","Card","CardContent","Typography","variant","direction","justify","alignItems","Person","fontSize","justifyContent","to","IconButton","size","Edit","length","classInfo","stop","className","Classes","classes","useStyles","a","fetch","headers","json","availableClasses","availableBuildings","setState","state","loaded","results","fetchData","name","days","building","hour","minute","classList","classSelectDOM","buildingSelectDOM","keyVal","handleChange","event","target","value","i","selectClass","MenuItem","selectBuilding","listDOM","classDOM","style","float","onClick","newList","splice","removeClass","id","toggleAddMenu","FormControl","formControl","InputLabel","Select","labelId","onChange","margin","htmlFor","BootstrapInput","document","getElementById","display","newClass","addClass","Button","endIcon","href","innerHTML","makeStyles","theme","minWidth","selectEmpty","marginTop","withStyles","root","input","borderRadius","position","backgroundColor","palette","background","paper","border","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","Stops","getData","get","params","userID","selectedStops","selectedRows","selectedRowIds","newRows","Date","filter","b","rows","selected","search","columns","field","headerName","description","sortable","width","renderCell","LocalizationProvider","dateAdapter","AdapterDateFns","renderInput","TextField","helperText","inputFormat","openTo","row","disabled","newValue","rs","searchFilter","bind","saveData","this","post","response","error","stringSearch","trim","toLowerCase","includes","timeSearch","toLocaleDateString","weekday","FilledInput","autoHeight","disableColumnFilter","density","column","disableClickEventBubbling","pageSize","checkboxSelection","selectionModel","onRowSelected","isSelected","textAlign","textDecoration","React","Component","Login","open","isOpen","firstName","lastName","major","emailAddress","password","users","isEmpty","fieldValue","loginUsername","setLoginUsername","loginPassword","setLoginPassword","setFirstName","setLastName","setMajor","setEmailAddress","setPassword","label","username","Dialog","DialogTitle","DialogContent","DialogContentText","Object","values","fullWidth","DialogActions","validSignup","signup","homePageComponent","stopsPageComponent","loginPageComponent","App","basename","AppBar","Toolbar","edge","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.71ab5645.chunk.js","sourcesContent":["import GoogleMapReact from 'google-map-react';\nimport React, {useEffect, useState} from 'react';\n\n\nexport default function MapComponent(props) {\n    const mapStyle = require('../mapstyle.json');\n\n    let [map, setMap] = useState(null);\n    let [maps, setMaps] = useState(null);\n\n    useEffect( () => {\n        handleLoadGoogleMapsAPI(map, maps);\n    }, [props.route]);\n\n    function mapResultToCoords(api_result) {\n        let directions = [];\n        api_result.routes[0].legs[0].steps.forEach((leg, idx) => {\n            directions.push({lat: leg.start_location.lat, lng: leg.start_location.lng})\n            directions.push({lat: leg.end_location.lat, lng: leg.end_location.lng})\n        });\n        return directions;\n    }\n\n    function handleLoadGoogleMapsAPI() {\n        if (map && maps) {\n            console.log(props.route);\n\n            if (!props.route) {\n                return;\n            }\n\n            let directions = mapResultToCoords(props.route);\n\n            const directionPath = new maps.Polyline({\n                path: directions,\n                geodesic: true,\n                strokeColor: \"#389C29\",\n                strokeOpacity: 1.0,\n                strokeWeight: 3,\n            });\n            directionPath.setMap(map);\n        }\n    }\n\n\n    return (\n        // Important! Always set the container height explicitly\n        <GoogleMapReact\n            defaultCenter={{lat: 42.389564, lng: -72.526512}}\n            defaultZoom={16}\n            onGoogleApiLoaded={({map, maps}) => {setMap(map); setMaps(maps);}}\n            yesIWantToUseGoogleMapApiInternals\n            bootstrapURLKeys={{key: \"AIzaSyAz2oL1-IeVDxCY7lWV2ivTZ3LIpEkrWEE\"}}\n            options={{\n                disableDefaultUI: true, // disable default map UI\n                draggable: true, // make map draggable\n                keyboardShortcuts: false, // disable keyboard shortcuts\n                scaleControl: true, // allow scale control\n                styles: mapStyle, // change default map styles\n                draggableCursor: 'grab',\n                draggingCursor: 'grabbing',\n            }}\n        >\n        </GoogleMapReact>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Edit, Person} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MapComponent from \"../components/MapComponent\";\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nexport default function Home() {\n\n    let [upcomingClasses, setUpcomingClasses] = useState([\n        {\n            classname: 'Compsci 121',\n            time: '11:15 AM',\n            buildingname: 'ILC',\n            room: 'N151',\n        }\n    ]);\n\n    let [pitstops, setPitstops] = useState([\n        {\n            time: '12:05PM',\n            location: 'Blue Wall'\n        }\n    ]);\n\n    let [timeUntilNextClass, setTimeUntilNextClass] = useState('No more classes today.');\n\n    let [route, setRoute] = useState(null);\n\n    useEffect(() => {\n        axios.request({\n            method: 'get',\n            url: 'http://cs326-umap-amherst.herokuapp.com/home?userID=0'\n        }).then((res) => {\n            setUpcomingClasses(res.data['classes']);\n            setPitstops(res.data['stops']);\n            setTimeUntilNextClass(res.data['timeUntilNextClass']);\n            setRoute(res.data['route']);\n        }).catch((err) => {\n            console.log('Unable to connect to backend to load data.')\n        });\n    }, [])\n\n    return (\n        <Grid container spacing={3}>\n\n            {/*Sidebar*/}\n            <Grid item xs={4}>\n                <Grid container spacing={2}>\n\n                    {/*Student Information*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Student Information</Typography>\n\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n                                    <Grid item xs={2}>\n                                        <Person fontSize={'large'} />\n                                    </Grid>\n                                    <Grid item xs={10}>\n                                        <Typography variant={'body1'}>John Doe</Typography>\n                                        <Typography variant={'subtitle1'}>Computer Science</Typography>\n                                    </Grid>\n                                </Grid>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Upcoming Classes*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Upcoming Classes</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/classes\">\n                                            <IconButton size=\"small\" variant=\"outlined\">\n                                                <Edit />\n                                            </IconButton>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {upcomingClasses.length === 0 &&\n                                    <Typography variant={'body1'}>No more classes today.</Typography>\n                                }\n                                {upcomingClasses.map((classInfo, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{classInfo.classname}: {classInfo.buildingname} {classInfo.room}  <b>{classInfo.time}</b></Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Pit stops*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Scheduled Pit Stops</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/stops\">\n                                            <IconButton size=\"small\" variant=\"outlined\">\n                                                <Edit />\n                                            </IconButton>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {pitstops.length === 0 &&\n                                <Typography variant={'body1'}>No more pitstops today.</Typography>\n                                }\n                                {pitstops.map((stop, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{stop.location}  <b>{stop.time}</b></Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Class Info*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Time Until Next Class</Typography>\n                                <Typography variant={'body1'}>{timeUntilNextClass}</Typography>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n\n\n            {/*Map*/}\n            <Grid item xs={8} className={'mapContainer'}>\n                <MapComponent route={route} />\n            </Grid>\n\n        </Grid>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport MapIcon from \"@material-ui/icons/Map\";\n\nexport default function Classes(props) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    async function fetchData() {\n      // Loads available classes to select from SQL\n      let availableClasses = await fetch(\n        \"https://cs326-umap-amherst.herokuapp.com/classes\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        }\n      ).then((res) => res.json());\n      // Loads available buildings to select from SQL\n      let availableBuildings = await fetch(\n        \"https://cs326-umap-amherst.herokuapp.com/buildings\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        }\n      ).then((res) => res.json());\n\n      setState({\n        ...state,\n        loaded: true,\n        availableClasses: availableClasses.results,\n        availableBuildings: availableBuildings.results,\n      });\n    }\n    if (state.loaded === false) {\n      fetchData();\n    }\n  });\n\n  const [state, setState] = useState({\n    name: \"\",\n    days: \"\",\n    building: \"\",\n    hour: \"\",\n    minute: \"\",\n    time: \"\",\n    room: \"001\",\n    classList: [],\n    classSelectDOM: [],\n    buildingSelectDOM: [],\n    availableClasses: [],\n    availableBuildings: [],\n    keyVal: 0,\n    loaded: false,\n  });\n  const handleChange = (event) => {\n    const name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n  // Loading all selectable class that are available to add\n  state.classSelectDOM = [];\n  for (let i = 0; i < state.availableClasses.length; i++) {\n    let selectClass = (\n      <MenuItem value={state.availableClasses[i].name} key={state.keyVal++}>\n        {state.availableClasses[i].name}\n      </MenuItem>\n    );\n    state.classSelectDOM.push(selectClass);\n  }\n  // Loading all selectable buildings that are available to add\n  state.buildingSelectDOM = [];\n  for (let i = 0; i < state.availableBuildings.length; i++) {\n    let selectBuilding = (\n      <MenuItem value={state.availableBuildings[i].name} key={state.keyVal++}>\n        {state.availableBuildings[i].name}\n      </MenuItem>\n    );\n    state.buildingSelectDOM.push(selectBuilding);\n  }\n\n  let listDOM = []; // stores class list dom\n  // Loading all of the classes\n  for (let i = 0; i < state.classList.length; i++) {\n    let classDOM = (\n      <div className=\"classes-list-item\" key={state.keyVal++}>\n        <div>\n          {state.classList[i].name}{\" \"}\n          <span style={{ float: \"right\" }}>{state.classList[i].days}</span>\n        </div>\n        <div>\n          {state.classList[i].building}{\" \"}\n          <span style={{ float: \"right\" }}>{state.classList[i].time}</span>\n        </div>\n        <div>Room {state.classList[i].room}</div>\n        <button\n          className=\"classes-button\"\n          onClick={() => setState(removeClass(state, i))}\n        >\n          Remove\n        </button>\n      </div>\n    );\n    listDOM.push(classDOM);\n  }\n\n  // No classes loaded check\n  if (listDOM.length === 0) {\n    listDOM = (\n      <div className=\"classes-list-item\">\n        <div>No classes scheduled :(</div>\n      </div>\n    );\n  }\n\n  if (state.loaded === false) {\n    return (\n      <div>\n        <div className=\"classes-dashboard\">\n          <span className=\"classes-title\">Class Schedule</span>\n          <div className=\"classes-list\" id=\"classes-list\">\n            <div className=\"classes-list-item\">\n              <div>LOADING DATA...</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"classes-dashboard\">\n        <div>\n          <span className=\"classes-title\">Class Schedule</span>\n          <button\n            className=\"classes-button\"\n            id=\"classes-add\"\n            onClick={toggleAddMenu}\n          >\n            Add Class\n          </button>\n        </div>\n        <div className=\"classes-list\" id=\"classes-list\">\n          {listDOM}\n        </div>\n        <div className=\"classes-menu\" id=\"classes-menu\">\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Class</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-name\"\n              value={state.name}\n              name=\"name\"\n              onChange={handleChange}\n            >\n              {state.classSelectDOM}\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Days</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-days\"\n              value={state.days}\n              name=\"days\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"Monday, Wednesday, Friday\">\n                Monday, Wednesday, Friday\n              </MenuItem>\n              <MenuItem value=\"Monday, Wednesday\">Monday, Wednesday</MenuItem>\n              <MenuItem value=\"Tuesday, Thursday\">Tuesday, Thursday</MenuItem>\n              <MenuItem value=\"Monday\">Monday</MenuItem>\n              <MenuItem value=\"Tuesday\">Tuesday</MenuItem>\n              <MenuItem value=\"Wednesday\">Wednesday</MenuItem>\n              <MenuItem value=\"Thursday\">Thursday</MenuItem>\n              <MenuItem value=\"Friday\">Friday</MenuItem>\n              <MenuItem value=\"Saturday\">Saturday</MenuItem>\n              <MenuItem value=\"Sunday\">Sunday</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Building</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-building\"\n              value={state.building}\n              name=\"building\"\n              onChange={handleChange}\n            >\n              {state.buildingSelectDOM}\n            </Select>\n          </FormControl>\n          <br />\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Hour</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-hour\"\n              value={state.hour}\n              name=\"hour\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"1\">1</MenuItem>\n              <MenuItem value=\"2\">2</MenuItem>\n              <MenuItem value=\"3\">3</MenuItem>\n              <MenuItem value=\"4\">4</MenuItem>\n              <MenuItem value=\"5\">5</MenuItem>\n              <MenuItem value=\"6\">6</MenuItem>\n              <MenuItem value=\"7\">7</MenuItem>\n              <MenuItem value=\"8\">8</MenuItem>\n              <MenuItem value=\"9\">9</MenuItem>\n              <MenuItem value=\"10\">10</MenuItem>\n              <MenuItem value=\"11\">11</MenuItem>\n              <MenuItem value=\"12\">12</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Minute</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-minute\"\n              value={state.minute}\n              name=\"minute\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"00\">00</MenuItem>\n              <MenuItem value=\"05\">05</MenuItem>\n              <MenuItem value=\"10\">10</MenuItem>\n              <MenuItem value=\"15\">15</MenuItem>\n              <MenuItem value=\"20\">20</MenuItem>\n              <MenuItem value=\"25\">25</MenuItem>\n              <MenuItem value=\"30\">30</MenuItem>\n              <MenuItem value=\"35\">35</MenuItem>\n              <MenuItem value=\"40\">40</MenuItem>\n              <MenuItem value=\"45\">45</MenuItem>\n              <MenuItem value=\"50\">50</MenuItem>\n              <MenuItem value=\"55\">55</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">AM/PM</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-time\"\n              value={state.time}\n              name=\"time\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"AM\">AM</MenuItem>\n              <MenuItem value=\"PM\">PM</MenuItem>\n            </Select>\n          </FormControl>\n          <br />\n          <br />\n          <br />\n          <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"classes-menu-roomNum\">Room</InputLabel>\n            <BootstrapInput\n              id=\"classes-menu-roomNum\"\n              value={state.room}\n              name=\"room\"\n              onChange={handleChange}\n            />\n          </FormControl>\n          <div className=\"classes-add-error\" id=\"classes-add-error\">\n            Please make sure that all items have been selected.\n          </div>\n        </div>\n        <button\n          className=\"classes-button\"\n          id=\"classes-create\"\n          onClick={() => setState(addClass(state))}\n        >\n          Add New Class\n        </button>\n        <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-save\">\n          Save Classes\n        </Button>\n        <a href=\"#/\">\n          <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-return\">\n            Return to Map\n          </Button>\n        </a>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Adds a class\n * @param state - current component state\n */\nfunction addClass(state) {\n  let validClass =\n    state.name !== \"\" &&\n    state.days !== \"\" &&\n    state.building !== \"\" &&\n    state.hour !== \"\" &&\n    state.minute !== \"\" &&\n    state.time !== \"\" &&\n    state.room !== \"room\";\n\n  if (!validClass) {\n    document.getElementById(\"classes-add-error\").style.display = \"block\";\n    return state;\n  } else {\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\n  }\n\n  let newClass = {\n    name: state.name,\n    days: state.days,\n    building: state.building,\n    time: state.hour + \":\" + state.minute + \" \" + state.time,\n    room: state.room,\n  };\n  let newList = state.classList;\n  newList.push(newClass);\n  toggleAddMenu();\n\n  return {\n    ...state,\n    classList: newList,\n  };\n}\n\n/**\n * Removes a class\n * @param state - current component state\n * @param i - index in classList array to reomve\n */\nfunction removeClass(state, i) {\n  let newList = state.classList;\n  newList.splice(i, 1);\n\n  return {\n    ...state,\n    classList: newList,\n  };\n}\n\n/**\n *  Toggles Adding New Class Menu\n */\nfunction toggleAddMenu() {\n  if (document.getElementById(\"classes-list\").style.display !== \"none\") {\n    document.getElementById(\"classes-list\").style.display = \"none\";\n    document.getElementById(\"classes-save\").style.display = \"none\";\n    document.getElementById(\"classes-return\").style.display = \"none\";\n    document.getElementById(\"classes-add\").innerHTML = \"Go Back\";\n    document.getElementById(\"classes-menu\").style.display = \"block\";\n    document.getElementById(\"classes-create\").style.display = \"block\";\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\n  } else {\n    document.getElementById(\"classes-list\").style.display = \"block\";\n    document.getElementById(\"classes-save\").style.display = \"flex\";\n    document.getElementById(\"classes-return\").style.display = \"flex\";\n    document.getElementById(\"classes-menu\").style.display = \"none\";\n    document.getElementById(\"classes-add\").innerHTML = \"Add Class\";\n    document.getElementById(\"classes-create\").style.display = \"none\";\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n","import React from \"react\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {DataGrid} from \"@material-ui/data-grid\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport MapIcon from '@material-ui/icons/Map';\nimport SaveIcon from '@material-ui/icons/Save';\nimport KeyboardTimePicker from '@material-ui/lab/DateTimePicker';\nimport {CardContent, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport axios from 'axios'\n\nexport default class Stops extends React.Component {\n\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search:\"\",\n            columns:\n                [\n                {\n                    field: 'location',\n                    headerName: 'Location',\n                    description: 'This column has the location of pit stops',\n                    sortable: true,\n                    width: 300\n                },\n                {\n                    field: 'time',\n                    headerName: 'Time',\n                    description: 'This column has the time selector',\n                    sortable: false,\n                    width: 300,\n                    renderCell: (params) => (\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <KeyboardTimePicker\n                                renderInput={(params) => <TextField {...params} helperText={null}/>}\n                                inputFormat=\"EEEE - hh:mm a\"\n                                openTo={\"date\"}\n                                value={this.state.rows[params.row.id].time}\n                                disabled={!this.state.rows[params.row.id].selected}\n                                onChange={(newValue) => {\n                                    let rs = this.state.rows;\n                                    rs[params.row.id].time = newValue;\n                                    this.setState({rows: rs});\n\n                                }}\n                            />\n                        </LocalizationProvider>\n                    )\n                }\n                ],\n            rows: [\n                { id: 0, location: 'Worcester Dining Commons', time: new Date(), selected: false},\n                { id: 1, location: 'Franklin Dining Commons', time: new Date(), selected: false},\n                { id: 2, location: 'Hampshire Dining Commons', time: new Date(), selected: false},\n                { id: 3, location: 'Berkshire Dining Commons', time: new Date(), selected: false},\n                { id: 4, location: 'Blue Wall', time: new Date(), selected: false},\n                { id: 5, location: 'Procrastination Station', time: new Date(), selected: false},\n                { id: 6, location: 'Roots Cafe', time: new Date(), selected: false},\n                { id: 7, location: 'Campus Center', time: new Date(), selected: false},\n                { id: 8, location: 'W.E.B. Du Bois Library', time: new Date(), selected: false}\n            ],\n            selected: []\n        };\n        this.searchFilter = this.searchFilter.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.getData = this.getData.bind(this);\n        this.saveData = this.saveData.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n\n    getData = async () => {\n        // Once backend is hooked up\n        // Retrieve user selected data and fill this.state.rows\n\n        let pitstops = await axios.get('https://cs326-umap-amherst.herokuapp.com/pitstops');\n        let selectedStops = await axios.get('https://cs326-umap-amherst.herokuapp.com/userpitstops',{params:{userID:0}});\n\n        let data = pitstops.data;\n        let selectedRows = selectedStops.data.results;\n\n        let selectedRowIds = selectedStops.data.results.map(a => {\n            return a[\"stopid\"];\n        });\n        let newRows = data.results.map(a => {\n            a[\"time\"] = new Date();\n            a[\"selected\"] = selectedRows.filter(b => {\n                return b[\"stopid\"] === a[\"id\"];\n            }).length !== 0;\n            if (a[\"selected\"] === true) {\n                a[\"time\"] = new Date(selectedRows.filter(b => {\n                    return b[\"stopid\"] === a[\"id\"];\n                })[0][\"stoptime\"]);\n            }\n            return a;\n        });\n        this.setState({rows: newRows, selected: selectedRowIds});\n\n    };\n\n\n    saveData() {\n        // Once the backend is hooked up\n        // Send this.state.selected to it for database storage\n\n        axios.post('https://cs326-umap-amherst.herokuapp.com/savepitstops', {\n            userID: 0,\n            rows: this.state.rows.filter(a => {\n                return a[\"selected\"] === true\n            })\n        })\n        .then(function (response) {\n            console.log(response);\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n\n    handleChange (event) {\n        this.setState({search:event.target.value});\n    };\n\n    searchFilter(row) {\n        let stringSearch = this.state.search.trim() === \"\" || row.location.toLowerCase().includes(this.state.search.toLowerCase());\n        let options = { weekday: 'long', hour: 'numeric', minute: 'numeric' };\n        let timeSearch = row.selected && row.time.toLocaleDateString(\"en-US\", options).toLowerCase().includes(this.state.search.toLowerCase());\n        return stringSearch || timeSearch;\n    }\n\n\n\n    render() {\n\n\n\n        const classes = makeStyles((theme) => ({\n            margin: {\n                margin: theme.spacing(1),\n            },\n        }));\n\n        return (\n            <div>\n\n                <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n\n                    <Grid item xs={12}>\n                        <Typography variant={'h4'}>Schedule Pit Stops</Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n\n                        <Card>\n                            <CardContent>\n                                <div className={classes.margin}>\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                        <Grid item>\n                                            <FormControl variant=\"filled\">\n                                                <InputLabel htmlFor=\"component-filled\">Search</InputLabel>\n                                                <FilledInput id=\"component-filled\" value={this.state.search} onChange={this.handleChange} />\n                                            </FormControl>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                                <DataGrid autoHeight disableColumnFilter={true} density=\"headerHeight\" rows={this.state.rows.filter(this.searchFilter)} columns={this.state.columns.map((column) => ({\n                                    ...column,\n                                    disableClickEventBubbling: true,\n                                }))} pageSize={5}\n                                          checkboxSelection\n                                          selectionModel={this.state.selected}\n                                          onRowSelected={(params) => {\n                                              let rs = this.state.rows;\n                                              rs[params.data.id].selected = params.isSelected;\n                                              this.setState({rows: rs});\n                                          }}\n\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n                            <Grid item xs={12} style={{textAlign: \"right\"}}>\n                                <Link to=\"/\" style={{textDecoration:\"none\"}}>\n                                    <Button variant=\"contained\" endIcon={<MapIcon />}>\n                                        Return to Map\n                                    </Button>\n                                </Link>\n\n                                    <Button variant=\"contained\" endIcon={<SaveIcon />} onClick={this.saveData}>\n                                        Save Pit Stops\n                                    </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </div>\n        );\n    }\n}\n","import React, {useState} from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\n\nexport default function Login() \n{\n    const [open, isOpen] = useState(false);\n\n    const openForm = () => \n    {\n      isOpen(true);\n    };\n\n    const closeForm = () =>\n    {\n      isOpen(false);\n    }\n\n    const [field, setField] = useState\n    ({\n        id: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        major: \"\",\n        emailAddress: \"\",\n        password: \"\",\n        users: []\n    });\n\n    const isEmpty = (fieldValue) =>\n    {\n      if (fieldValue === \"\") \n      {\n        return true;\n      }\n      else if (fieldValue !== \"\")\n      {\n        return false;\n      }\n    }\n\n    const handleChange = (event) =>\n    {\n      const fieldName = event.target.name;\n      const fieldValue = event.target.value;\n\n      setField\n      (\n        { \n          [fieldName]: fieldValue\n        }\n      );\n    };\n\n    const [loginUsername, setLoginUsername] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n\n    const login = () => \n    {\n      axios.post('https://cs326-umap-amherst.herokuapp.com/saveusers', \n      {\n        username: loginUsername,\n        password: loginPassword\n      })\n      .then(function (response) \n      {\n        console.log(response);\n      })\n      .catch(function (error) \n      {\n        console.log(error);\n      });\n    };\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [major, setMajor] = useState(\"\");\n    const [emailAddress, setEmailAddress] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const signup = () =>\n    {\n      let validSignup = firstName !== \"\" && lastName !== \"\" && major !== \"\" && emailAddress !== \"\" && password !== \"\";\n\n      if (validSignup === false)\n      {\n        console.log(\"Invalid signup\");\n      }\n      else if (validSignup === true)\n      {\n        console.log(\"Valid signup\");\n      }\n\n      axios.post('https://cs326-umap-amherst.herokuapp.com/saveusers', \n      {\n        firstName: firstName,\n        lastName: lastName,\n        major: major,\n        emailAddress: emailAddress,\n        password: password\n      })\n      .then(function (response) \n      {\n        console.log(response);\n      })\n      .catch(function (error) \n      {\n        console.log(error);\n      });\n    };\n\n    return (\n      <div className = \"page\">\n\n          <div className = \"title\">\n              UMap Amherst\n          </div>\n\n          <div className = \"loginTitle\">\n              Login\n          </div>\n\n          <div className = \"usernameField\">\n            <Grid className = \"usernameIcon\">\n              <PersonIcon/>\n            </Grid>\n            <TextField label = \"Username\" variant = \"outlined\" onChange = {event => setLoginUsername(event.target.value)}/>\n          </div>\n\n          <div className = \"passwordField\">\n            <Grid className = \"passwordIcon\">\n              <LockIcon/>\n            </Grid>\n            <TextField label = \"Password\" variant = \"outlined\" onChange = {event => setLoginPassword(event.target.value)}/>\n          </div>\n\n          <div className = \"loginButton\">\n            <Link to = \"/\" className = \"loginLink\">\n              <Button variant = \"contained\" onClick = {login}>\n                Login\n              </Button>\n            </Link>\n          </div>\n\n          <div className = \"createAccount\">\n            <Button onClick = {openForm}>\n              Create Account \n            </Button>\n            <Dialog open = {open} className = \"form\">  \n              <DialogTitle className = \"formTitle\"> Create Account </DialogTitle>\n                <Grid className = \"contactIcon\">\n                  <AccountBoxIcon style = {{fontSize: 45}}/>\n                </Grid>\n              <DialogContent>\n                <DialogContentText className = \"formHeader\">\n                  Please fill in at least one field.\n                </DialogContentText>\n                  <TextField label = \"First Name\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {event => setFirstName(event.target.value)} fullWidth/>\n                  <TextField label = \"Last Name\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {event => setLastName(event.target.value)} fullWidth/>\n                  <TextField label = \"Major\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {event => setMajor(event.target.value)} fullWidth/>\n                  <TextField label = \"Email Address\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {event => setEmailAddress(event.target.value)} fullWidth/>\n                  <TextField label = \"Password\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {event => setPassword(event.target.value)} fullWidth/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick = {closeForm}>\n                  Close\n                </Button>\n                <Button onClick = {signup()}>\n                  Sign Up\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n\n          <div className = \"guest\">\n            <Link to = \"/\" className = \"guestLink\">\n              <Button>\n                Use as Guest\n              </Button>\n            </Link>\n          </div>\n\n      </div>\n    );\n}","import React from \"react\";\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Classes from \"./pages/Classes\";\nimport Stops from \"./pages/Stops\";\nimport Login from \"./pages/Login\";\nimport {\n  AppBar,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { Map as MapIcon } from \"@material-ui/icons\";\n\nfunction classesPageComponent(availableClasses, availableBuildings) {\n  return (\n    <Grid item xs={8} className={\"innerPage\"}>\n      <Classes />\n    </Grid>\n  );\n}\n\nfunction homePageComponent() {\n  return (\n    <Grid item xs={10} className={\"innerPage\"}>\n      <Home />\n    </Grid>\n  );\n}\n\nfunction stopsPageComponent() {\n  return (\n    <Grid item xs={8} className={\"innerPage\"}>\n      <Stops />\n    </Grid>\n  );\n}\n\nfunction loginPageComponent() {\n  return (\n    <Grid item xs={4} className={\"innerPage\"}>\n      <Login />\n    </Grid>\n  );\n}\n\nexport default function App() {\n  return (\n    <HashRouter basename={\"/\"}>\n      <AppBar position=\"sticky\">\n        <Toolbar variant=\"dense\">\n          <Link to=\"/\" edge=\"start\">\n            <IconButton>\n              <MapIcon />\n            </IconButton>\n          </Link>\n          <Typography variant=\"h6\">UMap Amherst</Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={\"pageContainer\"}\n      >\n        <Switch>\n          <Route path=\"/\" exact component={homePageComponent} />\n          <Route path=\"/classes\" component={classesPageComponent()} />\n          <Route path=\"/stops\" component={stopsPageComponent} />\n          <Route path=\"/login\" component={loginPageComponent} />\n        </Switch>\n      </Grid>\n    </HashRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./main.css\";\nimport \"./classes.css\";\nimport \"./login.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}