{"version":3,"sources":["components/MapComponent.js","pages/Home.js","pages/Classes.js","pages/Stops.js","pages/Login.js","App.js","index.js"],"names":["MapComponent","mapStyle","require","defaultCenter","lat","lng","defaultZoom","onGoogleApiLoaded","map","maps","directions","api_result","routes","legs","steps","forEach","leg","idx","push","start_location","end_location","mapResultToCoords","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","setMap","handleLoadGoogleMapsAPI","yesIWantToUseGoogleMapApiInternals","bootstrapURLKeys","key","options","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","styles","draggableCursor","draggingCursor","Home","useState","name","startTime","endTime","location","upcomingClasses","pitstops","Grid","container","spacing","item","xs","Card","CardContent","Typography","variant","direction","justify","alignItems","Person","fontSize","justifyContent","to","IconButton","size","Edit","classInfo","stop","className","Classes","props","classes","useStyles","days","building","hour","minute","time","room","classList","classSelectDOM","buildingSelectDOM","keyVal","state","setState","handleChange","event","target","value","availableClasses","results","i","length","selectClass","MenuItem","availableBuildings","selectBuilding","listDOM","classDOM","style","float","onClick","newList","splice","removeClass","id","toggleAddMenu","FormControl","formControl","InputLabel","Select","labelId","onChange","margin","htmlFor","BootstrapInput","document","getElementById","display","newClass","addClass","href","innerHTML","makeStyles","theme","minWidth","selectEmpty","marginTop","withStyles","root","input","borderRadius","position","backgroundColor","palette","background","paper","border","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","Stops","getData","search","columns","field","headerName","description","sortable","width","renderCell","params","LocalizationProvider","dateAdapter","AdapterDateFns","renderInput","TextField","helperText","inputFormat","openTo","rows","row","disabled","selected","newValue","rs","Date","searchFilter","bind","this","stringSearch","trim","toLowerCase","includes","timeSearch","toLocaleDateString","weekday","FilledInput","autoHeight","disableColumnFilter","density","filter","column","disableClickEventBubbling","pageSize","checkboxSelection","onRowSelected","data","isSelected","textAlign","textDecoration","Button","endIcon","saveData","React","Component","Login","open","isOpen","closeForm","firstName","lastName","major","emailAddress","password","setField","isEmpty","fieldValue","fieldName","label","Dialog","DialogTitle","DialogContent","DialogContentText","error","Object","values","fullWidth","DialogActions","homePageComponent","stopsPageComponent","loginPageComponent","App","basename","AppBar","Toolbar","edge","exact","component","a","fetch","method","headers","then","res","json","ReactDOM","render","StrictMode","fetchData"],"mappings":"wsCAIe,SAASA,IACpB,IAAMC,EAAWC,EAAQ,KAmLzB,OAEQ,aADJ,CACK,IAAD,CACIC,cAAe,CAACC,IAAK,UAAWC,KAAM,WACtCC,YAAa,GACbC,kBAAmB,mBA3K/B,SAAiCC,EAAKC,GAElC,IA4IIC,EAxJR,SAA2BC,GACvB,IAAID,EAAa,GAKjB,MAMc,CACV,mBAAsB,CAClB,CACI,gBAAmB,KACnB,SAAY,8BACZ,MAAS,CACL,YAGR,CACI,gBAAmB,KACnB,SAAY,8BACZ,MAAS,CACL,aAIZ,OAAU,CACN,CACI,OAAU,CACN,UAAa,CACT,IAAO,WACP,KAAQ,YAEZ,UAAa,CACT,IAAO,WACP,KAAQ,oBAGhB,WAAc,2BACd,KAAQ,CACJ,CACI,SAAY,CACR,KAAQ,SACR,MAAS,KAEb,SAAY,CACR,KAAQ,SACR,MAAS,KAEb,YAAe,+EACf,aAAgB,CACZ,IAAO,WACP,KAAQ,YAEZ,cAAiB,sCACjB,eAAkB,CACd,IAAO,WACP,KAAQ,WAEZ,MAAS,CACL,CACI,SAAY,CACR,KAAQ,SACR,MAAS,KAEb,SAAY,CACR,KAAQ,SACR,MAAS,KAEb,aAAgB,CACZ,IAAO,WACP,KAAQ,YAEZ,kBAAqB,oBACrB,SAAY,CACR,OAAU,kDAEd,eAAkB,CACd,IAAO,WACP,KAAQ,WAEZ,YAAe,WAEnB,CACI,SAAY,CACR,KAAQ,SACR,MAAS,IAEb,SAAY,CACR,KAAQ,QACR,MAAS,IAEb,aAAgB,CACZ,IAAO,WACP,KAAQ,YAEZ,kBAAqB,oBACrB,SAAY,aACZ,SAAY,CACR,OAAU,oBAEd,eAAkB,CACd,IAAO,WACP,KAAQ,YAEZ,YAAe,WAEnB,CACI,SAAY,CACR,KAAQ,SACR,MAAS,IAEb,SAAY,CACR,KAAQ,QACR,MAAS,IAEb,aAAgB,CACZ,IAAO,WACP,KAAQ,YAEZ,kBAAqB,qFACrB,SAAY,YACZ,SAAY,CACR,OAAU,wBAEd,eAAkB,CACd,IAAO,WACP,KAAQ,YAEZ,YAAe,YAGvB,oBAAuB,GACvB,aAAgB,KAGxB,kBAAqB,CACjB,OAAU,gDAEd,QAAW,GACX,SAAY,CACR,+GAEJ,eAAkB,KAG1B,OAAU,MAnJHE,OAAO,GAAGC,KAAK,GAAGC,MAAMC,SAAQ,SAACC,EAAKC,GAC7CP,EAAWQ,KAAK,CAACd,IAAKY,EAAIG,eAAef,IAAKC,IAAKW,EAAIG,eAAed,MACtEK,EAAWQ,KAAK,CAACd,IAAKY,EAAII,aAAahB,IAAKC,IAAKW,EAAII,aAAaf,SAE/DK,EAkJUW,GAEK,IAAIZ,EAAKa,SAAS,CACpCC,KAAMb,EACNc,UAAU,EACVC,YAAa,UACbC,cAAe,EACfC,aAAc,IAEJC,OAAOpB,GAoByBqB,CAAnB,EAAGrB,IAAH,EAAQC,OAC3BqB,oCAAkC,EAClCC,iBAAkB,CAACC,IAAK,2CACxBC,QAAS,CACLC,kBAAkB,EAClBC,WAAW,EACXC,mBAAmB,EACnBC,cAAc,EACdC,OAAQrC,EACRsC,gBAAiB,OACjBC,eAAgB,cC9LrB,SAASC,IAAQ,IAAD,EAEiBC,mBAAS,CACjD,CACIC,KAAM,cACNC,UAAW,WACXC,QAAS,WACTC,SAAU,WAEd,CACIH,KAAM,cACNC,UAAW,WACXC,QAAS,UACTC,SAAU,gBAbS,mBAEtBC,EAFsB,aAiBGL,mBAAS,CACnC,CACIC,KAAM,qBACNC,UAAW,UACXC,QAAS,UACTC,SAAU,WAEd,CACIH,KAAM,mBACNC,UAAW,UACXC,QAAS,UACTC,SAAU,6BA5BS,mBAiBtBE,EAjBsB,UAmO3B,OACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UAGI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UAGI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAS,KAArB,iCAEA,eAACR,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMC,QAAQ,aAAaC,WAAW,SAAhE,UACI,cAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACQ,EAAA,EAAD,CAAQC,SAAU,YAEtB,eAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,cAACG,EAAA,EAAD,CAAYC,QAAS,QAArB,sBACA,cAACD,EAAA,EAAD,CAAYC,QAAS,YAArB,2CASpB,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WAEI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMK,eAAe,gBAAgBH,WAAW,SAA1E,UACI,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACI,EAAA,EAAD,CAAYC,QAAS,KAArB,gCAEJ,cAACR,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC,IAAD,CAAMY,GAAG,WAAT,SACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQT,QAAQ,WAAjC,SACI,cAACU,EAAA,EAAD,aAKfpB,EAAgBvC,KAAI,SAAC4D,EAAWnD,GAAZ,OACjB,eAACuC,EAAA,EAAD,CAAsBC,QAAS,QAA/B,UAAyCW,EAAUzB,KAAnD,IAA0DyB,EAAUxB,YAAnD3B,aAOjC,cAACgC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WAEI,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMK,eAAe,gBAAgBH,WAAW,SAA1E,UACI,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACI,EAAA,EAAD,CAAYC,QAAS,KAArB,mCAEJ,cAACR,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC,IAAD,CAAMY,GAAG,SAAT,SACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQT,QAAQ,WAAjC,SACI,cAACU,EAAA,EAAD,aAKfnB,EAASxC,KAAI,SAAC6D,EAAMpD,GAAP,OACV,eAACuC,EAAA,EAAD,CAAsBC,QAAS,QAA/B,UAAyCY,EAAK1B,KAA9C,IAAqD0B,EAAKzB,YAAzC3B,aAOjC,cAACgC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAS,KAArB,mCACA,cAACD,EAAA,EAAD,CAAYC,QAAS,QAArB,wBAEA,uBAEA,cAACD,EAAA,EAAD,CAAYC,QAAS,KAArB,uCACA,cAACD,EAAA,EAAD,CAAYC,QAAS,QAArB,mCAWpB,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGiB,UAAW,eAA7B,SACI,cAACtE,EAAD,S,8ECrUD,SAASuE,EAAQC,GAC9B,IAAMC,EAAUC,IADqB,EAGXhC,mBAAS,CACjCC,KAAM,GACNgC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,OAAQ,GACRC,KAAM,GACNC,KAAM,MACNC,UAAW,GACXC,eAAgB,GAChBC,kBAAmB,GACnBC,OAAQ,IAd2B,mBAG9BC,EAH8B,KAGvBC,EAHuB,KAgB/BC,EAAe,SAACC,GACpB,IAAM7C,EAAO6C,EAAMC,OAAO9C,KAC1B2C,EAAS,2BACJD,GADG,kBAEL1C,EAAO6C,EAAMC,OAAOC,UAKzBL,EAAMH,eAAiB,GAEvB,IADA,IAAIS,EAAmBnB,EAAMmB,iBAAiBC,QACrCC,EAAI,EAAGA,EAAIF,EAAiBG,OAAQD,IAAK,CAChD,IAAIE,EACF,cAACC,EAAA,EAAD,CAAUN,MAAOC,EAAiBE,GAAGlD,KAArC,SACGgD,EAAiBE,GAAGlD,MADyB0C,EAAMD,UAIxDC,EAAMH,eAAehE,KAAK6E,GAG5BV,EAAMF,kBAAoB,GAE1B,IADA,IAAIc,EAAqBzB,EAAMyB,mBAAmBL,QACzCC,EAAI,EAAGA,EAAII,EAAmBH,OAAQD,IAAK,CAClD,IAAIK,EACF,cAACF,EAAA,EAAD,CAAUN,MAAOO,EAAmBJ,GAAGlD,KAAvC,SACGsD,EAAmBJ,GAAGlD,MADyB0C,EAAMD,UAI1DC,EAAMF,kBAAkBjE,KAAKgF,GAK/B,IAFA,IAAIC,EAAU,GA/CuB,WAiD5BN,GACP,IAAIO,EACF,sBAAK9B,UAAU,oBAAf,UACE,gCACGe,EAAMJ,UAAUY,GAAGlD,KAAM,IAC1B,sBAAM0D,MAAO,CAAEC,MAAO,SAAtB,SAAkCjB,EAAMJ,UAAUY,GAAGlB,UAEvD,gCACGU,EAAMJ,UAAUY,GAAGjB,SAAU,IAC9B,sBAAMyB,MAAO,CAAEC,MAAO,SAAtB,SAAkCjB,EAAMJ,UAAUY,GAAGd,UAEvD,wCAAWM,EAAMJ,UAAUY,GAAGb,QAC9B,wBACEV,UAAU,iBACViC,QAAS,kBAAMjB,EA6NzB,SAAqBD,EAAOQ,GAC1B,IAAIW,EAAUnB,EAAMJ,UAGpB,OAFAuB,EAAQC,OAAOZ,EAAG,GAEX,2BACFR,GADL,IAEEJ,UAAWuB,IAnOmBE,CAAYrB,EAAOQ,KAF7C,sBAVsCR,EAAMD,UAkBhDe,EAAQjF,KAAKkF,IApBNP,EAAI,EAAGA,EAAIR,EAAMJ,UAAUa,OAAQD,IAAM,EAAzCA,GAgCT,OARuB,IAAnBM,EAAQL,SACVK,EACE,qBAAK7B,UAAU,oBAAf,SACE,6DAMJ,8BACE,sBAAKA,UAAU,oBAAf,UACE,gCACE,sBAAMA,UAAU,gBAAhB,4BACA,wBACEA,UAAU,iBACVqC,GAAG,cACHJ,QAASK,EAHX,0BAQF,qBAAKtC,UAAU,eAAeqC,GAAG,eAAjC,SACGR,IAEH,sBAAK7B,UAAU,eAAeqC,GAAG,eAAjC,UACE,eAACE,EAAA,EAAD,CAAavC,UAAWG,EAAQqC,YAAhC,UACE,cAACC,EAAA,EAAD,CAAYJ,GAAG,2BAAf,mBACA,cAACK,EAAA,EAAD,CACEC,QAAQ,2BACRN,GAAG,oBACHjB,MAAOL,EAAM1C,KACbA,KAAK,OACLuE,SAAU3B,EALZ,SAOGF,EAAMH,oBAGX,eAAC2B,EAAA,EAAD,CAAavC,UAAWG,EAAQqC,YAAhC,UACE,cAACC,EAAA,EAAD,CAAYJ,GAAG,2BAAf,kBACA,eAACK,EAAA,EAAD,CACEC,QAAQ,2BACRN,GAAG,oBACHjB,MAAOL,EAAMV,KACbhC,KAAK,OACLuE,SAAU3B,EALZ,UAOE,cAACS,EAAA,EAAD,CAAUN,MAAM,4BAAhB,uCAGA,cAACM,EAAA,EAAD,CAAUN,MAAM,oBAAhB,+BACA,cAACM,EAAA,EAAD,CAAUN,MAAM,oBAAhB,+BACA,cAACM,EAAA,EAAD,CAAUN,MAAM,SAAhB,oBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,UAAhB,qBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,YAAhB,uBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,WAAhB,sBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,SAAhB,oBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,WAAhB,sBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,SAAhB,0BAGJ,eAACmB,EAAA,EAAD,CAAavC,UAAWG,EAAQqC,YAAhC,UACE,cAACC,EAAA,EAAD,CAAYJ,GAAG,2BAAf,sBACA,cAACK,EAAA,EAAD,CACEC,QAAQ,2BACRN,GAAG,wBACHjB,MAAOL,EAAMT,SACbjC,KAAK,WACLuE,SAAU3B,EALZ,SAOGF,EAAMF,uBAGX,uBACA,eAAC0B,EAAA,EAAD,CAAavC,UAAWG,EAAQqC,YAAhC,UACE,cAACC,EAAA,EAAD,CAAYJ,GAAG,2BAAf,kBACA,eAACK,EAAA,EAAD,CACEC,QAAQ,2BACRN,GAAG,oBACHjB,MAAOL,EAAMR,KACblC,KAAK,OACLuE,SAAU3B,EALZ,UAOE,cAACS,EAAA,EAAD,CAAUN,MAAM,IAAhB,eACA,cAACM,EAAA,EAAD,CAAUN,MAAM,IAAhB,eACA,cAACM,EAAA,EAAD,CAAUN,MAAM,IAAhB,eACA,cAACM,EAAA,EAAD,CAAUN,MAAM,IAAhB,eACA,cAACM,EAAA,EAAD,CAAUN,MAAM,IAAhB,eACA,cAACM,EAAA,EAAD,CAAUN,MAAM,IAAhB,eACA,cAACM,EAAA,EAAD,CAAUN,MAAM,IAAhB,eACA,cAACM,EAAA,EAAD,CAAUN,MAAM,IAAhB,eACA,cAACM,EAAA,EAAD,CAAUN,MAAM,IAAhB,eACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,sBAGJ,eAACmB,EAAA,EAAD,CAAavC,UAAWG,EAAQqC,YAAhC,UACE,cAACC,EAAA,EAAD,CAAYJ,GAAG,2BAAf,oBACA,eAACK,EAAA,EAAD,CACEC,QAAQ,2BACRN,GAAG,sBACHjB,MAAOL,EAAMP,OACbnC,KAAK,SACLuE,SAAU3B,EALZ,UAOE,cAACS,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,sBAGJ,eAACmB,EAAA,EAAD,CAAavC,UAAWG,EAAQqC,YAAhC,UACE,cAACC,EAAA,EAAD,CAAYJ,GAAG,2BAAf,mBACA,eAACK,EAAA,EAAD,CACEC,QAAQ,2BACRN,GAAG,oBACHjB,MAAOL,EAAMN,KACbpC,KAAK,OACLuE,SAAU3B,EALZ,UAOE,cAACS,EAAA,EAAD,CAAUN,MAAM,KAAhB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAM,KAAhB,sBAGJ,uBACA,uBACA,uBACA,eAACmB,EAAA,EAAD,CAAavC,UAAWG,EAAQ0C,OAAhC,UACE,cAACJ,EAAA,EAAD,CAAYK,QAAQ,uBAApB,kBACA,cAACC,EAAD,CACEV,GAAG,uBACHjB,MAAOL,EAAML,KACbrC,KAAK,OACLuE,SAAU3B,OAGd,qBAAKjB,UAAU,oBAAoBqC,GAAG,oBAAtC,oEAIF,wBACErC,UAAU,iBACVqC,GAAG,iBACHJ,QAAS,kBAAMjB,EAqBzB,SAAkBD,GAUhB,GARiB,KAAfA,EAAM1C,MACS,KAAf0C,EAAMV,MACa,KAAnBU,EAAMT,UACS,KAAfS,EAAMR,MACW,KAAjBQ,EAAMP,QACS,KAAfO,EAAMN,MACS,SAAfM,EAAML,KAIN,OADAsC,SAASC,eAAe,qBAAqBlB,MAAMmB,QAAU,QACtDnC,EAEPiC,SAASC,eAAe,qBAAqBlB,MAAMmB,QAAU,OAG/D,IAAIC,EAAW,CACb9E,KAAM0C,EAAM1C,KACZgC,KAAMU,EAAMV,KACZC,SAAUS,EAAMT,SAChBG,KAAMM,EAAMR,KAAO,IAAMQ,EAAMP,OAAS,IAAMO,EAAMN,KACpDC,KAAMK,EAAML,MAEVwB,EAAUnB,EAAMJ,UAIpB,OAHAuB,EAAQtF,KAAKuG,GACbb,IAEO,2BACFvB,GADL,IAEEJ,UAAWuB,IAnDmBkB,CAASrC,KAHnC,2BAOA,wBAAQf,UAAU,iBAAiBqC,GAAG,eAAtC,0BAGA,mBAAGgB,KAAK,KAAR,SACE,wBAAQrD,UAAU,iBAAiBqC,GAAG,iBAAtC,kCAiEV,SAASC,IACuD,SAA1DU,SAASC,eAAe,gBAAgBlB,MAAMmB,SAChDF,SAASC,eAAe,gBAAgBlB,MAAMmB,QAAU,OACxDF,SAASC,eAAe,gBAAgBlB,MAAMmB,QAAU,OACxDF,SAASC,eAAe,kBAAkBlB,MAAMmB,QAAU,OAC1DF,SAASC,eAAe,eAAeK,UAAY,UACnDN,SAASC,eAAe,gBAAgBlB,MAAMmB,QAAU,QACxDF,SAASC,eAAe,kBAAkBlB,MAAMmB,QAAU,QAC1DF,SAASC,eAAe,qBAAqBlB,MAAMmB,QAAU,SAE7DF,SAASC,eAAe,gBAAgBlB,MAAMmB,QAAU,QACxDF,SAASC,eAAe,gBAAgBlB,MAAMmB,QAAU,QACxDF,SAASC,eAAe,kBAAkBlB,MAAMmB,QAAU,QAC1DF,SAASC,eAAe,gBAAgBlB,MAAMmB,QAAU,OACxDF,SAASC,eAAe,eAAeK,UAAY,YACnDN,SAASC,eAAe,kBAAkBlB,MAAMmB,QAAU,QAI9D,IAAM9C,EAAYmD,aAAW,SAACC,GAAD,MAAY,CACvChB,YAAa,CACXK,OAAQW,EAAM3E,QAAQ,GACtB4E,SAAU,KAEZC,YAAa,CACXC,UAAWH,EAAM3E,QAAQ,QAIvBkE,EAAiBa,aAAW,SAACJ,GAAD,MAAY,CAC5CK,KAAM,CACJ,YAAa,CACXF,UAAWH,EAAM3E,QAAQ,KAG7BiF,MAAO,CACLC,aAAc,EACdC,SAAU,WACVC,gBAAiBT,EAAMU,QAAQC,WAAWC,MAC1CC,OAAQ,oBACR7E,SAAU,GACV8E,QAAS,sBACTC,WAAYf,EAAMgB,YAAYC,OAAO,CAAC,eAAgB,eAEtDC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACP,UAAW,CACTZ,aAAc,EACda,YAAa,UACbC,UAAW,wCA9BMjB,CAiCnBkB,K,0IC3ViBC,E,kDAIjB,WAAY7E,GAAQ,IAAD,8BACf,cAAMA,IAED8E,UAEL,EAAKjE,MAAQ,CACTkE,OAAO,GACPC,QACI,CACA,CACIC,MAAO,WACPC,WAAY,WACZC,YAAa,4CACbC,UAAU,EACVC,MAAO,KAEX,CACIJ,MAAO,OACPC,WAAY,OACZC,YAAa,oCACbC,UAAU,EACVC,MAAO,IACPC,WAAY,SAACC,GAAD,OACR,cAACC,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACI,cAAC,IAAD,CACIC,YAAa,SAACJ,GAAD,OAAY,cAACK,EAAA,EAAD,2BAAeL,GAAf,IAAuBM,WAAY,SAC5DC,YAAY,iBACZC,OAAQ,OACR7E,MAAO,EAAKL,MAAMmF,KAAKT,EAAOU,IAAI9D,IAAI5B,KACtC2F,UAAW,EAAKrF,MAAMmF,KAAKT,EAAOU,IAAI9D,IAAIgE,SAC1CzD,SAAU,SAAC0D,GACP,IAAIC,EAAK,EAAKxF,MAAMmF,KACpBK,EAAGd,EAAOU,IAAI9D,IAAI5B,KAAO6F,EACzB,EAAKtF,SAAS,CAACkF,KAAMK,YAQ7CL,KAAM,CACF,CAAE7D,GAAI,EAAG7D,SAAU,2BAA4BiC,KAAM,IAAI+F,KAAQH,UAAU,GAC3E,CAAEhE,GAAI,EAAG7D,SAAU,0BAA2BiC,KAAM,IAAI+F,KAAQH,UAAU,GAC1E,CAAEhE,GAAI,EAAG7D,SAAU,2BAA4BiC,KAAM,IAAI+F,KAAQH,UAAU,GAC3E,CAAEhE,GAAI,EAAG7D,SAAU,2BAA4BiC,KAAM,IAAI+F,KAAQH,UAAU,GAC3E,CAAEhE,GAAI,EAAG7D,SAAU,YAAaiC,KAAM,IAAI+F,KAAQH,UAAU,GAC5D,CAAEhE,GAAI,EAAG7D,SAAU,0BAA2BiC,KAAM,IAAI+F,KAAQH,UAAU,GAC1E,CAAEhE,GAAI,EAAG7D,SAAU,aAAciC,KAAM,IAAI+F,KAAQH,UAAU,GAC7D,CAAEhE,GAAI,EAAG7D,SAAU,gBAAiBiC,KAAM,IAAI+F,KAAQH,UAAU,GAChE,CAAEhE,GAAI,EAAG7D,SAAU,yBAA0BiC,KAAM,IAAI+F,KAAQH,UAAU,KAGjF,EAAKI,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKzF,aAAe,EAAKA,aAAayF,KAAlB,gBAtDL,E,2CA0DnB,c,sBAMA,c,0BAKA,SAAcxF,GACVyF,KAAK3F,SAAS,CAACiE,OAAO/D,EAAMC,OAAOC,U,0BAGvC,SAAa+E,GACT,IAAIS,EAA4C,KAA7BD,KAAK5F,MAAMkE,OAAO4B,QAAiBV,EAAI3H,SAASsI,cAAcC,SAASJ,KAAK5F,MAAMkE,OAAO6B,eAExGE,EAAab,EAAIE,UAAYF,EAAI1F,KAAKwG,mBAAmB,QAD/C,CAAEC,QAAS,OAAQ3G,KAAM,UAAWC,OAAQ,YACqBsG,cAAcC,SAASJ,KAAK5F,MAAMkE,OAAO6B,eACxH,OAAOF,GAAgBI,I,oBAG3B,WAAU,IAAD,OAEC7G,EAAUoD,aAAW,SAACC,GAAD,MAAY,CACnCX,OAAQ,CACJA,OAAQW,EAAM3E,QAAQ,QAI9B,OACI,8BAEI,eAACF,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMK,eAAe,SAASH,WAAW,SAAST,QAAS,EAArF,UAEI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACG,EAAA,EAAD,CAAYC,QAAS,KAArB,kCAGJ,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SAEI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,qBAAKe,UAAWG,EAAQ0C,OAAxB,SACI,cAAClE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGS,WAAW,WAAvC,SAEI,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAACyD,EAAA,EAAD,CAAapD,QAAQ,SAArB,UACI,cAACsD,EAAA,EAAD,CAAYK,QAAQ,mBAApB,oBACA,cAACqE,EAAA,EAAD,CAAa9E,GAAG,mBAAmBjB,MAAOuF,KAAK5F,MAAMkE,OAAQrC,SAAU+D,KAAK1F,wBAK5F,cAAC,IAAD,CAAUmG,YAAU,EAACC,qBAAqB,EAAMC,QAAQ,eAAepB,KAAMS,KAAK5F,MAAMmF,KAAKqB,OAAOZ,KAAKF,cAAevB,QAASyB,KAAK5F,MAAMmE,QAAQhJ,KAAI,SAACsL,GAAD,mBAAC,eAClJA,GADiJ,IAEpJC,2BAA2B,OAC1BC,SAAU,EACLC,mBAAiB,EACjBC,cAAe,SAACnC,GACZ,IAAIc,EAAK,EAAKxF,MAAMmF,KACpBK,EAAGd,EAAOoC,KAAKxF,IAAIgE,SAAWZ,EAAOqC,WACrC,EAAK9G,SAAS,CAACkF,KAAMK,cAM/C,cAAC5H,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMK,eAAe,WAAWH,WAAW,SAArE,SACI,eAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIgD,MAAO,CAACgG,UAAW,SAAtC,UACI,cAAC,IAAD,CAAMrI,GAAG,IAAIqC,MAAO,CAACiG,eAAe,QAApC,SACI,cAACC,EAAA,EAAD,CAAQ9I,QAAQ,YAAY+I,QAAS,cAAC,IAAD,IAArC,6BAFR,OAOQ,cAACD,EAAA,EAAD,CAAQ9I,QAAQ,YAAY+I,QAAS,cAAC,IAAD,IAAcjG,QAAS0E,KAAKwB,WAAjE,4C,GA3IDC,IAAMC,W,iHCN1B,SAASC,KACvB,IAAD,EAC2BlK,oBAAS,GADpC,mBACWmK,EADX,KACiBC,EADjB,KAQUC,EAAY,WAEhBD,GAAO,IAVb,EAa8BpK,mBACzB,CACGsK,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,aAAc,GACdC,SAAU,KAnBlB,mBAaW3D,EAbX,KAakB4D,EAblB,KAsBUC,EAAU,SAACC,GAEf,MAAmB,KAAfA,GAIoB,KAAfA,QAAJ,GAMDhI,EAAe,SAACC,GAEpB,IAAMgI,EAAYhI,EAAMC,OAAO9C,KACzB4K,EAAa/H,EAAMC,OAAOC,MAEhC2H,EAAQ,eAGHG,EAAYD,KAKnB,OACE,sBAAKjJ,UAAY,OAAjB,UAEI,qBAAKA,UAAY,QAAjB,0BAIA,qBAAKA,UAAY,aAAjB,mBAIA,sBAAKA,UAAY,gBAAjB,UACE,cAACrB,EAAA,EAAD,CAAMqB,UAAY,eAAlB,SACE,cAAC,KAAD,MAEF,cAAC8F,EAAA,EAAD,CAAWqD,MAAQ,WAAWhK,QAAU,gBAG1C,sBAAKa,UAAY,gBAAjB,UACE,cAACrB,EAAA,EAAD,CAAMqB,UAAY,eAAlB,SACE,cAAC,KAAD,MAEF,cAAC8F,EAAA,EAAD,CAAWqD,MAAQ,WAAWhK,QAAU,gBAG1C,qBAAKa,UAAY,cAAjB,SACE,cAAC,IAAD,CAAMN,GAAK,IAAIM,UAAY,YAA3B,SACE,cAACiI,EAAA,EAAD,CAAQ9I,QAAU,YAAlB,uBAMJ,sBAAKa,UAAY,gBAAjB,UACE,cAACiI,EAAA,EAAD,CAAQhG,QA9EC,WAEfuG,GAAO,IA4ED,4BAGA,eAACY,GAAA,EAAD,CAAQb,KAAQA,EAAMvI,UAAY,OAAlC,UACE,cAACqJ,GAAA,EAAD,CAAarJ,UAAY,YAAzB,8BACE,cAACrB,EAAA,EAAD,CAAMqB,UAAY,cAAlB,SACE,cAAC,KAAD,CAAgB+B,MAAS,CAACvC,SAAU,QAExC,eAAC8J,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAmBvJ,UAAY,aAA/B,gDAGE,cAAC8F,EAAA,EAAD,CAAWqD,MAAQ,aAAahK,QAAU,WAAW0D,OAAS,QAAQ2G,MAASR,EAAQS,OAAOC,OAAOvE,GAAO,IAAKvC,SAAY3B,EAAc0I,WAAS,IACpJ,cAAC7D,EAAA,EAAD,CAAWqD,MAAQ,YAAYhK,QAAU,WAAW0D,OAAS,QAAQ2G,MAASR,EAAQS,OAAOC,OAAOvE,GAAO,IAAKvC,SAAY3B,EAAc0I,WAAS,IACnJ,cAAC7D,EAAA,EAAD,CAAWqD,MAAQ,QAAQhK,QAAU,WAAW0D,OAAS,QAAQ2G,MAASR,EAAQS,OAAOC,OAAOvE,GAAO,IAAKvC,SAAY3B,EAAc0I,WAAS,IAC/I,cAAC7D,EAAA,EAAD,CAAWqD,MAAQ,gBAAgBhK,QAAU,WAAW0D,OAAS,QAAQ2G,MAASR,EAAQS,OAAOC,OAAOvE,GAAO,IAAKvC,SAAY3B,EAAc0I,WAAS,IACvJ,cAAC7D,EAAA,EAAD,CAAWqD,MAAQ,WAAWhK,QAAU,WAAW0D,OAAS,QAAQ2G,MAASR,EAAQS,OAAOC,OAAOvE,GAAO,IAAKvC,SAAY3B,EAAc0I,WAAS,OAEtJ,eAACC,GAAA,EAAD,WACE,cAAC3B,EAAA,EAAD,CAAQhG,QAAWwG,EAAnB,mBAGA,cAACR,EAAA,EAAD,CAAQhG,QAAWwG,EAAnB,8BAON,qBAAKzI,UAAY,QAAjB,SACE,cAAC,IAAD,CAAMN,GAAK,IAAIM,UAAY,YAA3B,SACE,cAACiI,EAAA,EAAD,kC,kCChHd,SAAS4B,KACP,OACE,cAAClL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIiB,UAAW,YAA9B,SACE,cAAC7B,EAAD,MAgBN,SAAS2L,KACP,OACI,cAACnL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGiB,UAAW,YAA7B,SACE,cAAC,EAAD,MAKR,SAAS+J,KACP,OACI,cAACpL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGiB,UAAW,YAA7B,SACE,cAACsI,GAAD,MAKO,SAAS0B,GAAI9J,GAC1B,OACE,eAAC,IAAD,CAAY+J,SAAU,IAAtB,UACE,cAACC,GAAA,EAAD,CAAQlG,SAAS,SAAjB,SACE,eAACmG,GAAA,EAAD,CAAShL,QAAQ,QAAjB,UACE,cAAC,IAAD,CAAMO,GAAG,IAAI0K,KAAK,QAAlB,SACE,cAACzK,EAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACT,EAAA,EAAD,CAAYC,QAAQ,KAApB,+BAIJ,cAACR,EAAA,EAAD,CACEC,WAAS,EACTQ,UAAU,MACVK,eAAe,SACfH,WAAW,SACXU,UAAW,gBALb,SAOE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO/C,KAAK,IAAIoN,OAAK,EAACC,UAAWT,KACjC,cAAC,IAAD,CACE5M,KAAK,WACLqN,UAAW,kBApDOjJ,EAsDdnB,EAAMmB,iBAtD0BM,EAuDhCzB,EAAMyB,mBArDlB,cAAChD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGiB,UAAW,YAA7B,SACE,cAACC,EAAD,CACEoB,iBAAkBA,EAClBM,mBAAoBA,MAL5B,IAA8BN,EAAkBM,KA2DtC,cAAC,IAAD,CAAO1E,KAAK,SAASqN,UAAWR,KAChC,cAAC,IAAD,CAAO7M,KAAK,SAASqN,UAAWP,a,mEC5E1C,8BAAAQ,EAAA,sEAE+BC,MAC3B,mDACA,CACEC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGpBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAVtB,cAEMxJ,EAFN,gBAYiCmJ,MAC7B,qDACA,CACEC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGpBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UApBtB,OAYMlJ,EAZN,OAsBEmJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,GAAD,CACE3I,iBAAkBA,EAClBM,mBAAoBA,MAGxBqB,SAASC,eAAe,SA7B5B,4C,2DAiCAgI,GACAH,IAASC,OAAO,8CAAyB/H,SAASC,eAAe,W","file":"static/js/main.c641ead2.chunk.js","sourcesContent":["import GoogleMapReact from 'google-map-react';\nimport React, {useEffect, useState} from 'react';\n\n\nexport default function MapComponent() {\n    const mapStyle = require('../mapstyle.json');\n\n\n    function mapResultToCoords(api_result) {\n        let directions = [];\n        api_result.routes[0].legs[0].steps.forEach((leg, idx) => {\n            directions.push({lat: leg.start_location.lat, lng: leg.start_location.lng })\n            directions.push({lat: leg.end_location.lat, lng: leg.end_location.lng })\n        });\n        return directions;\n    }\n\n\n    function handleLoadGoogleMapsAPI(map, maps) {\n\n        let api_res = {\n            \"geocoded_waypoints\": [\n                {\n                    \"geocoder_status\": \"OK\",\n                    \"place_id\": \"ChIJ3-y273PS5okRyNNBnId51eU\",\n                    \"types\": [\n                        \"premise\"\n                    ]\n                },\n                {\n                    \"geocoder_status\": \"OK\",\n                    \"place_id\": \"ChIJqbpXyHDS5okRz_S73SlN3Vg\",\n                    \"types\": [\n                        \"premise\"\n                    ]\n                }\n            ],\n            \"routes\": [\n                {\n                    \"bounds\": {\n                        \"northeast\": {\n                            \"lat\": 42.3913474,\n                            \"lng\": -72.52621449999999\n                        },\n                        \"southwest\": {\n                            \"lat\": 42.3878964,\n                            \"lng\": -72.52742599999999\n                        }\n                    },\n                    \"copyrights\": \"Map data ©2021 Google\",\n                    \"legs\": [\n                        {\n                            \"distance\": {\n                                \"text\": \"0.3 mi\",\n                                \"value\": 428\n                            },\n                            \"duration\": {\n                                \"text\": \"5 mins\",\n                                \"value\": 300\n                            },\n                            \"end_address\": \"Murray D. Lincoln Campus Center, 1 Campus Center Way, Amherst, MA 01003, USA\",\n                            \"end_location\": {\n                                \"lat\": 42.3913474,\n                                \"lng\": -72.5265107\n                            },\n                            \"start_address\": \"Herter Hall, Amherst, MA 01002, USA\",\n                            \"start_location\": {\n                                \"lat\": 42.3878964,\n                                \"lng\": -72.52736899999999\n                            },\n                            \"steps\": [\n                                {\n                                    \"distance\": {\n                                        \"text\": \"0.2 mi\",\n                                        \"value\": 304\n                                    },\n                                    \"duration\": {\n                                        \"text\": \"3 mins\",\n                                        \"value\": 209\n                                    },\n                                    \"end_location\": {\n                                        \"lat\": 42.3905485,\n                                        \"lng\": -72.5267006\n                                    },\n                                    \"html_instructions\": \"Head <b>north</b>\",\n                                    \"polyline\": {\n                                        \"points\": \"k{uaG`otyL_@JGGQK[QeAG{@Ge@GWAc@EaAMm@SEA[KeA[\"\n                                    },\n                                    \"start_location\": {\n                                        \"lat\": 42.3878964,\n                                        \"lng\": -72.52736899999999\n                                    },\n                                    \"travel_mode\": \"WALKING\"\n                                },\n                                {\n                                    \"distance\": {\n                                        \"text\": \"135 ft\",\n                                        \"value\": 41\n                                    },\n                                    \"duration\": {\n                                        \"text\": \"1 min\",\n                                        \"value\": 32\n                                    },\n                                    \"end_location\": {\n                                        \"lat\": 42.3906333,\n                                        \"lng\": -72.52621449999999\n                                    },\n                                    \"html_instructions\": \"Turn <b>right</b>\",\n                                    \"maneuver\": \"turn-right\",\n                                    \"polyline\": {\n                                        \"points\": \"}kvaGzjtyLGq@Go@\"\n                                    },\n                                    \"start_location\": {\n                                        \"lat\": 42.3905485,\n                                        \"lng\": -72.5267006\n                                    },\n                                    \"travel_mode\": \"WALKING\"\n                                },\n                                {\n                                    \"distance\": {\n                                        \"text\": \"272 ft\",\n                                        \"value\": 83\n                                    },\n                                    \"duration\": {\n                                        \"text\": \"1 min\",\n                                        \"value\": 59\n                                    },\n                                    \"end_location\": {\n                                        \"lat\": 42.3913474,\n                                        \"lng\": -72.5265107\n                                    },\n                                    \"html_instructions\": \"Turn <b>left</b><div style=\\\"font-size:0.9em\\\">Destination will be on the left</div>\",\n                                    \"maneuver\": \"turn-left\",\n                                    \"polyline\": {\n                                        \"points\": \"mlvaGxgtyLSDaAZ_@LYJ\"\n                                    },\n                                    \"start_location\": {\n                                        \"lat\": 42.3906333,\n                                        \"lng\": -72.52621449999999\n                                    },\n                                    \"travel_mode\": \"WALKING\"\n                                }\n                            ],\n                            \"traffic_speed_entry\": [],\n                            \"via_waypoint\": []\n                        }\n                    ],\n                    \"overview_polyline\": {\n                        \"points\": \"k{uaG`otyL_@JGGm@]aCO}@IeBSs@UaBg@OaBuA`@y@X\"\n                    },\n                    \"summary\": \"\",\n                    \"warnings\": [\n                        \"Walking directions are in beta. Use caution – This route may be missing sidewalks or pedestrian paths.\"\n                    ],\n                    \"waypoint_order\": []\n                }\n            ],\n            \"status\": \"OK\"\n        };\n\n        let directions = mapResultToCoords(api_res);\n\n        const directionPath = new maps.Polyline({\n            path: directions,\n            geodesic: true,\n            strokeColor: \"#389C29\",\n            strokeOpacity: 1.0,\n            strokeWeight: 3,\n        });\n        directionPath.setMap(map);\n        // map.data.add({\n        //     // geometry: new maps.Data.LineString([\n        //     //     {\"lat\": 42.3878658, \"lng\": -72.5270293},\n        //     //     {\"lat\": 42.3854799, \"lng\": -72.5258504},\n        //     //     {\"lat\": 42.3925702, \"lng\": -72.5256119},\n        //     //     {\"lat\": 42.391686, \"lng\": -72.52609099999999}\n        //     // ])\n        //     geometry: new maps.Data.Polyline([\n        //         \"qxvaG`dtyLPbBJp@FAFADCDEDCFEFCFADABA@?JCHAHALALAB?BABABC\"\n        //         ])\n        // })\n    }\n\n\n    return (\n        // Important! Always set the container height explicitly\n            <GoogleMapReact\n                defaultCenter={{lat: 42.389564, lng: -72.526512}}\n                defaultZoom={16}\n                onGoogleApiLoaded={({ map, maps }) => handleLoadGoogleMapsAPI(map, maps)}\n                yesIWantToUseGoogleMapApiInternals\n                bootstrapURLKeys={{key: \"AIzaSyAz2oL1-IeVDxCY7lWV2ivTZ3LIpEkrWEE\"}}\n                options={{\n                    disableDefaultUI: true, // disable default map UI\n                    draggable: true, // make map draggable\n                    keyboardShortcuts: false, // disable keyboard shortcuts\n                    scaleControl: true, // allow scale control\n                    styles: mapStyle, // change default map styles\n                    draggableCursor: 'grab',\n                    draggingCursor: 'grabbing',\n            }}\n            >\n            </GoogleMapReact>\n    );\n}","import React, {useState} from \"react\";\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Edit, Person} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MapComponent from \"../components/MapComponent\";\nimport {Link} from \"react-router-dom\";\n\n\nexport default function Home() {\n\n    let [upcomingClasses, setUpcomingClasses] = useState([\n        {\n            name: 'Compsci 121',\n            startTime: '11:15 AM',\n            endTime: '12:05 PM',\n            location: 'ILC 151'\n        },\n        {\n            name: 'History 115',\n            startTime: '12:20 PM',\n            endTime: '1:10 PM',\n            location: 'Herter 212'\n        }\n    ]);\n\n    let [pitstops, setPitstops] = useState([\n        {\n            name: 'Lunch at Blue Wall',\n            startTime: '1:30 PM',\n            endTime: '2:30 PM',\n            location: 'ILC 151'\n        },\n        {\n            name: 'Study at Library',\n            startTime: '4:00 PM',\n            endTime: '6:00 PM',\n            location: 'W.E.B. Du Bois Library'\n        }\n    ]);\n\n    function showDirectionsOnMap() {\n\n        // let startPos = [42.387781, -72.527347];  // Herter hall\n        // let endPos = [42.391327, -72.526965];  // Campus center\n\n        // TODO: Make call to server and get directions\n\n        // This is what the API will normally return\n        let api_call_result = {\n            \"geocoded_waypoints\": [\n                {\n                    \"geocoder_status\": \"OK\",\n                    \"place_id\": \"ChIJ3-y273PS5okRyNNBnId51eU\",\n                    \"types\": [\n                        \"premise\"\n                    ]\n                },\n                {\n                    \"geocoder_status\": \"OK\",\n                    \"place_id\": \"ChIJqbpXyHDS5okRz_S73SlN3Vg\",\n                    \"types\": [\n                        \"premise\"\n                    ]\n                }\n            ],\n            \"routes\": [\n                {\n                    \"bounds\": {\n                        \"northeast\": {\n                            \"lat\": 42.3925702,\n                            \"lng\": -72.52233369999999\n                        },\n                        \"southwest\": {\n                            \"lat\": 42.3852591,\n                            \"lng\": -72.5270293\n                        }\n                    },\n                    \"copyrights\": \"Map data ©2021\",\n                    \"legs\": [\n                        {\n                            \"distance\": {\n                                \"text\": \"1.0 mi\",\n                                \"value\": 1582\n                            },\n                            \"duration\": {\n                                \"text\": \"5 mins\",\n                                \"value\": 273\n                            },\n                            \"end_address\": \"Murray D. Lincoln Campus Center, 1 Campus Center Way, Amherst, MA 01003, USA\",\n                            \"end_location\": {\n                                \"lat\": 42.391686,\n                                \"lng\": -72.52609099999999\n                            },\n                            \"start_address\": \"Herter Hall, Amherst, MA 01002, USA\",\n                            \"start_location\": {\n                                \"lat\": 42.3878658,\n                                \"lng\": -72.5270293\n                            },\n                            \"steps\": [\n                                {\n                                    \"distance\": {\n                                        \"text\": \"397 ft\",\n                                        \"value\": 121\n                                    },\n                                    \"duration\": {\n                                        \"text\": \"1 min\",\n                                        \"value\": 23\n                                    },\n                                    \"end_location\": {\n                                        \"lat\": 42.3870385,\n                                        \"lng\": -72.52641\n                                    },\n                                    \"html_instructions\": \"Head <b>south</b> toward <b>Presidents Dr</b>\",\n                                    \"polyline\": {\n                                        \"points\": \"e{uaG|ltyLd@Q~Ai@VIBADAB?CWAY\"\n                                    },\n                                    \"start_location\": {\n                                        \"lat\": 42.3878658,\n                                        \"lng\": -72.5270293\n                                    },\n                                    \"travel_mode\": \"DRIVING\"\n                                },\n                                {\n                                    \"distance\": {\n                                        \"text\": \"0.1 mi\",\n                                        \"value\": 179\n                                    },\n                                    \"duration\": {\n                                        \"text\": \"1 min\",\n                                        \"value\": 76\n                                    },\n                                    \"end_location\": {\n                                        \"lat\": 42.3854799,\n                                        \"lng\": -72.5258504\n                                    },\n                                    \"html_instructions\": \"Turn <b>right</b> onto <b>Presidents Dr</b>\",\n                                    \"maneuver\": \"turn-right\",\n                                    \"polyline\": {\n                                        \"points\": \"_vuaG`ityLD?lA]XGbAUl@QnA]FC\"\n                                    },\n                                    \"start_location\": {\n                                        \"lat\": 42.3870385,\n                                        \"lng\": -72.52641\n                                    },\n                                    \"travel_mode\": \"DRIVING\"\n                                },\n                                {\n                                    \"distance\": {\n                                        \"text\": \"0.2 mi\",\n                                        \"value\": 292\n                                    },\n                                    \"duration\": {\n                                        \"text\": \"1 min\",\n                                        \"value\": 40\n                                    },\n                                    \"end_location\": {\n                                        \"lat\": 42.3858297,\n                                        \"lng\": -72.52262829999999\n                                    },\n                                    \"html_instructions\": \"Turn <b>left</b> onto <b>Massachusetts Ave</b>\",\n                                    \"maneuver\": \"turn-left\",\n                                    \"polyline\": {\n                                        \"points\": \"gluaGpetyLj@Sa@wCCOS}AIm@OoACQEYGa@G]CQ?CASAS?Q?Q@G?G@M\"\n                                    },\n                                    \"start_location\": {\n                                        \"lat\": 42.3854799,\n                                        \"lng\": -72.5258504\n                                    },\n                                    \"travel_mode\": \"DRIVING\"\n                                },\n                                {\n                                    \"distance\": {\n                                        \"text\": \"0.5 mi\",\n                                        \"value\": 841\n                                    },\n                                    \"duration\": {\n                                        \"text\": \"1 min\",\n                                        \"value\": 79\n                                    },\n                                    \"end_location\": {\n                                        \"lat\": 42.3925702,\n                                        \"lng\": -72.5256119\n                                    },\n                                    \"html_instructions\": \"Turn <b>left</b> onto <b>N Pleasant St</b>\",\n                                    \"maneuver\": \"turn-left\",\n                                    \"polyline\": {\n                                        \"points\": \"mnuaGlqsyL@IBK@E[IQCw@OQAI?C?G?KBMFA?KFQPa@d@a@f@IJKPSZ}@tAA@KPKPCB]^URIHm@`@GDSJ[NoAb@[LmA^A?EBQDE@u@L_D\\\\eALK@C?cCZMBqAVk@L\"\n                                    },\n                                    \"start_location\": {\n                                        \"lat\": 42.3858297,\n                                        \"lng\": -72.52262829999999\n                                    },\n                                    \"travel_mode\": \"DRIVING\"\n                                },\n                                {\n                                    \"distance\": {\n                                        \"text\": \"489 ft\",\n                                        \"value\": 149\n                                    },\n                                    \"duration\": {\n                                        \"text\": \"1 min\",\n                                        \"value\": 55\n                                    },\n                                    \"end_location\": {\n                                        \"lat\": 42.391686,\n                                        \"lng\": -72.52609099999999\n                                    },\n                                    \"html_instructions\": \"Turn <b>left</b><div style=\\\"font-size:0.9em\\\">Destination will be on the right</div>\",\n                                    \"maneuver\": \"turn-left\",\n                                    \"polyline\": {\n                                        \"points\": \"qxvaG`dtyLPbBJp@FAFADCDEDCFEFCFADABA@?JCHAHALALAB?BABABC\"\n                                    },\n                                    \"start_location\": {\n                                        \"lat\": 42.3925702,\n                                        \"lng\": -72.5256119\n                                    },\n                                    \"travel_mode\": \"DRIVING\"\n                                }\n                            ],\n                            \"traffic_speed_entry\": [],\n                            \"via_waypoint\": []\n                        }\n                    ],\n                    \"overview_polyline\": {\n                        \"points\": \"e{uaG|ltyL`DgAHAEq@pD{@|Bo@r@WcAsHa@}CMgA?_AFk@@E[IiASg@AYJMF_BjB_BdCWb@a@b@_@\\\\u@f@o@ZkBp@gBh@{@NeFj@aD`@}Bd@\\\\tCZM\\\\OVGz@KBC\"\n                    },\n                    \"summary\": \"N Pleasant St\",\n                    \"warnings\": [],\n                    \"waypoint_order\": []\n                }\n            ],\n            \"status\": \"OK\"\n        }\n    }\n\n    return (\n        <Grid container spacing={3}>\n\n            {/*Sidebar*/}\n            <Grid item xs={4}>\n                <Grid container spacing={2}>\n\n                    {/*Student Information*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Student Information</Typography>\n\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n                                    <Grid item xs={2}>\n                                        <Person fontSize={'large'} />\n                                    </Grid>\n                                    <Grid item xs={10}>\n                                        <Typography variant={'body1'}>John Doe</Typography>\n                                        <Typography variant={'subtitle1'}>Computer Science</Typography>\n                                    </Grid>\n                                </Grid>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Upcoming Classes*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Upcoming Classes</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/classes\">\n                                            <IconButton size=\"small\" variant=\"outlined\">\n                                                <Edit />\n                                            </IconButton>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {upcomingClasses.map((classInfo, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{classInfo.name} {classInfo.startTime}</Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Pit stops*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Scheduled Pit Stops</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/stops\">\n                                            <IconButton size=\"small\" variant=\"outlined\">\n                                                <Edit />\n                                            </IconButton>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {pitstops.map((stop, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{stop.name} {stop.startTime}</Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Class Info*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Time Until Next Class</Typography>\n                                <Typography variant={'body1'}>10 Minutes</Typography>\n\n                                <br />\n\n                                <Typography variant={'h6'}>Travel Time to Next Class</Typography>\n                                <Typography variant={'body1'}>6 Minutes</Typography>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n\n\n            {/*Map*/}\n            <Grid item xs={8} className={'mapContainer'}>\n                <MapComponent />\n            </Grid>\n\n        </Grid>\n    );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nexport default function Classes(props) {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    name: \"\",\n    days: \"\",\n    building: \"\",\n    hour: \"\",\n    minute: \"\",\n    time: \"\",\n    room: \"001\",\n    classList: [],\n    classSelectDOM: [],\n    buildingSelectDOM: [],\n    keyVal: 0,\n  });\n  const handleChange = (event) => {\n    const name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n  // Loading all selectable class that are available to add\n  state.classSelectDOM = [];\n  let availableClasses = props.availableClasses.results;\n  for (let i = 0; i < availableClasses.length; i++) {\n    let selectClass = (\n      <MenuItem value={availableClasses[i].name} key={state.keyVal++}>\n        {availableClasses[i].name}\n      </MenuItem>\n    );\n    state.classSelectDOM.push(selectClass);\n  }\n  // Loading all selectable buildings that are available to add\n  state.buildingSelectDOM = [];\n  let availableBuildings = props.availableBuildings.results;\n  for (let i = 0; i < availableBuildings.length; i++) {\n    let selectBuilding = (\n      <MenuItem value={availableBuildings[i].name} key={state.keyVal++}>\n        {availableBuildings[i].name}\n      </MenuItem>\n    );\n    state.buildingSelectDOM.push(selectBuilding);\n  }\n\n  let listDOM = []; // stores class list dom\n  // Loading all of the classes\n  for (let i = 0; i < state.classList.length; i++) {\n    let classDOM = (\n      <div className=\"classes-list-item\" key={state.keyVal++}>\n        <div>\n          {state.classList[i].name}{\" \"}\n          <span style={{ float: \"right\" }}>{state.classList[i].days}</span>\n        </div>\n        <div>\n          {state.classList[i].building}{\" \"}\n          <span style={{ float: \"right\" }}>{state.classList[i].time}</span>\n        </div>\n        <div>Room {state.classList[i].room}</div>\n        <button\n          className=\"classes-button\"\n          onClick={() => setState(removeClass(state, i))}\n        >\n          Remove\n        </button>\n      </div>\n    );\n    listDOM.push(classDOM);\n  }\n\n  // No classes loaded check\n  if (listDOM.length === 0) {\n    listDOM = (\n      <div className=\"classes-list-item\">\n        <div>No classes scheduled :(</div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"classes-dashboard\">\n        <div>\n          <span className=\"classes-title\">Class Schedule</span>\n          <button\n            className=\"classes-button\"\n            id=\"classes-add\"\n            onClick={toggleAddMenu}\n          >\n            Add Class\n          </button>\n        </div>\n        <div className=\"classes-list\" id=\"classes-list\">\n          {listDOM}\n        </div>\n        <div className=\"classes-menu\" id=\"classes-menu\">\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Class</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-name\"\n              value={state.name}\n              name=\"name\"\n              onChange={handleChange}\n            >\n              {state.classSelectDOM}\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Days</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-days\"\n              value={state.days}\n              name=\"days\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"Monday, Wednesday, Friday\">\n                Monday, Wednesday, Friday\n              </MenuItem>\n              <MenuItem value=\"Monday, Wednesday\">Monday, Wednesday</MenuItem>\n              <MenuItem value=\"Tuesday, Thursday\">Tuesday, Thursday</MenuItem>\n              <MenuItem value=\"Monday\">Monday</MenuItem>\n              <MenuItem value=\"Tuesday\">Tuesday</MenuItem>\n              <MenuItem value=\"Wednesday\">Wednesday</MenuItem>\n              <MenuItem value=\"Thursday\">Thursday</MenuItem>\n              <MenuItem value=\"Friday\">Friday</MenuItem>\n              <MenuItem value=\"Saturday\">Saturday</MenuItem>\n              <MenuItem value=\"Sunday\">Sunday</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Building</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-building\"\n              value={state.building}\n              name=\"building\"\n              onChange={handleChange}\n            >\n              {state.buildingSelectDOM}\n            </Select>\n          </FormControl>\n          <br />\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Hour</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-hour\"\n              value={state.hour}\n              name=\"hour\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"1\">1</MenuItem>\n              <MenuItem value=\"2\">2</MenuItem>\n              <MenuItem value=\"3\">3</MenuItem>\n              <MenuItem value=\"4\">4</MenuItem>\n              <MenuItem value=\"5\">5</MenuItem>\n              <MenuItem value=\"6\">6</MenuItem>\n              <MenuItem value=\"7\">7</MenuItem>\n              <MenuItem value=\"8\">8</MenuItem>\n              <MenuItem value=\"9\">9</MenuItem>\n              <MenuItem value=\"10\">10</MenuItem>\n              <MenuItem value=\"11\">11</MenuItem>\n              <MenuItem value=\"12\">12</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Minute</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-minute\"\n              value={state.minute}\n              name=\"minute\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"00\">00</MenuItem>\n              <MenuItem value=\"05\">05</MenuItem>\n              <MenuItem value=\"10\">10</MenuItem>\n              <MenuItem value=\"15\">15</MenuItem>\n              <MenuItem value=\"20\">20</MenuItem>\n              <MenuItem value=\"25\">25</MenuItem>\n              <MenuItem value=\"30\">30</MenuItem>\n              <MenuItem value=\"35\">35</MenuItem>\n              <MenuItem value=\"40\">40</MenuItem>\n              <MenuItem value=\"45\">45</MenuItem>\n              <MenuItem value=\"50\">50</MenuItem>\n              <MenuItem value=\"55\">55</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">AM/PM</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-time\"\n              value={state.time}\n              name=\"time\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"AM\">AM</MenuItem>\n              <MenuItem value=\"PM\">PM</MenuItem>\n            </Select>\n          </FormControl>\n          <br />\n          <br />\n          <br />\n          <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"classes-menu-roomNum\">Room</InputLabel>\n            <BootstrapInput\n              id=\"classes-menu-roomNum\"\n              value={state.room}\n              name=\"room\"\n              onChange={handleChange}\n            />\n          </FormControl>\n          <div className=\"classes-add-error\" id=\"classes-add-error\">\n            Please make sure that all items have been selected.\n          </div>\n        </div>\n        <button\n          className=\"classes-button\"\n          id=\"classes-create\"\n          onClick={() => setState(addClass(state))}\n        >\n          Add New Class\n        </button>\n        <button className=\"classes-button\" id=\"classes-save\">\n          Save Classes\n        </button>\n        <a href=\"#/\">\n          <button className=\"classes-button\" id=\"classes-return\">\n            Return to Map\n          </button>\n        </a>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Adds a class\n * @param state - current component state\n */\nfunction addClass(state) {\n  let validClass =\n    state.name !== \"\" &&\n    state.days !== \"\" &&\n    state.building !== \"\" &&\n    state.hour !== \"\" &&\n    state.minute !== \"\" &&\n    state.time !== \"\" &&\n    state.room !== \"room\";\n\n  if (!validClass) {\n    document.getElementById(\"classes-add-error\").style.display = \"block\";\n    return state;\n  } else {\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\n  }\n\n  let newClass = {\n    name: state.name,\n    days: state.days,\n    building: state.building,\n    time: state.hour + \":\" + state.minute + \" \" + state.time,\n    room: state.room,\n  };\n  let newList = state.classList;\n  newList.push(newClass);\n  toggleAddMenu();\n\n  return {\n    ...state,\n    classList: newList,\n  };\n}\n\n/**\n * Removes a class\n * @param state - current component state\n * @param i - index in classList array to reomve\n */\nfunction removeClass(state, i) {\n  let newList = state.classList;\n  newList.splice(i, 1);\n\n  return {\n    ...state,\n    classList: newList,\n  };\n}\n\n/**\n *  Toggles Adding New Class Menu\n */\nfunction toggleAddMenu() {\n  if (document.getElementById(\"classes-list\").style.display !== \"none\") {\n    document.getElementById(\"classes-list\").style.display = \"none\";\n    document.getElementById(\"classes-save\").style.display = \"none\";\n    document.getElementById(\"classes-return\").style.display = \"none\";\n    document.getElementById(\"classes-add\").innerHTML = \"Go Back\";\n    document.getElementById(\"classes-menu\").style.display = \"block\";\n    document.getElementById(\"classes-create\").style.display = \"block\";\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\n  } else {\n    document.getElementById(\"classes-list\").style.display = \"block\";\n    document.getElementById(\"classes-save\").style.display = \"block\";\n    document.getElementById(\"classes-return\").style.display = \"block\";\n    document.getElementById(\"classes-menu\").style.display = \"none\";\n    document.getElementById(\"classes-add\").innerHTML = \"Add Class\";\n    document.getElementById(\"classes-create\").style.display = \"none\";\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n","import React from \"react\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {DataGrid} from \"@material-ui/data-grid\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport MapIcon from '@material-ui/icons/Map';\nimport SaveIcon from '@material-ui/icons/Save';\nimport KeyboardTimePicker from '@material-ui/lab/DateTimePicker';\nimport {CardContent, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\n\nexport default class Stops extends React.Component {\n\n\n\n    constructor(props) {\n        super(props);\n\n        this.getData();\n\n        this.state = {\n            search:\"\",\n            columns:\n                [\n                {\n                    field: 'location',\n                    headerName: 'Location',\n                    description: 'This column has the location of pit stops',\n                    sortable: true,\n                    width: 300\n                },\n                {\n                    field: 'time',\n                    headerName: 'Time',\n                    description: 'This column has the time selector',\n                    sortable: false,\n                    width: 300,\n                    renderCell: (params) => (\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <KeyboardTimePicker\n                                renderInput={(params) => <TextField {...params} helperText={null}/>}\n                                inputFormat=\"EEEE - hh:mm a\"\n                                openTo={\"date\"}\n                                value={this.state.rows[params.row.id].time}\n                                disabled={!this.state.rows[params.row.id].selected}\n                                onChange={(newValue) => {\n                                    let rs = this.state.rows;\n                                    rs[params.row.id].time = newValue;\n                                    this.setState({rows: rs});\n\n                                }}\n                            />\n                        </LocalizationProvider>\n                    )\n                }\n                ],\n            rows: [\n                { id: 0, location: 'Worcester Dining Commons', time: new Date(), selected: false},\n                { id: 1, location: 'Franklin Dining Commons', time: new Date(), selected: false},\n                { id: 2, location: 'Hampshire Dining Commons', time: new Date(), selected: false},\n                { id: 3, location: 'Berkshire Dining Commons', time: new Date(), selected: false},\n                { id: 4, location: 'Blue Wall', time: new Date(), selected: false},\n                { id: 5, location: 'Procrastination Station', time: new Date(), selected: false},\n                { id: 6, location: 'Roots Cafe', time: new Date(), selected: false},\n                { id: 7, location: 'Campus Center', time: new Date(), selected: false},\n                { id: 8, location: 'W.E.B. Du Bois Library', time: new Date(), selected: false}\n            ]\n        };\n        this.searchFilter = this.searchFilter.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n\n    getData() {\n        // Once backend is hooked up\n        // Retrieve user selected data and fill this.state.rows\n    }\n\n\n    saveData() {\n        // Once the backend is hooked up\n        // Send this.state.selected to it for database storage\n    }\n\n    handleChange (event) {\n        this.setState({search:event.target.value});\n    };\n\n    searchFilter(row) {\n        let stringSearch = this.state.search.trim() === \"\" || row.location.toLowerCase().includes(this.state.search.toLowerCase());\n        let options = { weekday: 'long', hour: 'numeric', minute: 'numeric' };\n        let timeSearch = row.selected && row.time.toLocaleDateString(\"en-US\", options).toLowerCase().includes(this.state.search.toLowerCase());\n        return stringSearch || timeSearch;\n    }\n\n    render() {\n\n        const classes = makeStyles((theme) => ({\n            margin: {\n                margin: theme.spacing(1),\n            },\n        }));\n\n        return (\n            <div>\n\n                <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n\n                    <Grid item xs={12}>\n                        <Typography variant={'h4'}>Schedule Pit Stops</Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n\n                        <Card>\n                            <CardContent>\n                                <div className={classes.margin}>\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                        <Grid item>\n                                            <FormControl variant=\"filled\">\n                                                <InputLabel htmlFor=\"component-filled\">Search</InputLabel>\n                                                <FilledInput id=\"component-filled\" value={this.state.search} onChange={this.handleChange} />\n                                            </FormControl>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                                <DataGrid autoHeight disableColumnFilter={true} density=\"headerHeight\" rows={this.state.rows.filter(this.searchFilter)} columns={this.state.columns.map((column) => ({\n                                    ...column,\n                                    disableClickEventBubbling: true,\n                                }))} pageSize={5}\n                                          checkboxSelection\n                                          onRowSelected={(params) => {\n                                              let rs = this.state.rows;\n                                              rs[params.data.id].selected = params.isSelected;\n                                              this.setState({rows: rs});\n                                          }}/>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n                            <Grid item xs={12} style={{textAlign: \"right\"}}>\n                                <Link to=\"/\" style={{textDecoration:\"none\"}}>\n                                    <Button variant=\"contained\" endIcon={<MapIcon />}>\n                                        Return to Map\n                                    </Button>\n                                </Link>\n                                &nbsp;\n                                    <Button variant=\"contained\" endIcon={<SaveIcon />} onClick={this.saveData()}>\n                                        Save Pit Stops\n                                    </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </div>\n        );\n    }\n}\n","import React, {useState} from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport {Link} from \"react-router-dom\";\n\nexport default function Login() \n{\n    const [open, isOpen] = useState(false);\n\n    const openForm = () => \n    {\n      isOpen(true);\n    };\n\n    const closeForm = () =>\n    {\n      isOpen(false);\n    }\n\n    const [field, setField] = useState\n    ({\n        firstName: \"\",\n        lastName: \"\",\n        major: \"\",\n        emailAddress: \"\",\n        password: \"\"\n    });\n\n    const isEmpty = (fieldValue) =>\n    {\n      if (fieldValue === \"\") \n      {\n        return true;\n      }\n      else if (fieldValue !== \"\")\n      {\n        return false;\n      }\n    }\n\n    const handleChange = (event) =>\n    {\n      const fieldName = event.target.name;\n      const fieldValue = event.target.value;\n\n      setField\n      (\n        { \n          [fieldName]: fieldValue\n        }\n      );\n    };\n\n    return (\n      <div className = \"page\">\n\n          <div className = \"title\">\n              UMap Amherst\n          </div>\n\n          <div className = \"loginTitle\">\n              Login\n          </div>\n\n          <div className = \"usernameField\">\n            <Grid className = \"usernameIcon\">\n              <PersonIcon/>\n            </Grid>\n            <TextField label = \"Username\" variant = \"outlined\"/>\n          </div>\n\n          <div className = \"passwordField\">\n            <Grid className = \"passwordIcon\">\n              <LockIcon/>\n            </Grid>\n            <TextField label = \"Password\" variant = \"outlined\"/>\n          </div>\n\n          <div className = \"loginButton\">\n            <Link to = \"/\" className = \"loginLink\">\n              <Button variant = \"contained\">\n                Login\n              </Button>\n            </Link>\n          </div>\n\n          <div className = \"createAccount\">\n            <Button onClick = {openForm}>\n              Create Account \n            </Button>\n            <Dialog open = {open} className = \"form\">  \n              <DialogTitle className = \"formTitle\"> Create Account </DialogTitle>\n                <Grid className = \"contactIcon\">\n                  <AccountBoxIcon style = {{fontSize: 45}}/>\n                </Grid>\n              <DialogContent>\n                <DialogContentText className = \"formHeader\">\n                  Please fill in at least one field.\n                </DialogContentText>\n                  <TextField label = \"First Name\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {handleChange} fullWidth/>\n                  <TextField label = \"Last Name\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {handleChange} fullWidth/>\n                  <TextField label = \"Major\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {handleChange} fullWidth/>\n                  <TextField label = \"Email Address\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {handleChange} fullWidth/>\n                  <TextField label = \"Password\" variant = \"outlined\" margin = \"dense\" error = {isEmpty(Object.values(field)[0])} onChange = {handleChange} fullWidth/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick = {closeForm}>\n                  Close\n                </Button>\n                <Button onClick = {closeForm}>\n                  Sign Up\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n\n          <div className = \"guest\">\n            <Link to = \"/\" className = \"guestLink\">\n              <Button>\n                Use as Guest\n              </Button>\n            </Link>\n          </div>\n\n      </div>\n    );\n}","import React from \"react\";\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Classes from \"./pages/Classes\";\nimport Stops from \"./pages/Stops\";\nimport Login from \"./pages/Login\";\nimport {\n  AppBar,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { Map as MapIcon } from \"@material-ui/icons\";\n\nfunction homePageComponent() {\n  return (\n    <Grid item xs={10} className={\"innerPage\"}>\n      <Home />\n    </Grid>\n  );\n}\n\nfunction classesPageComponent(availableClasses, availableBuildings) {\n  return (\n    <Grid item xs={8} className={\"innerPage\"}>\n      <Classes\n        availableClasses={availableClasses}\n        availableBuildings={availableBuildings}\n      />\n    </Grid>\n  );\n}\n\nfunction stopsPageComponent() {\n  return (\n      <Grid item xs={8} className={'innerPage'}>\n        <Stops />\n      </Grid>\n  )\n}\n\nfunction loginPageComponent() {\n  return (\n      <Grid item xs={4} className={'innerPage'}>\n        <Login />\n      </Grid>\n  )\n}\n\nexport default function App(props) {\n  return (\n    <HashRouter basename={\"/\"}>\n      <AppBar position=\"sticky\">\n        <Toolbar variant=\"dense\">\n          <Link to=\"/\" edge=\"start\">\n            <IconButton>\n              <MapIcon />\n            </IconButton>\n          </Link>\n          <Typography variant=\"h6\">UMap Amherst</Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={\"pageContainer\"}\n      >\n        <Switch>\n          <Route path=\"/\" exact component={homePageComponent} />\n          <Route\n            path=\"/classes\"\n            component={() =>\n              classesPageComponent(\n                props.availableClasses,\n                props.availableBuildings\n              )\n            }\n          />\n          <Route path=\"/stops\" component={stopsPageComponent} />\n          <Route path=\"/login\" component={loginPageComponent} />\n        </Switch>\n      </Grid>\n    </HashRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./main.css\";\nimport \"./classes.css\";\nimport \"./login.css\";\n\nasync function fetchData() {\n  // Loads available classes to select from SQL\n  let availableClasses = await fetch(\n    \"https://cs326-umap-amherst.herokuapp.com/classes\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    }\n  ).then((res) => res.json());\n  // Loads available buildings to select from SQL\n  let availableBuildings = await fetch(\n    \"https://cs326-umap-amherst.herokuapp.com/buildings\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    }\n  ).then((res) => res.json());\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App\n        availableClasses={availableClasses}\n        availableBuildings={availableBuildings}\n      />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n}\n\nfetchData();\nReactDOM.render(<span>Loading...</span>, document.getElementById(\"root\"));\n"],"sourceRoot":""}