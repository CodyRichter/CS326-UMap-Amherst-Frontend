{"version":3,"sources":["components/MapComponent.js","pages/Home.js","pages/Classes.js","pages/Stops.js","pages/Login.js","App.js","index.js"],"names":["MapComponent","props","mapStyle","require","useState","map","setMap","maps","setMaps","useEffect","route","directions","api_result","routes","legs","steps","forEach","leg","idx","push","lat","start_location","lng","end_location","mapResultToCoords","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","handleLoadGoogleMapsAPI","defaultCenter","defaultZoom","onGoogleApiLoaded","yesIWantToUseGoogleMapApiInternals","bootstrapURLKeys","key","options","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","styles","draggableCursor","draggingCursor","Home","classname","time","buildingname","room","upcomingClasses","setUpcomingClasses","location","pitstops","setPitstops","timeUntilNextClass","setTimeUntilNextClass","setRoute","userData","localStorage","getItem","JSON","parse","userID","id","undefined","axios","request","method","url","then","res","data","catch","err","console","log","Grid","container","spacing","item","xs","Card","CardContent","Typography","variant","direction","justify","alignItems","Person","fontSize","email","justifyContent","to","IconButton","size","Edit","length","classInfo","stop","className","Classes","classes","useStyles","a","userEmail","split","Number","isInteger","get","availableClasses","availableBuildings","params","currentClasses","classIDs","results","obj","class","classData","i","newClassData","buildingNames","building","newData","name","newClassList","days","monday","tuesday","wednesday","thursday","friday","newClass","setState","state","loaded","validID","classList","fetchData","hour","minute","classSelectDOM","buildingSelectDOM","keyVal","handleChange","event","target","value","selectClass","MenuItem","selectBuilding","listDOM","classDOM","style","float","onClick","newList","splice","removeClass","Button","endIcon","toggleAddMenu","textAlign","FormControl","formControl","InputLabel","Select","labelId","onChange","margin","htmlFor","BootstrapInput","document","getElementById","display","addClass","update","fetch","headers","json","ids","body","stringify","error","save","href","innerHTML","makeStyles","theme","minWidth","selectEmpty","marginTop","withStyles","root","input","borderRadius","position","backgroundColor","palette","background","paper","border","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","Stops","getData","userJSON","user","selectedStops","selectedRows","selectedRowIds","newRows","Date","filter","b","rows","selected","search","columns","field","headerName","description","sortable","width","renderCell","LocalizationProvider","dateAdapter","AdapterDateFns","renderInput","TextField","helperText","inputFormat","openTo","row","disabled","newValue","rs","searchFilter","bind","saveData","this","post","response","stringSearch","trim","toLowerCase","includes","timeSearch","toLocaleDateString","weekday","FilledInput","autoHeight","disableColumnFilter","density","column","disableClickEventBubbling","pageSize","checkboxSelection","selectionModel","onRowSelected","isSelected","components","NoRowsOverlay","CustomNoRowsOverlay","textDecoration","React","Component","Login","open","isOpen","closeForm","setId","firstName","setFirstName","lastName","setLastName","major","setMajor","emailAddress","setEmailAddress","password","setPassword","loginEmail","setLoginEmail","loginPassword","setLoginPassword","label","type","loginUser","setItem","Dialog","DialogTitle","DialogContent","DialogContentText","fullWidth","DialogActions","classesPageComponent","homePageComponent","stopsPageComponent","loginPageComponent","App","basename","AppBar","Toolbar","edge","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c0cad15e.chunk.js","sourcesContent":["import GoogleMapReact from 'google-map-react';\nimport React, {useEffect, useState} from 'react';\n\n\nexport default function MapComponent(props) {\n    const mapStyle = require('../mapstyle.json');\n\n    let [map, setMap] = useState(null);\n    let [maps, setMaps] = useState(null);\n\n    useEffect( () => {\n        handleLoadGoogleMapsAPI(map, maps);\n    }, [props.route]);\n\n    function mapResultToCoords(api_result) {\n        let directions = [];\n        api_result.routes[0].legs[0].steps.forEach((leg, idx) => {\n            directions.push({lat: leg.start_location.lat, lng: leg.start_location.lng})\n            directions.push({lat: leg.end_location.lat, lng: leg.end_location.lng})\n        });\n        return directions;\n    }\n\n    function handleLoadGoogleMapsAPI() {\n        if (map && maps && props.route) {\n\n            if (!props.route) {\n                return;\n            }\n\n            let directions = mapResultToCoords(props.route);\n\n            const directionPath = new maps.Polyline({\n                path: directions,\n                geodesic: true,\n                strokeColor: \"#389C29\",\n                strokeOpacity: 1.0,\n                strokeWeight: 3,\n            });\n            directionPath.setMap(map);\n        }\n    }\n\n\n    return (\n        // Important! Always set the container height explicitly\n        <GoogleMapReact\n            defaultCenter={{lat: 42.389564, lng: -72.526512}}\n            defaultZoom={16}\n            onGoogleApiLoaded={({map, maps}) => {setMap(map); setMaps(maps);}}\n            yesIWantToUseGoogleMapApiInternals\n            bootstrapURLKeys={{key: \"AIzaSyAz2oL1-IeVDxCY7lWV2ivTZ3LIpEkrWEE\"}}\n            options={{\n                disableDefaultUI: true, // disable default map UI\n                draggable: true, // make map draggable\n                keyboardShortcuts: false, // disable keyboard shortcuts\n                scaleControl: true, // allow scale control\n                styles: mapStyle, // change default map styles\n                draggableCursor: 'grab',\n                draggingCursor: 'grabbing',\n            }}\n        >\n        </GoogleMapReact>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Edit, Person} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MapComponent from \"../components/MapComponent\";\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nexport default function Home() {\n\n    let [upcomingClasses, setUpcomingClasses] = useState([\n        {\n            classname: 'Today',\n            time: 'No Upcoming Classes',\n            buildingname: '',\n            room: '',\n        }\n    ]);\n\n    let [pitstops, setPitstops] = useState([\n        {\n            time: '',\n            location: 'No Pitstops'\n        }\n    ]);\n\n    let [timeUntilNextClass, setTimeUntilNextClass] = useState('No more classes today.');\n\n    let [route, setRoute] = useState(null);\n\n    useEffect(() => {\n        let userData = localStorage.getItem('user') && localStorage.getItem('user')[0] ? JSON.parse(localStorage.getItem('user'))[0] : {};\n        let userID = userData ? userData.id : -1;\n        if (userID !== -1 && userID !== undefined) {\n            axios.request({\n                method: 'get',\n                url: 'https://cs326-umap-amherst.herokuapp.com/home?userID=' + userID\n            }).then((res) => {\n                setUpcomingClasses(res.data['classes']);\n                setPitstops(res.data['stops']);\n                setTimeUntilNextClass(res.data['timeUntilNextClass']);\n                setRoute(res.data['route']);\n            }).catch((err) => {\n                console.log('Unable to connect to backend to load data.')\n            });\n        } else {\n            console.log('No user found. Current user data' + localStorage.getItem('user'))\n        }\n\n    }, [])\n\n    return (\n        <Grid container spacing={3}>\n\n            {/*Sidebar*/}\n            <Grid item xs={4}>\n                <Grid container spacing={2}>\n\n                    {/*Student Information*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Account Information</Typography>\n\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n                                    <Grid item xs={2}>\n                                        <Person fontSize={'large'} />\n                                    </Grid>\n                                    <Grid item xs={10}>\n                                        {localStorage.getItem('user') && localStorage.getItem('user')[0] ?\n                                            <Typography variant={'body1'}>{JSON.parse(localStorage.getItem('user'))[0].email}</Typography>\n                                            :\n                                            <Typography variant={'body1'}>Not Logged In.</Typography>\n                                        }\n\n                                    </Grid>\n                                </Grid>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Upcoming Classes*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Upcoming Classes</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/classes\">\n                                            <IconButton size=\"small\" variant=\"outlined\">\n                                                <Edit />\n                                            </IconButton>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {upcomingClasses.length === 0 &&\n                                    <Typography variant={'body1'}>No more classes today.</Typography>\n                                }\n                                {upcomingClasses.map((classInfo, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{classInfo.classname}: {classInfo.buildingname} {classInfo.room}  <b>{classInfo.time}</b></Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Pit stops*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Scheduled Pit Stops</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/stops\">\n                                            <IconButton size=\"small\" variant=\"outlined\">\n                                                <Edit />\n                                            </IconButton>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {pitstops.length === 0 &&\n                                <Typography variant={'body1'}>No more pitstops today.</Typography>\n                                }\n                                {pitstops.map((stop, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{stop.location}  <b>{stop.time}</b></Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Class Info*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Time Until Next Class</Typography>\n                                <Typography variant={'body1'}>{timeUntilNextClass}</Typography>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n\n\n            {/*Map*/}\n            <Grid item xs={8} className={'mapContainer'}>\n                <MapComponent route={route} />\n            </Grid>\n\n        </Grid>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport MapIcon from \"@material-ui/icons/Map\";\nimport axios from 'axios'\n\nexport default function Classes() {\n  const classes = useStyles();\n\n  useEffect(() => {\n    async function fetchData() {\n      \n      let userData = localStorage.getItem('user') && localStorage.getItem('user')[0] ? JSON.parse(localStorage.getItem('user'))[0] : {};\n      let userID = userData ? userData.id : -1;\n      let userEmail = userData ? userData.email.split(\"@\")[0] : \"\";\n      console.log(userData);\n      \n      if (Number.isInteger(userID) && userID >=0) {\n        // Loads available classes to select from SQL\n        let availableClasses = await axios.get('https://cs326-umap-amherst.herokuapp.com/classOptions');\n\n        // Loads available buildings to select from SQL\n        let availableBuildings = await axios.get('https://cs326-umap-amherst.herokuapp.com/buildings');\n\n        // Loads current classes from database\n        let currentClasses = await axios.get('https://cs326-umap-amherst.herokuapp.com/userclasses', {params:{userID:userID}});\n        \n        let classIDs = [];\n        currentClasses.data.results.map((obj) => classIDs.push(obj.class));\n\n        let classData = [];\n        for (let i = 0; i < classIDs.length; i++) {\n          let newClassData = await axios.get('https://cs326-umap-amherst.herokuapp.com/classes', {params:{id:classIDs[i]}});\n          classData.push(newClassData.data.results[0]);\n        }\n\n        let buildingNames = [];\n        for (let i = 0; i < classData.length; i++) {\n          let newData = await axios.get('https://cs326-umap-amherst.herokuapp.com/buildings', {params:{id:classData[i].building}});\n          buildingNames.push(newData.data.results[0].name);\n        }\n\n        let newClassList = [];\n        for (let i = 0; i < classData.length; i++) {\n          let days = \"\";\n          if (classData[i].monday === true) days += \"Mon \";\n          if (classData[i].tuesday === true) days += \"Tues \";\n          if (classData[i].wednesday === true) days += \"Wed \";\n          if (classData[i].thursday === true) days += \"Thurs \";\n          if (classData[i].friday === true) days += \"Fri \";\n          let newClass = {\n            name: classData[i].name,\n            room: classData[i].room,\n            time: classData[i].time,\n            building: buildingNames[i],\n            days: days,\n          };\n          newClassList.push(newClass);\n        }\n      \n\n        setState({\n          ...state,\n          loaded: true,\n          validID: true,\n          userID: userID,\n          email: userEmail,\n          availableClasses: availableClasses.data.results,\n          availableBuildings: availableBuildings.data.results,\n          currentClasses: currentClasses.results,\n          classList: newClassList,\n        });\n      } else {\n        setState({\n          ...state,\n          loaded: true,\n          validID: false,\n          userID: userID,\n        });\n      }\n    }\n    if (state.loaded === false && state.validID === false) {\n      fetchData();\n    }\n  });\n\n  const [state, setState] = useState({\n    name: \"\",\n    days: \"\",\n    building: \"\",\n    hour: \"\",\n    minute: \"\",\n    time: \"\",\n    room: \"001\",\n    classList: [],\n    classSelectDOM: [],\n    buildingSelectDOM: [],\n    availableClasses: [],\n    availableBuildings: [],\n    currentClasses: [],\n    keyVal: 0,\n    loaded: false,\n    validID: false,\n    userID: 0,\n    email: \"\",\n  });\n  const handleChange = (event) => {\n    const name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n  // Loading all selectable class that are available to add\n  state.classSelectDOM = [];\n  for (let i = 0; i < state.availableClasses.length; i++) {\n    let selectClass = (\n      <MenuItem value={state.availableClasses[i].name} key={state.keyVal++}>\n        {state.availableClasses[i].name}\n      </MenuItem>\n    );\n    state.classSelectDOM.push(selectClass);\n  }\n  // Loading all selectable buildings that are available to add\n  state.buildingSelectDOM = [];\n  for (let i = 0; i < state.availableBuildings.length; i++) {\n    let selectBuilding = (\n      <MenuItem value={state.availableBuildings[i].name} key={state.keyVal++}>\n        {state.availableBuildings[i].name}\n      </MenuItem>\n    );\n    state.buildingSelectDOM.push(selectBuilding);\n  }\n\n  let listDOM = []; // stores class list dom\n  // Loading all of the classes\n  for (let i = 0; i < state.classList.length; i++) {\n    let classDOM = (\n      <div className=\"classes-list-item\" key={state.keyVal++}>\n        <div>\n          {state.classList[i].name}{\" \"}\n          <span style={{ float: \"right\" }}>{state.classList[i].days}</span>\n        </div>\n        <div>\n          {state.classList[i].building}{\" \"}\n          <span style={{ float: \"right\" }}>{state.classList[i].time}</span>\n        </div>\n        <div>Room {state.classList[i].room}</div>\n        <button\n          className=\"classes-button\"\n          onClick={() => setState(removeClass(state, i))}\n        >\n          Remove\n        </button>\n      </div>\n    );\n    listDOM.push(classDOM);\n  }\n\n  // No classes loaded check\n  if (listDOM.length === 0) {\n    listDOM = (\n      <div className=\"classes-list-item\">\n        <div>No classes scheduled :(</div>\n        <br />\n        <br />\n        <div>Try refreshing the page? Or add class through the add button!</div>\n          <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-return\" onClick={()=>setState({...state, loaded:false})}>\n            Refresh\n          </Button>\n      </div>\n    );\n  }\n\n  if (state.loaded === false) {\n    return (\n      <div>\n        <div className=\"classes-dashboard\">\n          <span className=\"classes-title\">Class Schedule</span>\n          <div className=\"classes-list\" id=\"classes-list\">\n            <div className=\"classes-list-item\">\n              <div>LOADING DATA...</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (state.loaded === true && state.validID === false) {\n    return (\n      <div>\n        <div className=\"classes-dashboard\">\n          <span className=\"classes-title\">Class Schedule</span>\n          <div className=\"classes-list\" id=\"classes-list\">\n            <div className=\"classes-list-item\">\n              <div>Invalid login credentials.</div>\n              <br />\n              <br />\n              <div>Please login again.</div>\n                <Link to=\"/login\">\n                  <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-return\">\n                    Login\n                  </Button>\n                </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"classes-dashboard\">\n        <div>\n          <span className=\"classes-title\">Class Schedule</span>\n          <button\n            className=\"classes-button\"\n            id=\"classes-add\"\n            onClick={toggleAddMenu}\n          >\n            Add Class\n          </button>\n        </div>\n        <div className=\"classes-list\" id=\"classes-list\">\n          <div className=\"classes-list-item\">\n            <div style={{ textAlign: \"center\" }}>\n              Welcome {state.email} (#{state.userID})\n            </div>\n            <div style={{ textAlign: \"center\" }}>\n              Showing {state.classList.length} Selected Classes\n            </div>\n          </div>\n          {listDOM}\n        </div>\n        <div className=\"classes-menu\" id=\"classes-menu\">\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Class</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-name\"\n              value={state.name}\n              name=\"name\"\n              onChange={handleChange}\n            >\n              {state.classSelectDOM}\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Days</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-days\"\n              value={state.days}\n              name=\"days\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"Mon Wed Fri\">Mon Wed Fri</MenuItem>\n              <MenuItem value=\"Mon Wed\">Mon Wed</MenuItem>\n              <MenuItem value=\"Tues Thurs\">Tues Thurs</MenuItem>\n              <MenuItem value=\"Mon\">Mon</MenuItem>\n              <MenuItem value=\"Tues\">Tues</MenuItem>\n              <MenuItem value=\"Wed\">Wed</MenuItem>\n              <MenuItem value=\"Thurs\">Thurs</MenuItem>\n              <MenuItem value=\"Fri\">Fri</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Building</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-building\"\n              value={state.building}\n              name=\"building\"\n              onChange={handleChange}\n            >\n              {state.buildingSelectDOM}\n            </Select>\n          </FormControl>\n          <br />\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Hour</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-hour\"\n              value={state.hour}\n              name=\"hour\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"1\">1</MenuItem>\n              <MenuItem value=\"2\">2</MenuItem>\n              <MenuItem value=\"3\">3</MenuItem>\n              <MenuItem value=\"4\">4</MenuItem>\n              <MenuItem value=\"5\">5</MenuItem>\n              <MenuItem value=\"6\">6</MenuItem>\n              <MenuItem value=\"7\">7</MenuItem>\n              <MenuItem value=\"8\">8</MenuItem>\n              <MenuItem value=\"9\">9</MenuItem>\n              <MenuItem value=\"10\">10</MenuItem>\n              <MenuItem value=\"11\">11</MenuItem>\n              <MenuItem value=\"12\">12</MenuItem>\n              <MenuItem value=\"13\">13</MenuItem>\n              <MenuItem value=\"14\">14</MenuItem>\n              <MenuItem value=\"15\">15</MenuItem>\n              <MenuItem value=\"16\">16</MenuItem>\n              <MenuItem value=\"17\">17</MenuItem>\n              <MenuItem value=\"18\">18</MenuItem>\n              <MenuItem value=\"19\">19</MenuItem>\n              <MenuItem value=\"20\">20</MenuItem>\n              <MenuItem value=\"21\">21</MenuItem>\n              <MenuItem value=\"22\">22</MenuItem>\n              <MenuItem value=\"23\">23</MenuItem>\n              <MenuItem value=\"24\">24</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Minute</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-minute\"\n              value={state.minute}\n              name=\"minute\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"00\">00</MenuItem>\n              <MenuItem value=\"05\">05</MenuItem>\n              <MenuItem value=\"10\">10</MenuItem>\n              <MenuItem value=\"15\">15</MenuItem>\n              <MenuItem value=\"20\">20</MenuItem>\n              <MenuItem value=\"25\">25</MenuItem>\n              <MenuItem value=\"30\">30</MenuItem>\n              <MenuItem value=\"35\">35</MenuItem>\n              <MenuItem value=\"40\">40</MenuItem>\n              <MenuItem value=\"45\">45</MenuItem>\n              <MenuItem value=\"50\">50</MenuItem>\n              <MenuItem value=\"55\">55</MenuItem>\n            </Select>\n          </FormControl>\n          <br />\n          <br />\n          <br />\n          <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"classes-menu-roomNum\">Room</InputLabel>\n            <BootstrapInput\n              id=\"classes-menu-roomNum\"\n              value={state.room}\n              name=\"room\"\n              onChange={handleChange}\n            />\n          </FormControl>\n          <div className=\"classes-add-error\" id=\"classes-add-error\">\n            Please make sure that all items have been selected.\n          </div>\n        </div>\n        <button\n          className=\"classes-button\"\n          id=\"classes-create\"\n          onClick={() => setState(addClass(state))}\n        >\n          Add New Class\n        </button>\n        <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-save\" onClick={() => save(state, setState)}>\n          Save Classes\n        </Button>\n        <a href=\"#/\">\n          <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-return\">\n            Return to Map\n          </Button>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nfunction save(state, setState) {\n  let newList = state.classList;\n  async function update() {\n    for (let i=0; i < newList.length; i++) {\n      let ids = await fetch(\n      \"https://cs326-umap-amherst.herokuapp.com/buildings?name='\"+newList[i].building+\"'\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      }\n      ).then((res) => res.json());\n      newList[i].building = ids.results[0].id;\n    }\n    console.log(newList);\n    fetch(\n      \"https://cs326-umap-amherst.herokuapp.com/saveclasses\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({userID: state.userID, classList: newList}),\n      }\n      ).then(setState({...state, loaded: false}))\n      .catch(error => {\n        console.log(error);\n    });\n  }\n  update();\n}\n\n/**\n * Adds a class\n * @param state - current component state\n */\nfunction addClass(state) {\n  let validClass =\n    state.name !== \"\" &&\n    state.days !== \"\" &&\n    state.building !== \"\" &&\n    state.hour !== \"\" &&\n    state.minute !== \"\" &&\n    state.room !== \"room\";\n\n  if (!validClass) {\n    document.getElementById(\"classes-add-error\").style.display = \"block\";\n    return state;\n  } else {\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\n  }\n\n  let newClass = {\n    name: state.name,\n    days: state.days,\n    building: state.building,\n    time: state.hour + \":\" + state.minute + \":00\",\n    room: state.room,\n  };\n  let newList = state.classList;\n  newList.push(newClass);\n  toggleAddMenu();\n\n  return {\n    ...state,\n    classList: newList,\n  };\n}\n\n/**\n * Removes a class\n * @param state - current component state\n * @param i - index in classList array to reomve\n */\nfunction removeClass(state, i) {\n  let newList = state.classList;\n  newList.splice(i, 1);\n\n  return {\n    ...state,\n    classList: newList,\n  };\n}\n\n/**\n *  Toggles Adding New Class Menu\n */\nfunction toggleAddMenu() {\n  if (document.getElementById(\"classes-list\").style.display !== \"none\") {\n    document.getElementById(\"classes-list\").style.display = \"none\";\n    document.getElementById(\"classes-save\").style.display = \"none\";\n    document.getElementById(\"classes-return\").style.display = \"none\";\n    document.getElementById(\"classes-add\").innerHTML = \"Go Back\";\n    document.getElementById(\"classes-menu\").style.display = \"block\";\n    document.getElementById(\"classes-create\").style.display = \"block\";\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\n  } else {\n    document.getElementById(\"classes-list\").style.display = \"block\";\n    document.getElementById(\"classes-save\").style.display = \"flex\";\n    document.getElementById(\"classes-return\").style.display = \"flex\";\n    document.getElementById(\"classes-menu\").style.display = \"none\";\n    document.getElementById(\"classes-add\").innerHTML = \"Add Class\";\n    document.getElementById(\"classes-create\").style.display = \"none\";\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n","import React from \"react\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {GridOverlay, DataGrid} from \"@material-ui/data-grid\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport MapIcon from '@material-ui/icons/Map';\nimport SaveIcon from '@material-ui/icons/Save';\nimport KeyboardTimePicker from '@material-ui/lab/DateTimePicker';\nimport {CardContent, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport axios from 'axios'\n\nexport default class Stops extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search:\"\",\n            columns:\n                [\n                {\n                    field: 'location',\n                    headerName: 'Location',\n                    description: 'This column has the location of pit stops',\n                    sortable: true,\n                    width: 300\n                },\n                {\n                    field: 'time',\n                    headerName: 'Time',\n                    description: 'This column has the time selector',\n                    sortable: false,\n                    width: 300,\n                    renderCell: (params) => (\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <KeyboardTimePicker\n                                renderInput={(params) => <TextField {...params} helperText={null}/>}\n                                inputFormat=\"EEEE - hh:mm a\"\n                                openTo={\"date\"}\n                                value={this.state.rows[params.row.id].time}\n                                disabled={!this.state.rows[params.row.id].selected}\n                                onChange={(newValue) => {\n                                    let rs = this.state.rows;\n                                    rs[params.row.id].time = newValue;\n                                    this.setState({rows: rs});\n\n                                }}\n                            />\n                        </LocalizationProvider>\n                    )\n                }\n                ],\n            rows: [],\n            selected: []\n        };\n        this.searchFilter = this.searchFilter.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.getData = this.getData.bind(this);\n        this.saveData = this.saveData.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n\n    getData = async () => {\n\n        if (localStorage.getItem(\"user\")) {\n            let userJSON = JSON.parse(localStorage.getItem(\"user\"));\n            let user = userJSON.id;\n\n            let pitstops = await axios.get('https://cs326-umap-amherst.herokuapp.com/pitstops');\n            let selectedStops = await axios.get('https://cs326-umap-amherst.herokuapp.com/userpitstops', {params: {userID: user}});\n\n            let data = pitstops.data;\n            let selectedRows = selectedStops.data.results;\n\n            let selectedRowIds = selectedStops.data.results.map(a => {\n                return a[\"stopid\"];\n            });\n            let newRows = data.results.map(a => {\n                a[\"time\"] = new Date();\n                a[\"selected\"] = selectedRows.filter(b => {\n                    return b[\"stopid\"] === a[\"id\"];\n                }).length !== 0;\n                if (a[\"selected\"] === true) {\n                    a[\"time\"] = new Date(selectedRows.filter(b => {\n                        return b[\"stopid\"] === a[\"id\"];\n                    })[0][\"stoptime\"]);\n                }\n                return a;\n            });\n            this.setState({rows: newRows, selected: selectedRowIds});\n        }\n    };\n\n\n    saveData() {\n\n        if (localStorage.getItem(\"user\")) {\n            let userJSON = JSON.parse(localStorage.getItem(\"user\"));\n            let user = userJSON.id;\n            axios.post('https://cs326-umap-amherst.herokuapp.com/savepitstops', {\n                userID: user,\n                rows: this.state.rows.filter(a => {\n                    return a[\"selected\"] === true\n                })\n            })\n                .then(function (response) {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n    }\n\n    handleChange (event) {\n        this.setState({search:event.target.value});\n    };\n\n    searchFilter(row) {\n        let stringSearch = this.state.search.trim() === \"\" || row.location.toLowerCase().includes(this.state.search.toLowerCase());\n        let options = { weekday: 'long', hour: 'numeric', minute: 'numeric' };\n        let timeSearch = row.selected && row.time.toLocaleDateString(\"en-US\", options).toLowerCase().includes(this.state.search.toLowerCase());\n        return stringSearch || timeSearch;\n    }\n\n\n\n    render() {\n\n        const classes = makeStyles((theme) => ({\n            margin: {\n                margin: theme.spacing(1),\n            },\n        }));\n\n        return (\n            <div>\n\n                <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n\n                    <Grid item xs={12}>\n                        <Typography variant={'h4'}>Schedule Pit Stops</Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n\n                        <Card>\n                            <CardContent>\n                                <div className={classes.margin}>\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                        <Grid item>\n                                            <FormControl variant=\"filled\">\n                                                <InputLabel htmlFor=\"component-filled\">Search</InputLabel>\n                                                <FilledInput id=\"component-filled\" value={this.state.search} onChange={this.handleChange} />\n                                            </FormControl>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                                <DataGrid autoHeight disableColumnFilter={true} density=\"headerHeight\" rows={this.state.rows.filter(this.searchFilter)} columns={this.state.columns.map((column) => ({\n                                    ...column,\n                                    disableClickEventBubbling: true,\n                                }))} pageSize={5}\n                                          checkboxSelection\n                                          selectionModel={this.state.selected}\n                                          onRowSelected={(params) => {\n                                              let rs = this.state.rows;\n                                              rs[params.data.id].selected = params.isSelected;\n                                              this.setState({rows: rs});\n                                          }}\n                                          components={{\n                                              NoRowsOverlay: CustomNoRowsOverlay\n                                          }}\n\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n                            <Grid item xs={12} style={{textAlign: \"right\"}}>\n                                <Link to=\"/\" style={{textDecoration:\"none\"}}>\n                                    <Button variant=\"contained\" endIcon={<MapIcon />}>\n                                        Return to Map\n                                    </Button>\n                                </Link>\n\n                                    <Button disabled={!localStorage.getItem(\"user\")} variant=\"contained\" endIcon={<SaveIcon />} onClick={this.saveData}>\n                                        Save Pit Stops\n                                    </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nfunction CustomNoRowsOverlay() {\n    return (\n        <GridOverlay >\n            <div >User is not logged in</div>\n        </GridOverlay>\n    );\n}\n","import React, {useState} from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\n\nexport default function Login() \n{\n    const [open, isOpen] = useState(false);\n\n    const openForm = () => \n    {\n      isOpen(true);\n    };\n\n    const closeForm = () =>\n    {\n      isOpen(false);\n    }\n\n    const [id, setId] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [major, setMajor] = useState(\"\");\n    const [emailAddress, setEmailAddress] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [loginEmail, setLoginEmail] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n\n    const login = () => \n    {\n      axios.post('https://cs326-umap-amherst.herokuapp.com/savelogin', \n      {\n        email: loginEmail,\n        password: loginPassword\n      })\n      .then(function (response) \n      {\n        const loginUser = \n        [{\n          email: loginEmail,\n          id: response.data.id\n        }];\n\n        console.log(response);\n        localStorage.setItem(\"user\", JSON.stringify(loginUser));\n      })\n      .catch(function (error) \n      {\n        console.log(error);\n      });\n    };\n\n    const signup = () =>\n    {\n      axios.post('https://cs326-umap-amherst.herokuapp.com/savesignup', \n      {\n        id: id,\n        firstName: firstName,\n        lastName: lastName,\n        major: major,\n        emailAddress: emailAddress,\n        password: password\n      })\n      .then(function (response) \n      {\n        console.log(response);\n      })\n      .catch(function (error) \n      {\n        console.log(error);\n      });\n\n      closeForm();\n    };\n\n    return (\n      <div className = \"page\">\n\n          <div className = \"title\">\n              UMap Amherst\n          </div>\n\n          <div className = \"loginTitle\">\n              Login\n          </div>\n\n          <div className = \"emailField\">\n            <Grid className = \"emailIcon\">\n              <PersonIcon/>\n            </Grid>\n            <TextField label = \"Email Address\" variant = \"outlined\" error = {loginEmail === \"\"} onChange = {event => setLoginEmail(event.target.value)}/>\n          </div>\n\n          <div className = \"passwordField\">\n            <Grid className = \"passwordIcon\">\n              <LockIcon/>\n            </Grid>\n            <TextField label = \"Password\" type = \"Password\" variant = \"outlined\" error = {loginPassword === \"\"} onChange = {event => setLoginPassword(event.target.value)}/>\n          </div>\n\n          <div className = \"loginButton\">\n            <Button variant = \"contained\" onClick = {login} disabled = {loginEmail === \"\" || loginPassword === \"\"} href = \"/\">\n                Login\n            </Button>\n          </div>\n\n          <div className = \"createAccount\">\n            <Button onClick = {openForm}>\n              Create Account \n            </Button>\n            <Dialog open = {open} className = \"form\">  \n              <DialogTitle className = \"formTitle\"> Create Account </DialogTitle>\n                <Grid className = \"contactIcon\">\n                  <AccountBoxIcon style = {{fontSize: 45}}/>\n                </Grid>\n              <DialogContent>\n                <DialogContentText className = \"formHeader\">\n                  Please fill in each of the fields below.\n                </DialogContentText>\n                  <TextField label = \"ID\" variant = \"outlined\" margin = \"dense\" error = {id === \"\"} onChange = {event => setId(event.target.value)} fullWidth/>\n                  <TextField label = \"First Name\" variant = \"outlined\" margin = \"dense\" error = {firstName === \"\"}  onChange = {event => setFirstName(event.target.value)} fullWidth/>\n                  <TextField label = \"Last Name\" variant = \"outlined\" margin = \"dense\" error = {lastName === \"\"} onChange = {event => setLastName(event.target.value)} fullWidth/>\n                  <TextField label = \"Major\" variant = \"outlined\" margin = \"dense\" error = {major === \"\"} onChange = {event => setMajor(event.target.value)} fullWidth/>\n                  <TextField label = \"Email Address\" variant = \"outlined\" margin = \"dense\" error = {emailAddress === \"\"} onChange = {event => setEmailAddress(event.target.value)} fullWidth/>\n                  <TextField label = \"Password\" type = \"Password\" variant = \"outlined\" margin = \"dense\" error = {password === \"\"} onChange = {event => setPassword(event.target.value)} fullWidth/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick = {closeForm}>\n                  Close\n                </Button>\n                <Button onClick = {signup} disabled = {id === \"\" || firstName === \"\" || lastName === \"\" || major === \"\" || emailAddress === \"\" || password === \"\"}>\n                  Sign Up\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n\n          <div className = \"guest\">\n            <Link to = \"/\" className = \"guestLink\">\n              <Button>\n                Use as Guest\n              </Button>\n            </Link>\n          </div>\n      </div>\n    );\n}\n","import React from \"react\";\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Classes from \"./pages/Classes\";\nimport Stops from \"./pages/Stops\";\nimport Login from \"./pages/Login\";\nimport {\n  AppBar,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { Map as MapIcon } from \"@material-ui/icons\";\n\nfunction classesPageComponent() {\n  return (\n    <Grid item xs={8} className={\"innerPage\"}>\n      <Classes />\n    </Grid>\n  );\n}\n\nfunction homePageComponent() {\n  return (\n    <Grid item xs={10} className={\"innerPage\"}>\n      <Home />\n    </Grid>\n  );\n}\n\nfunction stopsPageComponent() {\n  return (\n    <Grid item xs={8} className={\"innerPage\"}>\n      <Stops />\n    </Grid>\n  );\n}\n\nfunction loginPageComponent() {\n  return (\n    <Grid item xs={4} className={\"innerPage\"}>\n      <Login />\n    </Grid>\n  );\n}\n\nexport default function App() {\n  return (\n    <HashRouter basename={\"/\"}>\n      <AppBar position=\"sticky\">\n        <Toolbar variant=\"dense\">\n          <Link to=\"/\" edge=\"start\">\n            <IconButton>\n              <MapIcon />\n            </IconButton>\n          </Link>\n          <Typography variant=\"h6\">UMap Amherst</Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={\"pageContainer\"}\n      >\n        <Switch>\n          <Route path=\"/\" exact component={homePageComponent} />\n          <Route path=\"/classes\" component={classesPageComponent} />\n          <Route path=\"/stops\" component={stopsPageComponent} />\n          <Route path=\"/login\" component={loginPageComponent} />\n        </Switch>\n      </Grid>\n    </HashRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./main.css\";\nimport \"./classes.css\";\nimport \"./login.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}