{"version":3,"sources":["components/MapComponent.js","pages/Home.js","pages/Classes.js","pages/Stops.js","pages/Login.js","App.js","index.js"],"names":["MapComponent","props","mapStyle","require","useState","map","setMap","maps","setMaps","useEffect","route","directions","api_result","routes","legs","steps","forEach","leg","idx","push","lat","start_location","lng","end_location","mapResultToCoords","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","handleLoadGoogleMapsAPI","defaultCenter","defaultZoom","onGoogleApiLoaded","yesIWantToUseGoogleMapApiInternals","bootstrapURLKeys","key","options","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","styles","draggableCursor","draggingCursor","Home","classname","time","buildingname","room","upcomingClasses","setUpcomingClasses","location","pitstops","setPitstops","timeUntilNextClass","setTimeUntilNextClass","setRoute","userData","localStorage","getItem","JSON","parse","userID","id","undefined","axios","request","method","url","then","res","data","catch","err","console","log","Grid","container","spacing","item","xs","Card","CardContent","Typography","variant","direction","justify","alignItems","Person","fontSize","email","justifyContent","to","IconButton","size","Edit","length","classInfo","stop","className","Classes","classes","useStyles","a","userEmail","split","Number","isInteger","get","state","backend","availableClasses","availableBuildings","params","currentClasses","classIDs","results","obj","class","classData","i","newClassData","buildingNames","building","newData","name","newClassList","days","monday","tuesday","wednesday","thursday","friday","newClass","setState","loaded","validID","classList","fetchData","hour","minute","classSelectDOM","buildingSelectDOM","keyVal","handleChange","event","target","value","selectClass","MenuItem","selectBuilding","listDOM","classDOM","style","float","onClick","newList","splice","removeClass","Button","endIcon","toggleAddMenu","textAlign","FormControl","formControl","InputLabel","Select","labelId","onChange","margin","htmlFor","BootstrapInput","document","getElementById","display","addClass","update","ids","post","error","save","href","innerHTML","makeStyles","theme","minWidth","selectEmpty","marginTop","withStyles","root","input","borderRadius","position","backgroundColor","palette","background","paper","border","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","Stops","getData","userJSON","user","selectedStops","selectedRows","selectedRowIds","newRows","Date","filter","b","rows","selected","search","columns","field","headerName","description","sortable","width","renderCell","LocalizationProvider","dateAdapter","AdapterDateFns","renderInput","TextField","helperText","inputFormat","openTo","row","disabled","newValue","rs","searchFilter","bind","saveData","this","response","stringSearch","trim","toLowerCase","includes","timeSearch","toLocaleDateString","weekday","FilledInput","autoHeight","disableColumnFilter","density","column","disableClickEventBubbling","pageSize","checkboxSelection","selectionModel","onRowSelected","isSelected","components","NoRowsOverlay","CustomNoRowsOverlay","textDecoration","React","Component","Login","open","isOpen","closeForm","firstName","setFirstName","lastName","setLastName","major","setMajor","emailAddress","setEmailAddress","password","setPassword","loginEmail","setLoginEmail","loginPassword","setLoginPassword","label","type","loginUser","setItem","stringify","Dialog","DialogTitle","DialogContent","DialogContentText","fullWidth","DialogActions","classesPageComponent","homePageComponent","stopsPageComponent","loginPageComponent","App","basename","AppBar","Toolbar","edge","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7e9b3c34.chunk.js","sourcesContent":["import GoogleMapReact from 'google-map-react';\nimport React, {useEffect, useState} from 'react';\n\n\nexport default function MapComponent(props) {\n    const mapStyle = require('../mapstyle.json');\n\n    let [map, setMap] = useState(null);\n    let [maps, setMaps] = useState(null);\n\n    useEffect( () => {\n        handleLoadGoogleMapsAPI(map, maps);\n    }, [props.route]);\n\n    function mapResultToCoords(api_result) {\n        let directions = [];\n        api_result.routes[0].legs[0].steps.forEach((leg, idx) => {\n            directions.push({lat: leg.start_location.lat, lng: leg.start_location.lng})\n            directions.push({lat: leg.end_location.lat, lng: leg.end_location.lng})\n        });\n        return directions;\n    }\n\n    function handleLoadGoogleMapsAPI() {\n        if (map && maps && props.route) {\n\n            if (!props.route) {\n                return;\n            }\n\n            let directions = mapResultToCoords(props.route);\n\n            const directionPath = new maps.Polyline({\n                path: directions,\n                geodesic: true,\n                strokeColor: \"#389C29\",\n                strokeOpacity: 1.0,\n                strokeWeight: 3,\n            });\n            directionPath.setMap(map);\n        }\n    }\n\n\n    return (\n        // Important! Always set the container height explicitly\n        <GoogleMapReact\n            defaultCenter={{lat: 42.389564, lng: -72.526512}}\n            defaultZoom={16}\n            onGoogleApiLoaded={({map, maps}) => {setMap(map); setMaps(maps);}}\n            yesIWantToUseGoogleMapApiInternals\n            bootstrapURLKeys={{key: \"AIzaSyAz2oL1-IeVDxCY7lWV2ivTZ3LIpEkrWEE\"}}\n            options={{\n                disableDefaultUI: true, // disable default map UI\n                draggable: true, // make map draggable\n                keyboardShortcuts: false, // disable keyboard shortcuts\n                scaleControl: true, // allow scale control\n                styles: mapStyle, // change default map styles\n                draggableCursor: 'grab',\n                draggingCursor: 'grabbing',\n            }}\n        >\n        </GoogleMapReact>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Edit, Person} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MapComponent from \"../components/MapComponent\";\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nexport default function Home() {\n\n    let [upcomingClasses, setUpcomingClasses] = useState([\n        {\n            classname: 'Today',\n            time: 'No Upcoming Classes',\n            buildingname: '',\n            room: '',\n        }\n    ]);\n\n    let [pitstops, setPitstops] = useState([\n        {\n            time: '',\n            location: 'No Pitstops'\n        }\n    ]);\n\n    let [timeUntilNextClass, setTimeUntilNextClass] = useState('No more classes today.');\n\n    let [route, setRoute] = useState(null);\n\n    useEffect(() => {\n        let userData = localStorage.getItem('user') && localStorage.getItem('user')[0] ? JSON.parse(localStorage.getItem('user'))[0] : {};\n        let userID = userData ? userData.id : -1;\n        if (userID !== -1 && userID !== undefined) {\n            axios.request({\n                method: 'get',\n                url: 'https://cs326-umap-amherst.herokuapp.com/home?userID=' + userID\n            }).then((res) => {\n                setUpcomingClasses(res.data['classes']);\n                setPitstops(res.data['stops']);\n                setTimeUntilNextClass(res.data['timeUntilNextClass']);\n                setRoute(res.data['route']);\n            }).catch((err) => {\n                console.log('Unable to connect to backend to load data.')\n            });\n        } else {\n            console.log('No user found. Current user data' + localStorage.getItem('user'))\n        }\n\n    }, [])\n\n    return (\n        <Grid container spacing={3}>\n\n            {/*Sidebar*/}\n            <Grid item xs={4}>\n                <Grid container spacing={2}>\n\n                    {/*Student Information*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Account Information</Typography>\n\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n                                    <Grid item xs={2}>\n                                        <Person fontSize={'large'} />\n                                    </Grid>\n                                    <Grid item xs={10}>\n                                        {localStorage.getItem('user') && localStorage.getItem('user')[0] ?\n                                            <Typography variant={'body1'}>{JSON.parse(localStorage.getItem('user'))[0].email}</Typography>\n                                            :\n                                            <Typography variant={'body1'}>Not Logged In.</Typography>\n                                        }\n\n                                    </Grid>\n                                </Grid>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Upcoming Classes*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Upcoming Classes</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/classes\">\n                                            <IconButton size=\"small\" variant=\"outlined\">\n                                                <Edit />\n                                            </IconButton>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {upcomingClasses.length === 0 &&\n                                    <Typography variant={'body1'}>No more classes today.</Typography>\n                                }\n                                {upcomingClasses.map((classInfo, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{classInfo.classname}: {classInfo.buildingname} {classInfo.room}  <b>{classInfo.time}</b></Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Pit stops*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n\n                                <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography variant={'h6'}>Scheduled Pit Stops</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link to=\"/stops\">\n                                            <IconButton size=\"small\" variant=\"outlined\">\n                                                <Edit />\n                                            </IconButton>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                {pitstops.length === 0 &&\n                                <Typography variant={'body1'}>No more pitstops today.</Typography>\n                                }\n                                {pitstops.map((stop, idx) =>\n                                    <Typography key={idx} variant={'body1'}>{stop.location}  <b>{stop.time}</b></Typography>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    {/*Class Info*/}\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant={'h6'}>Time Until Next Class</Typography>\n                                <Typography variant={'body1'}>{timeUntilNextClass}</Typography>\n\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n\n\n            {/*Map*/}\n            <Grid item xs={8} className={'mapContainer'}>\n                <MapComponent route={route} />\n            </Grid>\n\n        </Grid>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport MapIcon from \"@material-ui/icons/Map\";\nimport axios from \"axios\";\n\nexport default function Classes() {\n  const classes = useStyles();\n\n  useEffect(() => {\n    // Attempt to fetch backend data\n    if (state.loaded === false && state.validID === false) fetchData();\n\n    // Loading data from backend\n    async function fetchData() {\n      let userData =\n        localStorage.getItem(\"user\") && localStorage.getItem(\"user\")[0]\n          ? JSON.parse(localStorage.getItem(\"user\"))[0]\n          : {};\n      let userID = userData.id ? userData.id : -1;\n      let userEmail = userData.email ? userData.email.split(\"@\")[0] : \"\";\n\n      if (Number.isInteger(userID) && userID >= 0) {\n        // Loads available classes to select from SQL\n        let availableClasses = await axios.get(state.backend + \"/classOptions\");\n\n        // Loads available buildings to select from SQL\n        let availableBuildings = await axios.get(state.backend + \"/buildings\");\n\n        // Loads current user classes from database\n        let currentClasses = await axios.get(state.backend + \"/userclasses\", {\n          params: { userID: userID },\n        });\n\n        let classIDs = [];\n        currentClasses.data.results.map((obj) => classIDs.push(obj.class));\n\n        let classData = [];\n        for (let i = 0; i < classIDs.length; i++) {\n          let newClassData = await axios.get(state.backend + \"/classes\", {\n            params: { id: classIDs[i] },\n          });\n          classData.push(newClassData.data.results[0]);\n        }\n\n        let buildingNames = [];\n        for (let i = 0; i < classData.length; i++) {\n          let newData = await axios.get(state.backend + \"/buildings\", {\n            params: { id: classData[i].building },\n          });\n          buildingNames.push(newData.data.results[0].name);\n        }\n\n        let newClassList = [];\n        for (let i = 0; i < classData.length; i++) {\n          let days = \"\";\n          if (classData[i].monday === true) days += \"Mon \";\n          if (classData[i].tuesday === true) days += \"Tues \";\n          if (classData[i].wednesday === true) days += \"Wed \";\n          if (classData[i].thursday === true) days += \"Thurs \";\n          if (classData[i].friday === true) days += \"Fri \";\n          let newClass = {\n            name: classData[i].name,\n            room: classData[i].room,\n            time: classData[i].time,\n            building: buildingNames[i],\n            days: days,\n          };\n          newClassList.push(newClass);\n        }\n\n        // Render loaded data\n        setState({\n          ...state,\n          loaded: true,\n          validID: true,\n          userID: userID,\n          email: userEmail,\n          availableClasses: availableClasses.data.results,\n          availableBuildings: availableBuildings.data.results,\n          currentClasses: currentClasses.results,\n          classList: newClassList,\n        });\n      } else {\n        // Render invalid credentials\n        setState({\n          ...state,\n          loaded: true,\n          validID: false,\n          userID: userID,\n        });\n      }\n    }\n  });\n\n  // Component state\n  const [state, setState] = useState({\n    name: \"\",\n    days: \"\",\n    building: \"\",\n    hour: \"\",\n    minute: \"\",\n    time: \"\",\n    room: \"001\",\n    classList: [],\n    classSelectDOM: [],\n    buildingSelectDOM: [],\n    availableClasses: [],\n    availableBuildings: [],\n    currentClasses: [],\n    keyVal: 0,\n    loaded: false,\n    validID: false,\n    userID: 0,\n    email: \"\",\n    backend: \"https://cs326-umap-amherst.herokuapp.com\",\n  });\n\n  // Event handler\n  const handleChange = (event) => {\n    const name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n  // Loading all selectable class that are available to add\n  state.classSelectDOM = [];\n  for (let i = 0; i < state.availableClasses.length; i++) {\n    let selectClass = (\n      <MenuItem value={state.availableClasses[i].name} key={state.keyVal++}>\n        {state.availableClasses[i].name}\n      </MenuItem>\n    );\n    state.classSelectDOM.push(selectClass);\n  }\n  // Loading all selectable buildings that are available to add\n  state.buildingSelectDOM = [];\n  for (let i = 0; i < state.availableBuildings.length; i++) {\n    let selectBuilding = (\n      <MenuItem value={state.availableBuildings[i].name} key={state.keyVal++}>\n        {state.availableBuildings[i].name}\n      </MenuItem>\n    );\n    state.buildingSelectDOM.push(selectBuilding);\n  }\n\n  let listDOM = []; // stores class list dom\n  // Loading all of the classes\n  for (let i = 0; i < state.classList.length; i++) {\n    let classDOM = (\n      <div className=\"classes-list-item\" key={state.keyVal++}>\n        <div>\n          {state.classList[i].name}{\" \"}\n          <span style={{ float: \"right\" }}>{state.classList[i].days}</span>\n        </div>\n        <div>\n          {state.classList[i].building}{\" \"}\n          <span style={{ float: \"right\" }}>{state.classList[i].time}</span>\n        </div>\n        <div>Room {state.classList[i].room}</div>\n        <button\n          className=\"classes-button\"\n          onClick={() => setState(removeClass(state, i))}\n        >\n          Remove\n        </button>\n      </div>\n    );\n    listDOM.push(classDOM);\n  }\n\n  // No classes loaded check\n  if (listDOM.length === 0) {\n    listDOM = (\n      <div className=\"classes-list-item\">\n        <div>No classes scheduled :(</div>\n        <br />\n        <br />\n        <div>Try refreshing the page? Or add class through the add button!</div>\n        <Button\n          variant=\"contained\"\n          endIcon={<MapIcon />}\n          id=\"classes-return\"\n          onClick={() => setState({ ...state, loaded: false })}\n        >\n          Refresh\n        </Button>\n      </div>\n    );\n  }\n\n  // Data is loading\n  if (state.loaded === false) {\n    return (\n      <div>\n        <div className=\"classes-dashboard\">\n          <span className=\"classes-title\">Class Schedule</span>\n          <div className=\"classes-list\" id=\"classes-list\">\n            <div className=\"classes-list-item\">\n              <div>LOADING DATA...</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Invalid login credentials\n  if (state.loaded === true && state.validID === false) {\n    return (\n      <div>\n        <div className=\"classes-dashboard\">\n          <span className=\"classes-title\">Class Schedule</span>\n          <div className=\"classes-list\" id=\"classes-list\">\n            <div className=\"classes-list-item\">\n              <div>Invalid login credentials.</div>\n              <br />\n              <br />\n              <div>Please login again.</div>\n              <Link to=\"/login\">\n                <Button\n                  variant=\"contained\"\n                  endIcon={<MapIcon />}\n                  id=\"classes-return\"\n                >\n                  Login\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"classes-dashboard\">\n        <div>\n          <span className=\"classes-title\">Class Schedule</span>\n          <button\n            className=\"classes-button\"\n            id=\"classes-add\"\n            onClick={toggleAddMenu}\n          >\n            Add Class\n          </button>\n        </div>\n        <div className=\"classes-list\" id=\"classes-list\">\n          <div className=\"classes-list-item\">\n            <div style={{ textAlign: \"center\" }}>\n              Welcome {state.email} (#{state.userID})\n            </div>\n            <div style={{ textAlign: \"center\" }}>\n              Showing {state.classList.length} Selected Classes\n            </div>\n          </div>\n          {listDOM}\n        </div>\n        <div className=\"classes-menu\" id=\"classes-menu\">\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Class</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-name\"\n              value={state.name}\n              name=\"name\"\n              onChange={handleChange}\n            >\n              {state.classSelectDOM}\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Days</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-days\"\n              value={state.days}\n              name=\"days\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"Mon Wed Fri\">Mon Wed Fri</MenuItem>\n              <MenuItem value=\"Mon Wed\">Mon Wed</MenuItem>\n              <MenuItem value=\"Tues Thurs\">Tues Thurs</MenuItem>\n              <MenuItem value=\"Mon\">Mon</MenuItem>\n              <MenuItem value=\"Tues\">Tues</MenuItem>\n              <MenuItem value=\"Wed\">Wed</MenuItem>\n              <MenuItem value=\"Thurs\">Thurs</MenuItem>\n              <MenuItem value=\"Fri\">Fri</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Building</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-building\"\n              value={state.building}\n              name=\"building\"\n              onChange={handleChange}\n            >\n              {state.buildingSelectDOM}\n            </Select>\n          </FormControl>\n          <br />\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Hour</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-hour\"\n              value={state.hour}\n              name=\"hour\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"1\">1</MenuItem>\n              <MenuItem value=\"2\">2</MenuItem>\n              <MenuItem value=\"3\">3</MenuItem>\n              <MenuItem value=\"4\">4</MenuItem>\n              <MenuItem value=\"5\">5</MenuItem>\n              <MenuItem value=\"6\">6</MenuItem>\n              <MenuItem value=\"7\">7</MenuItem>\n              <MenuItem value=\"8\">8</MenuItem>\n              <MenuItem value=\"9\">9</MenuItem>\n              <MenuItem value=\"10\">10</MenuItem>\n              <MenuItem value=\"11\">11</MenuItem>\n              <MenuItem value=\"12\">12</MenuItem>\n              <MenuItem value=\"13\">13</MenuItem>\n              <MenuItem value=\"14\">14</MenuItem>\n              <MenuItem value=\"15\">15</MenuItem>\n              <MenuItem value=\"16\">16</MenuItem>\n              <MenuItem value=\"17\">17</MenuItem>\n              <MenuItem value=\"18\">18</MenuItem>\n              <MenuItem value=\"19\">19</MenuItem>\n              <MenuItem value=\"20\">20</MenuItem>\n              <MenuItem value=\"21\">21</MenuItem>\n              <MenuItem value=\"22\">22</MenuItem>\n              <MenuItem value=\"23\">23</MenuItem>\n              <MenuItem value=\"24\">24</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Minute</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"classes-menu-minute\"\n              value={state.minute}\n              name=\"minute\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"00\">00</MenuItem>\n              <MenuItem value=\"05\">05</MenuItem>\n              <MenuItem value=\"10\">10</MenuItem>\n              <MenuItem value=\"15\">15</MenuItem>\n              <MenuItem value=\"20\">20</MenuItem>\n              <MenuItem value=\"25\">25</MenuItem>\n              <MenuItem value=\"30\">30</MenuItem>\n              <MenuItem value=\"35\">35</MenuItem>\n              <MenuItem value=\"40\">40</MenuItem>\n              <MenuItem value=\"45\">45</MenuItem>\n              <MenuItem value=\"50\">50</MenuItem>\n              <MenuItem value=\"55\">55</MenuItem>\n            </Select>\n          </FormControl>\n          <br />\n          <br />\n          <br />\n          <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"classes-menu-roomNum\">Room</InputLabel>\n            <BootstrapInput\n              id=\"classes-menu-roomNum\"\n              value={state.room}\n              name=\"room\"\n              onChange={handleChange}\n            />\n          </FormControl>\n          <div className=\"classes-add-error\" id=\"classes-add-error\">\n            Please make sure that all items have been selected.\n          </div>\n        </div>\n        <button\n          className=\"classes-button\"\n          id=\"classes-create\"\n          onClick={() => setState(addClass(state))}\n        >\n          Add New Class\n        </button>\n        <Button\n          variant=\"contained\"\n          endIcon={<MapIcon />}\n          id=\"classes-save\"\n          onClick={() => save(state, setState)}\n        >\n          Save Classes\n        </Button>\n        <a href=\"#/\">\n          <Button variant=\"contained\" endIcon={<MapIcon />} id=\"classes-return\">\n            Return to Map\n          </Button>\n        </a>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Saves new classes\n * @param state - current component state\n * @param setState - component setState fuction\n */\nfunction save(state, setState) {\n  let newList = state.classList;\n  async function update() {\n    for (let i = 0; i < newList.length; i++) {\n      let ids = await axios.get(state.backend + \"/buildings\", {\n        params: { name: \"'\" + newList[i].building + \"'\" },\n      });\n      newList[i].building = ids.data.results[0].id;\n    }\n\n    axios\n      .post(state.backend + \"/saveclasses\", {\n        userID: state.userID,\n        classList: newList,\n      })\n      .then(setState({ ...state, loaded: false }))\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  update();\n}\n\n/**\n * Adds a class\n * @param state - current component state\n */\nfunction addClass(state) {\n  let validClass =\n    state.name !== \"\" &&\n    state.days !== \"\" &&\n    state.building !== \"\" &&\n    state.hour !== \"\" &&\n    state.minute !== \"\" &&\n    state.room !== \"room\";\n\n  if (!validClass) {\n    document.getElementById(\"classes-add-error\").style.display = \"block\";\n    return state;\n  } else {\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\n  }\n\n  let newClass = {\n    name: state.name,\n    days: state.days,\n    building: state.building,\n    time: state.hour + \":\" + state.minute + \":00\",\n    room: state.room,\n  };\n  let newList = state.classList;\n  newList.push(newClass);\n  toggleAddMenu();\n\n  return {\n    ...state,\n    classList: newList,\n  };\n}\n\n/**\n * Removes a class\n * @param state - current component state\n * @param i - index in classList array to reomve\n */\nfunction removeClass(state, i) {\n  let newList = state.classList;\n  newList.splice(i, 1);\n\n  return {\n    ...state,\n    classList: newList,\n  };\n}\n\n/**\n *  Toggles Adding New Class Menu\n */\nfunction toggleAddMenu() {\n  if (document.getElementById(\"classes-list\").style.display !== \"none\") {\n    document.getElementById(\"classes-list\").style.display = \"none\";\n    document.getElementById(\"classes-save\").style.display = \"none\";\n    document.getElementById(\"classes-return\").style.display = \"none\";\n    document.getElementById(\"classes-add\").innerHTML = \"Go Back\";\n    document.getElementById(\"classes-menu\").style.display = \"block\";\n    document.getElementById(\"classes-create\").style.display = \"block\";\n    document.getElementById(\"classes-add-error\").style.display = \"none\";\n  } else {\n    document.getElementById(\"classes-list\").style.display = \"block\";\n    document.getElementById(\"classes-save\").style.display = \"flex\";\n    document.getElementById(\"classes-return\").style.display = \"flex\";\n    document.getElementById(\"classes-menu\").style.display = \"none\";\n    document.getElementById(\"classes-add\").innerHTML = \"Add Class\";\n    document.getElementById(\"classes-create\").style.display = \"none\";\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"10px 26px 10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n","import React from \"react\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {GridOverlay, DataGrid} from \"@material-ui/data-grid\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport MapIcon from '@material-ui/icons/Map';\nimport SaveIcon from '@material-ui/icons/Save';\nimport KeyboardTimePicker from '@material-ui/lab/DateTimePicker';\nimport {CardContent, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport axios from 'axios'\n\nexport default class Stops extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search:\"\",\n            columns:\n                [\n                {\n                    field: 'location',\n                    headerName: 'Location',\n                    description: 'This column has the location of pit stops',\n                    sortable: true,\n                    width: 300\n                },\n                {\n                    field: 'time',\n                    headerName: 'Time',\n                    description: 'This column has the time selector',\n                    sortable: false,\n                    width: 300,\n                    renderCell: (params) => (\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <KeyboardTimePicker\n                                renderInput={(params) => <TextField {...params} helperText={null}/>}\n                                inputFormat=\"EEEE - hh:mm a\"\n                                openTo={\"date\"}\n                                value={this.state.rows[params.row.id].time}\n                                disabled={!this.state.rows[params.row.id].selected}\n                                onChange={(newValue) => {\n                                    let rs = this.state.rows;\n                                    rs[params.row.id].time = newValue;\n                                    this.setState({rows: rs});\n\n                                }}\n                            />\n                        </LocalizationProvider>\n                    )\n                }\n                ],\n            rows: [],\n            selected: []\n        };\n        this.searchFilter = this.searchFilter.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.getData = this.getData.bind(this);\n        this.saveData = this.saveData.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n\n    getData = async () => {\n\n        if (localStorage.getItem(\"user\")) {\n            let userJSON = JSON.parse(localStorage.getItem(\"user\"));\n            let user = userJSON.id;\n\n            let pitstops = await axios.get('https://cs326-umap-amherst.herokuapp.com/pitstops');\n            let selectedStops = await axios.get('https://cs326-umap-amherst.herokuapp.com/userpitstops', {params: {userID: user}});\n\n            let data = pitstops.data;\n            let selectedRows = selectedStops.data.results;\n\n            let selectedRowIds = selectedStops.data.results.map(a => {\n                return a[\"stopid\"];\n            });\n            let newRows = data.results.map(a => {\n                a[\"time\"] = new Date();\n                a[\"selected\"] = selectedRows.filter(b => {\n                    return b[\"stopid\"] === a[\"id\"];\n                }).length !== 0;\n                if (a[\"selected\"] === true) {\n                    a[\"time\"] = new Date(selectedRows.filter(b => {\n                        return b[\"stopid\"] === a[\"id\"];\n                    })[0][\"stoptime\"]);\n                }\n                return a;\n            });\n            this.setState({rows: newRows, selected: selectedRowIds});\n        }\n    };\n\n\n    saveData() {\n\n        if (localStorage.getItem(\"user\")) {\n            let userJSON = JSON.parse(localStorage.getItem(\"user\"));\n            let user = userJSON.id;\n            axios.post('https://cs326-umap-amherst.herokuapp.com/savepitstops', {\n                userID: user,\n                rows: this.state.rows.filter(a => {\n                    return a[\"selected\"] === true\n                })\n            })\n                .then(function (response) {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n    }\n\n    handleChange (event) {\n        this.setState({search:event.target.value});\n    };\n\n    searchFilter(row) {\n        let stringSearch = this.state.search.trim() === \"\" || row.location.toLowerCase().includes(this.state.search.toLowerCase());\n        let options = { weekday: 'long', hour: 'numeric', minute: 'numeric' };\n        let timeSearch = row.selected && row.time.toLocaleDateString(\"en-US\", options).toLowerCase().includes(this.state.search.toLowerCase());\n        return stringSearch || timeSearch;\n    }\n\n\n\n    render() {\n\n        const classes = makeStyles((theme) => ({\n            margin: {\n                margin: theme.spacing(1),\n            },\n        }));\n\n        return (\n            <div>\n\n                <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n\n                    <Grid item xs={12}>\n                        <Typography variant={'h4'}>Schedule Pit Stops</Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n\n                        <Card>\n                            <CardContent>\n                                <div className={classes.margin}>\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                        <Grid item>\n                                            <FormControl variant=\"filled\">\n                                                <InputLabel htmlFor=\"component-filled\">Search</InputLabel>\n                                                <FilledInput id=\"component-filled\" value={this.state.search} onChange={this.handleChange} />\n                                            </FormControl>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                                <DataGrid autoHeight disableColumnFilter={true} density=\"headerHeight\" rows={this.state.rows.filter(this.searchFilter)} columns={this.state.columns.map((column) => ({\n                                    ...column,\n                                    disableClickEventBubbling: true,\n                                }))} pageSize={5}\n                                          checkboxSelection\n                                          selectionModel={this.state.selected}\n                                          onRowSelected={(params) => {\n                                              let rs = this.state.rows;\n                                              rs[params.data.id].selected = params.isSelected;\n                                              this.setState({rows: rs});\n                                          }}\n                                          components={{\n                                              NoRowsOverlay: CustomNoRowsOverlay\n                                          }}\n\n                                />\n                            </CardContent>\n                        </Card>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n                            <Grid item xs={12} style={{textAlign: \"right\"}}>\n                                <Link to=\"/\" style={{textDecoration:\"none\"}}>\n                                    <Button variant=\"contained\" endIcon={<MapIcon />}>\n                                        Return to Map\n                                    </Button>\n                                </Link>\n\n                                    <Button disabled={!localStorage.getItem(\"user\")} variant=\"contained\" endIcon={<SaveIcon />} onClick={this.saveData}>\n                                        Save Pit Stops\n                                    </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nfunction CustomNoRowsOverlay() {\n    return (\n        <GridOverlay >\n            <div >User is not logged in</div>\n        </GridOverlay>\n    );\n}\n","import React, {useState} from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\n\nexport default function Login() \n{\n    const [open, isOpen] = useState(false);\n\n    const openForm = () => \n    {\n      isOpen(true);\n    };\n\n    const closeForm = () =>\n    {\n      isOpen(false);\n    }\n\n    const [id, setId] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [major, setMajor] = useState(\"\");\n    const [emailAddress, setEmailAddress] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [loginEmail, setLoginEmail] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n\n    const login = () => \n    {\n      axios.post('https://cs326-umap-amherst.herokuapp.com/savelogin', \n      {\n        email: loginEmail,\n        password: loginPassword\n      })\n      .then(function (response) \n      {\n        const loginUser = \n        [{\n          email: loginEmail,\n          id: response.data.id\n        }];\n\n        console.log(response);\n        localStorage.setItem(\"user\", JSON.stringify(loginUser));\n      })\n      .catch(function (error) \n      {\n        console.log(error);\n      });\n    };\n\n    const signup = () =>\n    {\n      axios.post('https://cs326-umap-amherst.herokuapp.com/savesignup', \n      {\n        id: id,\n        firstName: firstName,\n        lastName: lastName,\n        major: major,\n        emailAddress: emailAddress,\n        password: password\n      })\n      .then(function (response) \n      {\n        console.log(response);\n      })\n      .catch(function (error) \n      {\n        console.log(error);\n      });\n\n      closeForm();\n    };\n\n    return (\n      <div className = \"page\">\n\n          <div className = \"title\">\n              UMap Amherst\n          </div>\n\n          <div className = \"loginTitle\">\n              Login\n          </div>\n\n          <div className = \"emailField\">\n            <Grid className = \"emailIcon\">\n              <PersonIcon/>\n            </Grid>\n            <TextField label = \"Email Address\" variant = \"outlined\" error = {loginEmail === \"\"} onChange = {event => setLoginEmail(event.target.value)}/>\n          </div>\n\n          <div className = \"passwordField\">\n            <Grid className = \"passwordIcon\">\n              <LockIcon/>\n            </Grid>\n            <TextField label = \"Password\" type = \"Password\" variant = \"outlined\" error = {loginPassword === \"\"} onChange = {event => setLoginPassword(event.target.value)}/>\n          </div>\n\n          <div className = \"loginButton\">\n            <Button variant = \"contained\" onClick = {login} disabled = {loginEmail === \"\" || loginPassword === \"\"} href = \"/CS326-UMap-Amherst-Frontend/#\">\n                Login\n            </Button>\n          </div>\n\n          <div className = \"createAccount\">\n            <Button onClick = {openForm}>\n              Create Account \n            </Button>\n            <Dialog open = {open} className = \"form\">  \n              <DialogTitle className = \"formTitle\"> Create Account </DialogTitle>\n                <Grid className = \"contactIcon\">\n                  <AccountBoxIcon style = {{fontSize: 45}}/>\n                </Grid>\n              <DialogContent>\n                <DialogContentText className = \"formHeader\">\n                  Please fill in each of the fields below.\n                </DialogContentText>\n                  <TextField label = \"First Name\" variant = \"outlined\" margin = \"dense\" error = {firstName === \"\"}  onChange = {event => setFirstName(event.target.value)} fullWidth/>\n                  <TextField label = \"Last Name\" variant = \"outlined\" margin = \"dense\" error = {lastName === \"\"} onChange = {event => setLastName(event.target.value)} fullWidth/>\n                  <TextField label = \"Major\" variant = \"outlined\" margin = \"dense\" error = {major === \"\"} onChange = {event => setMajor(event.target.value)} fullWidth/>\n                  <TextField label = \"Email Address\" variant = \"outlined\" margin = \"dense\" error = {emailAddress === \"\"} onChange = {event => setEmailAddress(event.target.value)} fullWidth/>\n                  <TextField label = \"Password\" type = \"Password\" variant = \"outlined\" margin = \"dense\" error = {password === \"\"} onChange = {event => setPassword(event.target.value)} fullWidth/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick = {closeForm}>\n                  Close\n                </Button>\n                <Button onClick = {signup} disabled = {firstName === \"\" || lastName === \"\" || major === \"\" || emailAddress === \"\" || password === \"\"}>\n                  Sign Up\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n\n          <div className = \"guest\">\n            <Link to = \"/\" className = \"guestLink\">\n              <Button>\n                Use as Guest\n              </Button>\n            </Link>\n          </div>\n      </div>\n    );\n}\n","import React from \"react\";\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Classes from \"./pages/Classes\";\nimport Stops from \"./pages/Stops\";\nimport Login from \"./pages/Login\";\nimport {\n  AppBar,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { Map as MapIcon } from \"@material-ui/icons\";\n\nfunction classesPageComponent() {\n  return (\n    <Grid item xs={8} className={\"innerPage\"}>\n      <Classes />\n    </Grid>\n  );\n}\n\nfunction homePageComponent() {\n  return (\n    <Grid item xs={10} className={\"innerPage\"}>\n      <Home />\n    </Grid>\n  );\n}\n\nfunction stopsPageComponent() {\n  return (\n    <Grid item xs={8} className={\"innerPage\"}>\n      <Stops />\n    </Grid>\n  );\n}\n\nfunction loginPageComponent() {\n  return (\n    <Grid item xs={4} className={\"innerPage\"}>\n      <Login />\n    </Grid>\n  );\n}\n\nexport default function App() {\n  return (\n    <HashRouter basename={\"/\"}>\n      <AppBar position=\"sticky\">\n        <Toolbar variant=\"dense\">\n          <Link to=\"/\" edge=\"start\">\n            <IconButton>\n              <MapIcon />\n            </IconButton>\n          </Link>\n          <Typography variant=\"h6\">UMap Amherst</Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={\"pageContainer\"}\n      >\n        <Switch>\n          <Route path=\"/\" exact component={homePageComponent} />\n          <Route path=\"/classes\" component={classesPageComponent} />\n          <Route path=\"/stops\" component={stopsPageComponent} />\n          <Route path=\"/login\" component={loginPageComponent} />\n        </Switch>\n      </Grid>\n    </HashRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./main.css\";\nimport \"./classes.css\";\nimport \"./login.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}